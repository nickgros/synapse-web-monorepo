{"version":3,"file":"ActionRequiredCard-11ba6007.js","sources":["../../src/components/DownloadCart/ActionRequiredCard.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Paper,\n  PaperProps,\n  Skeleton,\n  styled,\n  Typography,\n} from '@mui/material'\nimport Icon from '../Icon'\nimport { StyledComponent } from '@emotion/styled'\n\nexport type ActionRequiredCardProps =\n  | {\n      title: React.ReactNode\n      description: React.ReactNode\n      actionNode: React.ReactNode\n      iconType: string\n      count?: number\n      isLoading?: false\n    }\n  | { isLoading: true }\n\nconst ActionRequiredCardContainer: StyledComponent<PaperProps> = styled(Paper, {\n  label: 'ActionRequiredCardContainer',\n})(({ theme }) => ({\n  padding: `${theme.spacing(2.5)} ${theme.spacing(4)}`,\n  display: 'grid',\n  alignItems: 'center',\n  gridTemplateColumns: '160px auto 200px',\n  gap: theme.spacing(4),\n}))\n\n/**\n * The ActionRequiredCard component renders a generic card that represents some action that a user must take to gain\n * download access to a file.\n * @param props\n * @returns\n */\nexport function ActionRequiredCard(props: ActionRequiredCardProps) {\n  if (props.isLoading) {\n    return <LoadingActionRequiredCard />\n  }\n  const { title, description, iconType, count, actionNode } = props\n  return (\n    <ActionRequiredCardContainer>\n      <Box sx={{ textAlign: 'center', minWidth: '100px' }}>\n        <Icon type={iconType} />\n      </Box>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"headline3\" sx={{ mb: 1 }}>\n          {title}\n        </Typography>\n        {count && (\n          <Typography variant={'smallText1'} sx={{ my: 1, color: 'grey.700' }}>\n            {count} File{count != 1 ? 's' : ''}\n          </Typography>\n        )}\n        <Typography variant={'smallText1'}>{description}</Typography>\n      </Box>\n      <Box sx={{ textAlign: 'center', marginLeft: 'auto' }}>{actionNode}</Box>\n    </ActionRequiredCardContainer>\n  )\n}\n\nexport function LoadingActionRequiredCard() {\n  return (\n    <ActionRequiredCardContainer>\n      <Skeleton variant=\"rectangular\" width={136} height={74} />\n      <div>\n        <Skeleton width={320} />\n        <Skeleton width={100} />\n      </div>\n      <Skeleton variant=\"rectangular\" width={160} height={33} />\n    </ActionRequiredCardContainer>\n  )\n}\n"],"names":["ActionRequiredCardContainer","styled","Paper","theme","ActionRequiredCard","props","jsx","LoadingActionRequiredCard","title","description","iconType","count","actionNode","jsxs","Box","Icon","Typography","Skeleton"],"mappings":"2SAuBA,MAAAA,EAAAC,EAAAC,EAAA,CAA+E,MAAA,6BAE/E,CAAA,EAAA,CAAA,CAAA,MAAAC,MAAA,CAAmB,QAAA,GAAAA,EAAA,QAAA,GAAA,KAAAA,EAAA,QAAA,CAAA,IACgC,QAAA,OACxC,WAAA,SACG,oBAAA,mBACS,IAAAA,EAAA,QAAA,CAAA,CAEvB,EAAA,EAQO,SAAAC,EAAAC,EAAA,CACL,GAAAA,EAAA,UACE,OAAAC,EAAAC,EAAA,CAAA,CAAA,EAEF,KAAA,CAAA,MAAAC,EAAA,YAAAC,EAAA,SAAAC,EAAA,MAAAC,EAAA,WAAAC,CAAA,EAAAP,EACA,OAAAQ,EAAAb,EAAA,CAAA,SAAA,CAEIM,EAAAQ,EAAA,CAAA,GAAA,CAAA,UAAA,SAAA,SAAA,OAAA,EAAA,SAAAR,EAAAS,EAAA,CAAA,KAAAL,CAAA,CAAA,EAAA,EAEAG,EAAAC,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,EAAA,SAAA,CAEER,EAAAU,EAAA,CAAA,QAAA,YAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAAR,CAAA,CAAA,EAEAG,GAAAE,EAAAG,EAAA,CAAA,QAAA,aAAA,GAAA,CAAA,GAAA,EAAA,MAAA,UAAA,EAAA,SAAA,CAGKL,EAAA,QAAMA,GAAA,EAAA,IAAA,EAAyB,EAAA,EAClCL,EAAAU,EAAA,CAAA,QAAA,aAAA,SAAAP,EAAA,CAE8C,EAAA,EAClDH,EAAAQ,EAAA,CAAA,GAAA,CAAA,UAAA,SAAA,WAAA,MAAA,EAAA,SAAAF,CAAA,CAAA,CACkE,CAAA,CAAA,CAGxE,CAEO,SAAAL,GAAA,CACL,OAAAM,EAAAb,EAAA,CAAA,SAAA,CAEIM,EAAAW,EAAA,CAAA,QAAA,cAAA,MAAA,IAAA,OAAA,GAAA,EAAwDJ,EAAA,MAAA,CAAA,SAAA,CAEtDP,EAAAW,EAAA,CAAA,MAAA,GAAA,CAAA,EAAsBX,EAAAW,EAAA,CAAA,MAAA,GAAA,CAAA,CACA,EAAA,EACxBX,EAAAW,EAAA,CAAA,QAAA,cAAA,MAAA,IAAA,OAAA,GAAA,CACwD,CAAA,CAAA,CAG9D;"}