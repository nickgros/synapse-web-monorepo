{"version":3,"file":"merge-8600c060.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createAssigner.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_assignMergeValue.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_safeGet.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/toPlainObject.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMergeDeep.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseMerge.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/merge.js"],"sourcesContent":["import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n"],"names":["createAssigner","assigner","baseRest","object","sources","index","length","customizer","guard","isIterateeCall","source","assignMergeValue","key","value","eq","baseAssignValue","safeGet","toPlainObject","copyObject","keysIn","baseMergeDeep","srcIndex","mergeFunc","stack","objValue","srcValue","stacked","newValue","isCommon","isArr","isArray","isBuff","isBuffer","isTyped","isTypedArray","isArrayLikeObject","copyArray","cloneBuffer","cloneTypedArray","isPlainObject","isArguments","isObject","isFunction","initCloneObject","baseMerge","baseFor","Stack","merge","merge$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}