{"version":3,"file":"useInfiniteQuery-e2e29633.js","sources":["../../../../node_modules/.pnpm/react-query@3.39.1_react-dom@18.2.0_react@18.2.0/node_modules/react-query/es/core/infiniteQueryObserver.js","../../../../node_modules/.pnpm/react-query@3.39.1_react-dom@18.2.0_react@18.2.0/node_modules/react-query/es/react/useInfiniteQuery.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }), notifyOptions);\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    var _options$cancelRefetc;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    var _options$cancelRefetc2;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc2 = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc2 : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useInfiniteQuery(arg1, arg2, arg3) {\n  var options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}"],"names":["InfiniteQueryObserver","_QueryObserver","_inheritsLoose","client","options","_proto","notifyOptions","_extends","infiniteQueryBehavior","_options$cancelRefetc","_options$cancelRefetc2","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","result","hasNextPage","hasPreviousPage","QueryObserver","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery"],"mappings":"mOAIO,IAAIA,EAAqC,SAAUC,EAAgB,CACxEC,EAAeF,EAAuBC,CAAc,EAMpD,SAASD,EAAsBG,EAAQC,EAAS,CAC9C,OAAOH,EAAe,KAAK,KAAME,EAAQC,CAAO,GAAK,IACtD,CAED,IAAIC,EAASL,EAAsB,UAEnC,OAAAK,EAAO,YAAc,UAAuB,CAC1CJ,EAAe,UAAU,YAAY,KAAK,IAAI,EAE9C,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,CAC7D,EAEEI,EAAO,WAAa,SAAoBD,EAASE,EAAe,CAC9DL,EAAe,UAAU,WAAW,KAAK,KAAMM,EAAS,CAAE,EAAEH,EAAS,CACnE,SAAUI,EAAuB,CACvC,CAAK,EAAGF,CAAa,CACrB,EAEED,EAAO,oBAAsB,SAA6BD,EAAS,CACjE,OAAAA,EAAQ,SAAWI,IACZP,EAAe,UAAU,oBAAoB,KAAK,KAAMG,CAAO,CAC1E,EAEEC,EAAO,cAAgB,SAAuBD,EAAS,CACrD,IAAIK,EAEJ,OAAO,KAAK,MAAM,CAEhB,eAAgBA,EAAwBL,GAAW,KAAO,OAASA,EAAQ,gBAAkB,KAAOK,EAAwB,GAC5H,aAAcL,GAAW,KAAO,OAASA,EAAQ,aACjD,KAAM,CACJ,UAAW,CACT,UAAW,UACX,UAAWA,GAAW,KAAO,OAASA,EAAQ,SAC/C,CACF,CACP,CAAK,CACL,EAEEC,EAAO,kBAAoB,SAA2BD,EAAS,CAC7D,IAAIM,EAEJ,OAAO,KAAK,MAAM,CAEhB,eAAgBA,EAAyBN,GAAW,KAAO,OAASA,EAAQ,gBAAkB,KAAOM,EAAyB,GAC9H,aAAcN,GAAW,KAAO,OAASA,EAAQ,aACjD,KAAM,CACJ,UAAW,CACT,UAAW,WACX,UAAWA,GAAW,KAAO,OAASA,EAAQ,SAC/C,CACF,CACP,CAAK,CACL,EAEEC,EAAO,aAAe,SAAsBM,EAAOP,EAAS,CAC1D,IAAIQ,EAAaC,EAAcC,EAAkBC,EAAuBC,EAAmBC,EAEvFC,EAAQP,EAAM,MAEdQ,EAASlB,EAAe,UAAU,aAAa,KAAK,KAAMU,EAAOP,CAAO,EAE5E,OAAOG,EAAS,CAAE,EAAEY,EAAQ,CAC1B,cAAe,KAAK,cACpB,kBAAmB,KAAK,kBACxB,YAAaC,EAAYhB,GAAUQ,EAAcM,EAAM,OAAS,KAAO,OAASN,EAAY,KAAK,EACjG,gBAAiBS,EAAgBjB,GAAUS,EAAeK,EAAM,OAAS,KAAO,OAASL,EAAa,KAAK,EAC3G,mBAAoBK,EAAM,cAAgBJ,EAAmBI,EAAM,YAAc,OAAiBH,EAAwBD,EAAiB,YAAc,KAAjE,OAAiFC,EAAsB,aAAe,UAC9M,uBAAwBG,EAAM,cAAgBF,EAAoBE,EAAM,YAAc,OAAiBD,EAAwBD,EAAkB,YAAc,KAAlE,OAAkFC,EAAsB,aAAe,UAC1N,CAAK,CACL,EAESjB,CACT,EAAEsB,CAAa,ECjFR,SAASC,EAAiBC,EAAMC,EAAMC,EAAM,CACjD,IAAItB,EAAUuB,EAAeH,EAAMC,EAAMC,CAAI,EAC7C,OAAOE,EAAaxB,EAASJ,CAAqB,CACpD","x_google_ignoreList":[0,1]}