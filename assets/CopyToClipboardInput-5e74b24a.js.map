{"version":3,"file":"CopyToClipboardInput-5e74b24a.js","sources":["../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/ContentCopy.js","../../src/components/CopyToClipboardInput.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');\nexports.default = _default;","import React from 'react'\nimport { Box, IconButton, InputAdornment, TextField } from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\nimport { ToastMessage } from './ToastMessage/ToastMessage'\n\nexport type CopyToClipboardInputProps = {\n  value: string\n  inputWidth: string\n}\n\n/**\n * Component that holds a large string in a readonly <input> to be copied to the user's clipboard when clicked.\n * This component should only be used when the full length of the string value to copy does not necessarily need to be\n * seen by the user. This component was adapted from the email address copy to clipboard functionality in UserCardMedium.\n * For smaller/inline strings, look at UserCardMedium functionality for displaying the value in a <p> tag instead of a\n * readonly <input> tag.\n */\nexport const CopyToClipboardInput: React.FunctionComponent<\n  CopyToClipboardInputProps\n> = ({ value, inputWidth }: CopyToClipboardInputProps) => {\n  const [showModal, setShowModal] = React.useState(false)\n  const ref = React.createRef<HTMLDivElement>()\n\n  const copyToClipboard =\n    (ref: React.RefObject<HTMLElement>, value: string) =>\n    (event: React.SyntheticEvent) => {\n      event.preventDefault()\n\n      // use the Clipboard API\n      // https://caniuse.com/mdn-api_clipboard_writetext\n      navigator.clipboard.writeText(value).then(() => {\n        // show modal and hide after 4 seconds, the timing is per Material Design\n        setShowModal(true)\n        // hide after 4 seconds\n        setTimeout(() => {\n          setShowModal(false)\n        }, 4000)\n      })\n    }\n\n  return (\n    <>\n      <ToastMessage\n        text=\"Successfully copied to clipboard\"\n        show={showModal}\n        autohide={true}\n      ></ToastMessage>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        sx={{\n          my: 2,\n          mx: 0,\n        }}\n        ref={ref}\n      >\n        <TextField\n          sx={{\n            width: inputWidth,\n          }}\n          value={value}\n          inputProps={{\n            readOnly: true,\n            onClick: copyToClipboard(ref, value),\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={copyToClipboard(ref, value)}>\n                  <ContentCopyIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default CopyToClipboardInput\n"],"names":["_interopRequireDefault","require$$0","ContentCopy","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","CopyToClipboardInput","value","inputWidth","showModal","setShowModal","React","ref","copyToClipboard","ref2","value2","event","jsxs","Fragment","jsx","ToastMessage","Box","TextField","InputAdornment","IconButton","ContentCopyIcon"],"mappings":"uZAEIA,EAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,EAAiBJ,EAAuBK,EAAA,CAAgC,EACxEC,EAAcC,EACdC,KAAeJ,EAAe,YAA2BE,EAAY,KAAK,OAAQ,CACpF,EAAG,iIACL,CAAC,EAAG,aAAa,EACjBH,EAAAD,EAAA,QAAkBM,ECKX,MAAAC,EAAA,CAAA,CAAA,MAAAC,EAAA,WAAAC,KAAA,CAGL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAD,EAAA,YAEAE,EAAA,CAAAC,EAAAC,IAAAC,GAAA,CAGIA,EAAA,eAAA,EAIA,UAAA,UAAA,UAAAD,CAAA,EAAA,KAAA,IAAA,CAEEL,EAAA,EAAA,EAEA,WAAA,IAAA,CACEA,EAAA,EAAA,CAAkB,EAAA,GAAA,CACb,CAAA,CACR,EAGL,OAAAO,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,KAAA,mCACM,KAAAX,EACC,SAAA,EACI,CAAA,EACXU,EACDE,EAAC,CAAA,QAAA,OACS,eAAA,SACO,GAAA,CACX,GAAA,EACE,GAAA,CACA,EACN,IAAAT,EACA,SAAAO,EAEAG,EAAC,CAAA,GAAA,CACK,MAAAd,CACK,EACT,MAAAD,EACA,WAAA,CACY,SAAA,GACA,QAAAM,EAAAD,EAAAL,CAAA,CACyB,EACrC,WAAA,CACY,aAAAY,EAAAI,EAAA,CAAA,SAAA,MAAA,SAAAJ,EAAAK,EAAA,CAAA,QAAAX,EAAAD,EAAAL,CAAA,EAAA,SAAAY,EAAAM,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAMR,CAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAGN;;;;","x_google_ignoreList":[0]}