import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-CCgyXTk-.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BxR8eTBH.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DMhoA1P2.js";import"./SynapseConstants-Bkj3gHJE.js";import"./OrientationBanner-Kcb1EbaG.js";import"./index-VuyhINOV.js";import"./index--_s_l9g5.js";import"./iframe-pyZDNJ8T.js";import"./spreadSx-CwcO6WA9.js";import"./react-BT7bNxW7.js";import"./FullWidthAlert-BTfzgsOK.js";import"./Alert-OS0t4bPf.js";import"./createTheme-DxJ79BXc.js";import"./DefaultPropsProvider-iW3t653H.js";import"./useSlot-DveTpe9j.js";import"./useForkRef-DuFVzXGe.js";import"./createSimplePaletteValueFilter-SAZZY-kP.js";import"./createSvgIcon-Dh3r7Et6.js";import"./Close-CqPBC-YI.js";import"./IconButton-BS4bgkyD.js";import"./useTimeout-DRuALipg.js";import"./ButtonBase-DR4l1HUk.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BnZig6ry.js";import"./Paper-CiTNHdWV.js";import"./useTheme-B0yWLZKw.js";import"./useTheme-ClYKScKD.js";import"./Stack-DvaAKiBz.js";import"./extendSxProp-DGPJAFUB.js";import"./getThemeProps-BU7lhVxx.js";import"./Box--i-_aWQj.js";import"./AlertTitle-s2NeJaUb.js";import"./Typography-D2khfl49.js";import"./index-cXJRHP25.js";import"./ClickAwayListener-Dd-apYwh.js";import"./getReactElementRef-J4nKeEsv.js";import"./index-X3wy_rbI.js";import"./index-BLshjiEN.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DUH0kjWn.js";import"./Tooltip-BXMy3cax.js";import"./index-HuzFGznI.js";import"./useControlled-CG1DbziZ.js";import"./Popper-D4LipFq_.js";import"./Button-DQEfVqin.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Mmwd0UGX.js";import"./QueryClientProvider-ZvUUiE0t.js";import"./Link-Br14C7fU.js";import"./Collapse-f9j8T1LX.js";import"./_baseUniq-DGhQ1Gxb.js";import"./_Uint8Array-CZ-bZX-p.js";import"./isArray-Y1hUIWuk.js";import"./_getTag-ByaQxPJR.js";import"./isEqual-BPgluCw7.js";import"./merge-Kg_vOFnX.js";import"./_initCloneObject-DaNCXzEh.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-Bo8PZvMt.js";import"./inputBaseClasses-Bt0ELv0W.js";import"./calculateFriendlyFileSize-CJJqCcxJ.js";import"./CheckCircleTwoTone-CvEuNtVO.js";import"./InfoTwoTone-6pdyjRO9.js";import"./useMutation-BlfAdHU_.js";import"./dayjs.min-DFoF1U9V.js";import"./chunk-AYJ5UCUI-CYpb56mu.js";import"./cloneDeep-azNH1Mt7.js";import"./Skeleton-BKtMPDz_.js";import"./SkeletonButton-BccUzQdQ.js";import"./SkeletonInlineBlock-zRyL9Gbk.js";import"./SkeletonTable-D3lzVgzH.js";import"./times-CaWXfkpY.js";import"./toInteger-DGWbuIPa.js";import"./isSymbol-DZd6qpcY.js";import"./SkeletonParagraph-ROXKOhOk.js";import"./MarkdownSynapse-CYzOUZzi.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
