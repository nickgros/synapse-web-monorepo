import{l as i}from"./index-9210e01a.js";import{U as E,d as p,e as f,f as c,g as $,h as P,i as g,P as I,N as R}from"./SynapseClient-7700f4cc.js";import{g as L,B as S}from"./getEndpoint-ac94413e.js";import{T as m}from"./index-3a31b023.js";import{m as U}from"./mockEntity-df766c91.js";import{m as l,a as d,b as _}from"./mock_user_profile-6e6bce0c.js";const w=u=>[i.rest.get(`${u}${E(":id")}`,async(t,r,s)=>{let e=404,o={reason:`Mock Service worker could not find a user profile with ID ${t.params.id}`};const a=l.find(n=>n.id.toString()===t.params.id);return a&&a.userProfile&&(o=a.userProfile,e=200),r(s.status(e),s.json(o))}),i.rest.get(`${u}${p}`,async(t,r,s)=>{const e=_,o=200;return r(s.status(o),s.json(e))}),i.rest.get(`${L(S.REPO_ENDPOINT)}${f}`,async(t,r,s)=>{const e=d;return r(s.status(200),s.json(e))}),i.rest.get(`${u}${c(":id")}`,async(t,r,s)=>{let e=404,o={reason:`Mock Service worker could not find a user bundle with ID ${t.params.id}`};const a=l.find(n=>n.id.toString()===t.params.id);return a&&a.userBundle&&(o=a.userBundle,e=200),r(s.status(e),s.json(o))}),i.rest.get(`${u}${$}`,async(t,r,s)=>r(s.status(200),s.json(U))),i.rest.get(`${u}${P}`,async(t,r,s)=>{const e=t.url.searchParams.get("ids").split(","),o={children:l.filter(a=>e.includes(a.id.toString())).map(a=>a.userGroupHeader)};return r(s.status(200),s.json(o))}),i.rest.post(`${u}${p}`,async(t,r,s)=>{const e=(await t.json()).list,o={list:l.filter(a=>e.includes(a.id.toString())).map(a=>a.userProfile).filter(a=>a!=null)};return r(s.status(200),s.json(o))}),i.rest.get(`${u}${g}`,async(t,r,s)=>{const e=(t.url.searchParams.get("prefix")??"").toLowerCase(),o=t.url.searchParams.get("typeFilter"),a={children:l.filter(n=>!o||o===m.ALL?!0:o===m.USERS_ONLY?n.userGroupHeader.isIndividual:!n.userGroupHeader.isIndividual).filter(n=>n.userGroupHeader.userName.toLowerCase().startsWith(e)||(n.userGroupHeader.firstName||"").toLowerCase().startsWith(e)||(n.userGroupHeader.displayName||"").toLowerCase().startsWith(e)||(n.userGroupHeader.lastName||"").toLowerCase().startsWith(e)).map(n=>n.userGroupHeader)};return r(s.status(200),s.json(a))}),i.rest.get(`${u}${I(":userId")}`,async(t,r,s)=>r(s.status(404),s.json({reason:"user has no profile image"}))),i.rest.get(`${u}${R}`,async(t,r,s)=>{var e;return r(s.status(200),s.json({email:(e=d.userProfile)==null?void 0:e.email}))}),i.rest.get(`${u}/auth/v1/2fa`,async(t,r,s)=>{const e={status:"ENABLED"};return r(s.status(200),s.json(e))})];function A(u,t,r){return i.rest.get(`${u}${f}`,async(s,e,o)=>{const n={...d,isCertified:t,isVerified:r};return e(o.status(200),o.json(n))})}export{w as a,A as g};
