{"version":3,"file":"EvaluationCard-7c129e05.js","sources":["../../src/components/Evaluation/EvaluationCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  deleteEvaluation,\n  getEvaluationPermissions,\n} from '../../synapse-client/SynapseClient'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { Evaluation } from '@sage-bionetworks/synapse-types'\nimport { Button } from '@mui/material'\nimport { Card, Col, Dropdown, Row } from 'react-bootstrap'\nimport { ErrorBanner } from '../error/ErrorBanner'\nimport { CreatedOnByUserDiv } from './CreatedOnByUserDiv'\nimport { UserEvaluationPermissions } from '@sage-bionetworks/synapse-types'\nimport { RequiredProperties } from '../../utils'\nimport WarningDialog from '../SynapseForm/WarningDialog'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport IconSvg from '../IconSvg/IconSvg'\n\nexport type ExistingEvaluation = RequiredProperties<\n  Evaluation,\n  'id' | 'etag' | 'createdOn' | 'contentSource' | 'ownerId'\n>\n\nexport type EvaluationCardProps = {\n  /** properties of the Evaluation to show*/\n  evaluation: ExistingEvaluation\n  /** Callback when the Edit option in the dropdown is clicked*/\n  onEdit: () => void\n  /** Callback when the Modify Access option in the dropdown is clicked*/\n  onModifyAccess: () => void\n  /** Callback when the Submit button is clicked*/\n  onSubmit: () => void\n  /** Callback when the Delete option is successful */\n  onDeleteSuccess: () => void\n}\n\n/**\n * This component is currently only intended to be used in Synapse.org.\n * For this reason, the dropdown menu items are unimplemented as no components\n * in this project implement their behavior. The dropdown options are also\n * not shown if the current user does not have permissions for the action\n *\n * All Evaluation metadata must be provided to this component; it will not\n * retrieve an Evaluation via a REST API call\n */\nexport const EvaluationCard: React.FunctionComponent<EvaluationCardProps> = ({\n  evaluation,\n  onEdit,\n  onModifyAccess,\n  onSubmit,\n  onDeleteSuccess,\n}: EvaluationCardProps) => {\n  const { accessToken } = useSynapseContext()\n  const [error, setError] = useState<SynapseClientError>()\n  const [permissions, setPermissions] = useState<UserEvaluationPermissions>()\n\n  useEffect(() => {\n    //clear error\n    setError(undefined)\n\n    getEvaluationPermissions(evaluation.id, accessToken)\n      .then(retrievedPermissions => {\n        setPermissions(retrievedPermissions)\n      })\n      .catch(error => setError(error))\n  }, [evaluation, accessToken])\n\n  const onDelete = () => {\n    setError(undefined)\n    deleteEvaluation(evaluation.id, accessToken)\n      .then(onDeleteSuccess)\n      .catch(setError)\n  }\n\n  return (\n    <div className=\"bootstrap-4-backport evaluation-card\">\n      <Card>\n        <Card.Body>\n          {error && <ErrorBanner error={error} />}\n\n          {permissions && (\n            <>\n              <Row>\n                <Col>\n                  <label>EVALUATION QUEUE</label>\n                </Col>\n                <Col>\n                  <EvaluationCardDropdown\n                    permissions={permissions}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                    onModifyAccess={onModifyAccess}\n                  />\n                </Col>\n              </Row>\n\n              <h4>\n                {evaluation.name} ({evaluation.id})\n              </h4>\n\n              <label>Description</label>\n              <p>{evaluation.description}</p>\n              <label>Instructions</label>\n              <p>{evaluation.submissionInstructionsMessage}</p>\n              <CreatedOnByUserDiv\n                userId={evaluation.ownerId}\n                date={new Date(evaluation.createdOn)}\n              />\n              {permissions?.canSubmit && (\n                <Button\n                  className=\"submit-button\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={onSubmit}\n                >\n                  Submit\n                </Button>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\ntype EvaluationCardDropdownProps = {\n  permissions: UserEvaluationPermissions\n  onEdit: () => void\n  onModifyAccess: () => void\n  onDelete: () => void\n}\n\nconst EvaluationCardDropdown: React.FunctionComponent<\n  EvaluationCardDropdownProps\n> = ({ permissions, onEdit, onModifyAccess, onDelete }) => {\n  const [deleteWarningShow, setDeleteWarningShow] = useState<boolean>(false)\n\n  if (\n    !(\n      permissions.canEdit ||\n      permissions.canChangePermissions ||\n      permissions.canDelete\n    )\n  ) {\n    return null\n  }\n  return (\n    <>\n      {permissions?.canDelete && (\n        <WarningDialog\n          title=\"Delete Evaluation Queue\"\n          content=\"Are you sure you want to delete the Evaluation Queue?\"\n          open={deleteWarningShow}\n          confirmButtonText=\"Delete\"\n          onConfirm={() => {\n            onDelete()\n            setDeleteWarningShow(false)\n          }}\n          onConfirmCallbackArgs={[]}\n          onCancel={() => {\n            setDeleteWarningShow(false)\n          }}\n          confirmButtonColor=\"error\"\n        />\n      )}\n      <Dropdown className=\"float-right\">\n        <Dropdown.Toggle\n          role=\"menu\"\n          aria-label=\"Options\"\n          variant=\"link\"\n          className=\"dropdown-no-caret\"\n        >\n          <IconSvg icon=\"verticalEllipsis\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu alignRight={true}>\n          {permissions.canEdit && (\n            <Dropdown.Item role=\"menuitem\" onClick={onEdit}>\n              Edit\n            </Dropdown.Item>\n          )}\n          {permissions.canChangePermissions && (\n            <Dropdown.Item role=\"menuitem\" onClick={onModifyAccess}>\n              Modify Access\n            </Dropdown.Item>\n          )}\n          {permissions.canDelete && (\n            <>\n              <Dropdown.Divider />\n              <Dropdown.Item\n                role=\"menuitem\"\n                onClick={() => setDeleteWarningShow(true)}\n              >\n                Delete\n              </Dropdown.Item>{' '}\n            </>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  )\n}\n"],"names":["EvaluationCard","evaluation","onEdit","onModifyAccess","onSubmit","onDeleteSuccess","accessToken","useSynapseContext","error","setError","useState","permissions","setPermissions","useEffect","getEvaluationPermissions","retrievedPermissions","error2","onDelete","deleteEvaluation","jsx","Card","jsxs","ErrorBanner","Fragment","Row","Col","EvaluationCardDropdown","CreatedOnByUserDiv","Button","deleteWarningShow","setDeleteWarningShow","WarningDialog","Dropdown","IconSvg"],"mappings":"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"}