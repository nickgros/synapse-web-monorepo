{"version":3,"file":"LoginFlowBackButton-1da94f70.js","sources":["../../src/utils/hooks/useLogin.ts","../../../../node_modules/.pnpm/mui-one-time-password-input@1.1.0_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+materia_cxjlq5vy6vrbvhdizjcoponpee/node_modules/mui-one-time-password-input/dist/mui-one-time-password-input.es.js","../../src/components/Authentication/TOTPForm.tsx","../../src/components/Authentication/UsernamePasswordForm.tsx","../../src/components/Authentication/AuthenticationMethodSelection.tsx","../../src/components/Authentication/RecoveryCodeForm.tsx","../../src/components/Authentication/LoginForm.tsx","../../src/components/Authentication/LoginFlowBackButton.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { LoginResponse } from '@sage-bionetworks/synapse-types'\nimport {\n  TwoFactorAuthLoginRequest,\n  TwoFactorAuthOtpType,\n} from '@sage-bionetworks/synapse-types'\nimport { TwoFactorAuthErrorResponse } from '@sage-bionetworks/synapse-types'\nimport { AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY } from '../SynapseConstants'\nimport { useMutation } from 'react-query'\nimport { SynapseClientError } from '../SynapseClientError'\nimport SynapseClient from '../../synapse-client'\n\nexport type UseLoginReturn = {\n  step:\n    | 'CHOOSE_AUTH_METHOD'\n    | 'USERNAME_PASSWORD'\n    | 'VERIFICATION_CODE'\n    | 'RECOVERY_CODE'\n    | 'LOGGED_IN'\n  onStepChange: Dispatch<SetStateAction<UseLoginReturn['step']>>\n  submitUsernameAndPassword: (username: string, password: string) => void\n  submitOneTimePassword: (\n    code: string,\n    /* The type of one time password code that can be used to authenticate through two-factor authentication. Default is based on current value of `step` */\n    otpType?: TwoFactorAuthOtpType,\n  ) => void\n  errorMessage: string | undefined\n  isLoading: boolean\n}\n\n/**\n * Stateful hook that manages logging into Synapse\n */\nexport default function useLogin(\n  sessionCallback?: () => void,\n  twoFaErrorResponse?: TwoFactorAuthErrorResponse,\n): UseLoginReturn {\n  const [step, setStep] = useState<UseLoginReturn['step']>('CHOOSE_AUTH_METHOD')\n  const [errorMessage, setErrorMessage] = useState<string>()\n  const [userId, setUserId] = useState<number>()\n  const [twoFaToken, setTwoFaToken] = useState<string>()\n\n  /*\n   * In SWC, if logging in with OAuth, the servlet will call POST /oauth2/session2 to get the access token.\n   *\n   * If the user has 2FA enabled, the servlet will receive a 401 with the userId and twoFaToken in the response.\n   * The servlet will then redirect the user to the login page with the userId and twoFaToken in the searchParams.\n   *\n   * This effect will check if the search params are present, and change the step to 'VERIFICATION_CODE' if they are.\n   */\n  useEffect(() => {\n    // Replace the hash with a slash to handle SWC, which uses a hash in the URL. Otherwise, the searchParams aren't found\n    const fullUrl: URL = new URL(window.location.href.replaceAll('#', '/'))\n\n    const { searchParams } = fullUrl\n    if (searchParams) {\n      const userId = searchParams.get('userId')\n      const twoFaToken = searchParams.get('twoFaToken')\n      if (userId && twoFaToken) {\n        setUserId(parseInt(userId, 10))\n        setTwoFaToken(twoFaToken)\n        if (\n          !['VERIFICATION_CODE', 'RECOVERY_CODE', 'LOGGED_IN'].includes(step)\n        ) {\n          setStep('VERIFICATION_CODE')\n        }\n      }\n    }\n  }, [step])\n\n  /*\n   * In client-only apps (like Portals), if logging in with OAuth, the client app will call POST /oauth2/session2 to get the access token.\n   *\n   * If the user has 2FA enabled, the client app will receive a 401 with the userId and twoFaToken in the response.\n   *\n   * The app can pass the error response as a prop/argument, and we'll use it here to jump straight to the VERIFICATION_CODE step.\n   */\n  useEffect(() => {\n    if (twoFaErrorResponse) {\n      setTwoFaToken(twoFaErrorResponse.twoFaToken)\n      setUserId(twoFaErrorResponse.userId)\n      if (!['VERIFICATION_CODE', 'RECOVERY_CODE', 'LOGGED_IN'].includes(step)) {\n        setStep('VERIFICATION_CODE')\n      }\n    }\n  }, [twoFaErrorResponse])\n\n  /* When the step changes, clear the old error message. */\n  useEffect(() => {\n    setErrorMessage(undefined)\n  }, [step])\n\n  async function finishLogin(loginResponse: LoginResponse) {\n    await SynapseClient.setAccessTokenCookie(loginResponse.accessToken)\n    localStorage.setItem(\n      AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY,\n      loginResponse.authenticationReceipt,\n    )\n    setStep('LOGGED_IN')\n\n    if (sessionCallback) {\n      sessionCallback()\n    }\n  }\n\n  const {\n    mutate: mutateLoginWithUsernameAndPassword,\n    isLoading: isLoadingLoginWithUsernameAndPassword,\n  } = useMutation<\n    LoginResponse | TwoFactorAuthErrorResponse,\n    SynapseClientError,\n    { username: string; password: string; authenticationReceipt: string | null }\n  >(\n    ({ username, password, authenticationReceipt }) =>\n      SynapseClient.login(username, password, authenticationReceipt),\n    {\n      onError: error => {\n        setErrorMessage(error.reason)\n      },\n      onSuccess: async loginResponse => {\n        if ('errorCode' in loginResponse) {\n          setStep('VERIFICATION_CODE')\n          setTwoFaToken(loginResponse.twoFaToken)\n          setUserId(loginResponse.userId)\n        } else {\n          await finishLogin(loginResponse)\n        }\n      },\n    },\n  )\n\n  const {\n    mutate: mutateLoginWith2FACode,\n    isLoading: isLoadingLoginWith2FACode,\n  } = useMutation<LoginResponse, SynapseClientError, TwoFactorAuthLoginRequest>(\n    SynapseClient.loginWith2fa,\n    {\n      onError: e => {\n        setErrorMessage(e.reason)\n        if (\n          // The twoFaToken wasn't transmitted correctly\n          e.reason.includes('The provided twoFaToken is invalid') ||\n          // The user waited too long to enter the code.\n          e.reason.includes('Token has expired')\n        ) {\n          console.warn(e)\n          // Instruct the user refresh to start over.\n          setErrorMessage(\n            'Something went wrong. Refresh the page and try again.',\n          )\n          // If the 2FA token is in the search parameters, remove it so the user doesn't just get the same error again.\n          if (window.location.href.includes('twoFaToken')) {\n            window.history.replaceState(\n              {},\n              document.title,\n              // using regex because SWC hashbang doesn't work with URLSearchParams\n              window.location.href.replaceAll(\n                /(twoFaToken|userId)=[^&]*&?/g,\n                '',\n              ),\n            )\n          }\n        }\n      },\n      onSuccess: finishLogin,\n    },\n  )\n\n  const submitUsernameAndPassword: UseLoginReturn['submitUsernameAndPassword'] =\n    (username, password) => {\n      setErrorMessage(undefined)\n      const authenticationReceipt = localStorage.getItem(\n        AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY,\n      )\n      mutateLoginWithUsernameAndPassword({\n        username,\n        password,\n        authenticationReceipt,\n      })\n    }\n\n  const submitOneTimePassword: UseLoginReturn['submitOneTimePassword'] = (\n    code,\n    otpType = step === 'RECOVERY_CODE' ? 'RECOVERY_CODE' : 'TOTP',\n  ) => {\n    setErrorMessage(undefined)\n    if (twoFaToken == null || userId == null) {\n      // This could happen if the 2FA component exists on its own route, and the user directly navigates to it without first logging in with credentials/OAuth\n      setErrorMessage(\n        'You did not first log in with your password or a third-party identity provider.',\n      )\n      return\n    }\n    const request: TwoFactorAuthLoginRequest = {\n      userId: userId,\n      twoFaToken: twoFaToken,\n      otpCode: code,\n      otpType: otpType,\n    }\n    mutateLoginWith2FACode(request)\n  }\n\n  return {\n    step,\n    onStepChange: setStep,\n    submitUsernameAndPassword,\n    submitOneTimePassword: submitOneTimePassword,\n    errorMessage,\n    isLoading:\n      isLoadingLoginWithUsernameAndPassword || isLoadingLoginWith2FACode,\n  }\n}\n","import T from \"react\";\nimport L from \"@mui/material/Box\";\nimport { styled as W } from \"@mui/material/styles\";\nimport q from \"@mui/material/TextField\";\nimport { jsx as C } from \"react/jsx-runtime\";\nconst z = W(q)`\n  input {\n    text-align: center;\n  }\n`, G = {\n  TextFieldStyled: z\n}, H = (n) => /* @__PURE__ */ C(G.TextFieldStyled, {\n  ...n\n}), I = {\n  left: \"ArrowLeft\",\n  right: \"ArrowRight\",\n  backspace: \"Backspace\"\n};\nfunction J(n, o) {\n  return n <= 0 ? [] : Array.from({ length: n }, o);\n}\nfunction Q(n, o, l) {\n  return n.map((a, i) => o === i ? l : a);\n}\nfunction w(n) {\n  return n.join(\"\");\n}\nfunction B(n, o) {\n  return [...n, o];\n}\nfunction U(n, o, l) {\n  return n.reduce(\n    (a, i, f) => {\n      const { characters: d, restArrayMerged: p } = a;\n      if (f < l)\n        return {\n          restArrayMerged: p,\n          characters: B(d, i)\n        };\n      const [h, ...g] = p;\n      return {\n        restArrayMerged: g,\n        characters: B(d, h || \"\")\n      };\n    },\n    {\n      restArrayMerged: o,\n      characters: []\n    }\n  ).characters;\n}\nfunction X(n) {\n  return n.split(\"\");\n}\nconst Z = T.forwardRef((n, o) => {\n  const {\n    value: l,\n    length: a,\n    autoFocus: i,\n    onChange: f,\n    TextFieldsProps: d,\n    onComplete: p,\n    validateChar: h,\n    className: g,\n    ...P\n  } = n, {\n    onPaste: R,\n    onFocus: S,\n    onKeyDown: k,\n    className: M,\n    ...E\n  } = d || {}, c = J(a, (e, r) => ({\n    character: l[r] || \"\",\n    inputRef: T.createRef()\n  })), m = (e) => c.findIndex(({\n    inputRef: r\n  }) => r.current === e), D = () => c.map(({\n    character: e\n  }) => e), N = (e, r) => {\n    const t = Q(D(), e, r);\n    return w(t);\n  }, x = (e) => {\n    c[e]?.inputRef.current?.focus();\n  }, u = (e) => {\n    c[e]?.inputRef.current?.select();\n  }, y = (e) => {\n    e + 1 !== a && (c[e + 1].character ? u(e + 1) : x(e + 1));\n  }, K = (e) => {\n    e > 0 && u(e - 1);\n  }, V = (e) => {\n    const r = e.target.value[0] || \"\", t = m(e.target);\n    if (typeof h == \"function\" && !h(r, t))\n      return;\n    const s = N(t, r);\n    f?.(s), s.length === a && p?.(s), r !== \"\" ? s.length < a ? y(s.length - 1) : y(t) : s[t] ? u(t) : K(t);\n  }, b = (e) => {\n    e.preventDefault(), e.target.select(), S?.(e);\n  }, j = (e) => {\n    const r = e.target, t = m(r);\n    r.value === e.key ? (e.preventDefault(), y(t)) : !r.value && I.backspace === e.key || I.left === e.key ? (e.preventDefault(), u(t - 1)) : I.right === e.key && (e.preventDefault(), u(t + 1)), k?.(e);\n  }, $ = (e) => {\n    e.preventDefault();\n    const r = e.target, t = e.clipboardData.getData(\"text/plain\"), s = m(r), Y = D(), A = U(Y, X(t), s), O = A.findIndex((_, v) => v > s && _ === \"\"), F = w(A);\n    if (f?.(F), F.length === a) {\n      p?.(F), x(a - 1);\n      return;\n    }\n    O !== -1 && x(O), R?.(e);\n  };\n  return /* @__PURE__ */ C(L, {\n    display: \"flex\",\n    gap: \"20px\",\n    alignItems: \"center\",\n    ref: o,\n    className: `MuiOtpInput-Box ${g || \"\"}`,\n    ...P,\n    children: c.map(({\n      character: e,\n      inputRef: r\n    }, t) => /* @__PURE__ */ C(H, {\n      autoFocus: i ? t === 0 : !1,\n      autoComplete: \"one-time-code\",\n      value: e,\n      inputRef: r,\n      className: `MuiOtpInput-TextField MuiOtpInput-TextField-${t + 1} ${M || \"\"}`,\n      onPaste: $,\n      onFocus: b,\n      onChange: V,\n      onKeyDown: j,\n      ...E\n    }, t))\n  });\n});\nZ.defaultProps = {\n  value: \"\",\n  length: 4,\n  autoFocus: !1,\n  validateChar: () => !0,\n  onChange: () => {\n  },\n  onComplete: () => {\n  },\n  TextFieldsProps: {}\n};\nexport {\n  Z as MuiOtpInput\n};\n","import React from 'react'\nimport { Box, Button } from '@mui/material'\nimport { MuiOtpInput } from 'mui-one-time-password-input'\nimport { UseLoginReturn } from '../../utils/hooks'\n\nconst TOTP_LENGTH = 6\nconst DIGIT_CHARACTERS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n\ntype TOTPFormProps = {\n  onSubmit: (value: string) => void\n  isLoading: UseLoginReturn['isLoading']\n}\n\nexport default function TOTPForm(props: TOTPFormProps) {\n  const { onSubmit, isLoading } = props\n  const [verificationCode, setVerificationCode] = React.useState('')\n  return (\n    <Box>\n      <MuiOtpInput\n        autoFocus\n        length={TOTP_LENGTH}\n        value={verificationCode}\n        onChange={setVerificationCode}\n        onComplete={onSubmit}\n        validateChar={(character: string) => {\n          return DIGIT_CHARACTERS.includes(character) || character === ''\n        }}\n        gap={'2px'}\n        sx={{\n          '.MuiInputBase-root': {\n            paddingLeft: '5px',\n            paddingRight: '5px',\n          },\n          '.MuiFormControl-root:first-of-type > .MuiInputBase-root': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n          },\n          '.MuiFormControl-root:last-of-type > .MuiInputBase-root': {\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n          },\n          '.MuiFormControl-root:not(:first-of-type):not(:last-of-type) > .MuiInputBase-root':\n            {\n              borderRadius: 0,\n            },\n        }}\n      />\n\n      <Button\n        fullWidth\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        sx={{\n          height: '50px',\n          mt: 4,\n          mb: 2,\n        }}\n        disabled={verificationCode.length !== TOTP_LENGTH || isLoading}\n        onClick={e => {\n          e.preventDefault()\n          onSubmit(verificationCode)\n        }}\n      >\n        {isLoading ? 'Verifying...' : 'Submit'}\n      </Button>\n    </Box>\n  )\n}\n","import { Button, Link } from '@mui/material'\nimport React, { useState } from 'react'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport TextField from '../TextField/TextField'\nimport { UseLoginReturn } from '../../utils/hooks'\n\ntype UsernamePasswordFormProps = {\n  onSubmit: (username: string, password: string) => void\n  resetPasswordUrl?: string\n  isLoading: UseLoginReturn['isLoading']\n}\n\nexport default function UsernamePasswordForm(props: UsernamePasswordFormProps) {\n  const {\n    resetPasswordUrl = `${getEndpoint(\n      BackendDestinationEnum.PORTAL_ENDPOINT,\n    )}#!PasswordReset:0`,\n    onSubmit,\n    isLoading,\n  } = props\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  function handleLogin(e: React.SyntheticEvent) {\n    e.preventDefault()\n    onSubmit(username, password)\n  }\n  return (\n    <form\n      onSubmit={e => {\n        handleLogin(e)\n      }}\n    >\n      <TextField\n        required\n        fullWidth\n        autoFocus\n        autoComplete=\"username\"\n        label=\"Username or Email Address\"\n        id=\"username\"\n        type=\"text\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <TextField\n        required\n        fullWidth\n        autoComplete=\"current-password\"\n        label=\"Password\"\n        id=\"current-password\"\n        type=\"password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Link href={resetPasswordUrl}>Forgot password?</Link>\n      <Button\n        fullWidth\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        disabled={isLoading}\n        sx={{\n          height: '50px',\n          mt: 4,\n          mb: 2,\n        }}\n      >\n        {isLoading ? 'Logging you in...' : 'Sign in'}\n      </Button>\n    </form>\n  )\n}\n","import { Box } from '@mui/material'\nimport React from 'react'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport {\n  LOGIN_METHOD_EMAIL,\n  LOGIN_METHOD_OAUTH2_GOOGLE,\n  OAUTH2_PROVIDERS,\n} from '../../utils/SynapseConstants'\nimport LoginMethodButton from './LoginMethodButton'\n\ntype AuthenticationMethodSelectionProps = {\n  ssoRedirectUrl?: string\n  /* Invoked before redirecting to Google. Useful in portals where we may want to store the current URL to redirect back here. */\n  onBeginOAuthSignIn?: () => void\n  onSelectUsernameAndPassword: () => void\n}\n\n/**\n *  To support Google SSO in your portal, you must add your domain to the Authorized Redirect URIs for Synapse authentication.\n *  This can be done by visiting https://sagebionetworks.jira.com/servicedesk/customer/portal/9 to set up a collaboration.\n *  Synapse engineers must add your redirect URL in the Google API console found at https://console.cloud.google.com/ for this functionality to work.\n */\nexport default function AuthenticationMethodSelection(\n  props: AuthenticationMethodSelectionProps,\n) {\n  const { onBeginOAuthSignIn, ssoRedirectUrl, onSelectUsernameAndPassword } =\n    props\n  function onGoogleSignIn(event: React.MouseEvent<HTMLButtonElement>) {\n    if (onBeginOAuthSignIn) {\n      onBeginOAuthSignIn()\n    }\n\n    event.preventDefault()\n    const redirectUrl = ssoRedirectUrl\n      ? `${ssoRedirectUrl}${OAUTH2_PROVIDERS.GOOGLE}`\n      : `${SynapseClient.getRootURL()}?provider=${OAUTH2_PROVIDERS.GOOGLE}`\n    SynapseClient.oAuthUrlRequest(OAUTH2_PROVIDERS.GOOGLE, redirectUrl)\n      .then(data => {\n        // Send the user to the authorization URL\n        window.location = data.authorizationUrl as unknown as Location\n      })\n      .catch((err: SynapseClientError) => {\n        console.log('Error on oAuth url ', err)\n      })\n  }\n\n  return (\n    <Box>\n      <LoginMethodButton\n        loginMethod={LOGIN_METHOD_OAUTH2_GOOGLE}\n        iconName=\"google24\"\n        onClick={onGoogleSignIn}\n      />\n      <LoginMethodButton\n        loginMethod={LOGIN_METHOD_EMAIL}\n        iconName=\"email\"\n        onClick={onSelectUsernameAndPassword}\n      />\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box, Button } from '@mui/material'\nimport TextField from '../TextField/TextField'\nimport { UseLoginReturn } from '../../utils/hooks'\n\n// 16 characters separated into chunks of 4 by 3 hyphens\nconst RECOVERY_CODE_LENGTH = 19\n\ntype RecoveryCodeFormProps = {\n  onSubmit: (value: string) => void\n  isLoading: UseLoginReturn['isLoading']\n}\n\nexport default function RecoveryCodeForm(props: RecoveryCodeFormProps) {\n  const { onSubmit, isLoading } = props\n  const [recoveryCode, setRecoveryCode] = React.useState('')\n  return (\n    <Box>\n      <TextField\n        placeholder=\"Enter backup code\"\n        value={recoveryCode}\n        onChange={e => {\n          // coerce the input to lowercase and remove any nonalphanumeric or hyphen characters\n          const valueWithAllowedChars = e.target.value\n            .toLowerCase()\n            .replace(/[^a-z0-9-]/gi, '')\n          setRecoveryCode(valueWithAllowedChars)\n        }}\n      />\n\n      <Button\n        fullWidth\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        sx={{\n          height: '50px',\n          mt: 4,\n          mb: 2,\n        }}\n        disabled={recoveryCode.length !== RECOVERY_CODE_LENGTH || isLoading}\n        onClick={e => {\n          e.preventDefault()\n          onSubmit(recoveryCode)\n        }}\n      >\n        {isLoading ? 'Verifying...' : 'Submit'}\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport { Box, Link } from '@mui/material'\nimport FullWidthAlert from '../FullWidthAlert/FullWidthAlert'\nimport { UseLoginReturn } from '../../utils/hooks'\nimport { TwoFactorAuthErrorResponse } from '@sage-bionetworks/synapse-types'\nimport TOTPForm from './TOTPForm'\nimport UsernamePasswordForm from './UsernamePasswordForm'\nimport AuthenticationMethodSelection from './AuthenticationMethodSelection'\nimport RecoveryCodeForm from './RecoveryCodeForm'\n\ntype Props = {\n  ssoRedirectUrl?: string\n  registerAccountUrl?: string\n  resetPasswordUrl?: string\n  /* Invoked before redirecting to Google. Useful in portals where we may want to store the current URL to redirect back here. */\n  onBeginOAuthSignIn?: () => void\n  step: UseLoginReturn['step']\n  onStepChange: (step: UseLoginReturn['step']) => void\n  /* optionally pass the 2FA error response to directly start the 2FA challenge */\n  twoFactorAuthenticationRequired?: TwoFactorAuthErrorResponse\n  submitUsernameAndPassword: UseLoginReturn['submitUsernameAndPassword']\n  submitOneTimePassword: UseLoginReturn['submitOneTimePassword']\n  errorMessage: UseLoginReturn['errorMessage']\n  isLoading: UseLoginReturn['isLoading']\n}\n\nexport default function LoginForm(props: Props) {\n  const {\n    ssoRedirectUrl,\n    registerAccountUrl = `${getEndpoint(\n      BackendDestinationEnum.PORTAL_ENDPOINT,\n    )}#!RegisterAccount:0`,\n    resetPasswordUrl,\n    onBeginOAuthSignIn,\n    onStepChange,\n    step,\n    submitUsernameAndPassword,\n    submitOneTimePassword,\n    errorMessage,\n    isLoading,\n  } = props\n\n  return (\n    <>\n      {step == 'CHOOSE_AUTH_METHOD' && (\n        <AuthenticationMethodSelection\n          onSelectUsernameAndPassword={() => onStepChange('USERNAME_PASSWORD')}\n          onBeginOAuthSignIn={onBeginOAuthSignIn}\n          ssoRedirectUrl={ssoRedirectUrl}\n        />\n      )}\n      {step === 'USERNAME_PASSWORD' && (\n        <UsernamePasswordForm\n          isLoading={isLoading}\n          resetPasswordUrl={resetPasswordUrl}\n          onSubmit={(username, password) => {\n            submitUsernameAndPassword(username, password)\n          }}\n        />\n      )}\n      {step === 'VERIFICATION_CODE' && (\n        <>\n          <TOTPForm\n            isLoading={isLoading}\n            onSubmit={totp => {\n              submitOneTimePassword(totp, 'TOTP')\n            }}\n          />\n          <Link\n            align={'center'}\n            color={'grey.700'}\n            sx={{ display: 'block', mx: 'auto' }}\n            onClick={() => onStepChange('RECOVERY_CODE')}\n          >\n            Use a backup code instead\n          </Link>\n        </>\n      )}\n      {step === 'RECOVERY_CODE' && (\n        <RecoveryCodeForm\n          isLoading={isLoading}\n          onSubmit={recoveryCode => {\n            submitOneTimePassword(recoveryCode, 'RECOVERY_CODE')\n          }}\n        />\n      )}\n      {(step === 'CHOOSE_AUTH_METHOD' || step === 'USERNAME_PASSWORD') && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: '10px' }}>\n          <Link href={registerAccountUrl} align={'center'}>\n            Don&apos;t have an account? Create one now\n          </Link>\n        </Box>\n      )}\n      {errorMessage && (\n        <FullWidthAlert\n          variant={'warning'}\n          isGlobal={false}\n          description={errorMessage}\n        />\n      )}\n    </>\n  )\n}\n","import { IconButton, SxProps } from '@mui/material'\nimport IconSvg from '../IconSvg/IconSvg'\nimport React from 'react'\nimport { UseLoginReturn } from '../../utils/hooks'\nimport { LOGIN_BACK_BUTTON_CLASS_NAME } from '../../utils/SynapseConstants'\n\ntype LoginFormBackButtonProps = {\n  step: UseLoginReturn['step']\n  onStepChange: (step: UseLoginReturn['step']) => void\n  sx?: SxProps\n}\n\nfunction getPreviousStep(currentStep: UseLoginReturn['step']) {\n  switch (currentStep) {\n    case 'CHOOSE_AUTH_METHOD':\n      // Should never happen\n      return 'CHOOSE_AUTH_METHOD'\n    case 'USERNAME_PASSWORD':\n      return 'CHOOSE_AUTH_METHOD'\n    case 'VERIFICATION_CODE':\n      // Could have reached this step from either username + password or OAuth sign in, so go back to the beginning\n      return 'CHOOSE_AUTH_METHOD'\n    case 'RECOVERY_CODE':\n      return 'VERIFICATION_CODE'\n    case 'LOGGED_IN':\n      // Should never happen\n      return 'LOGGED_IN'\n  }\n}\n\nexport default function LoginFlowBackButton(props: LoginFormBackButtonProps) {\n  const { step, onStepChange, sx } = props\n  const shouldRender =\n    step === 'USERNAME_PASSWORD' ||\n    step === 'VERIFICATION_CODE' ||\n    step === 'RECOVERY_CODE'\n\n  if (!shouldRender) {\n    return null\n  }\n  return (\n    <IconButton\n      className={LOGIN_BACK_BUTTON_CLASS_NAME}\n      type=\"button\"\n      onClick={() => {\n        onStepChange(getPreviousStep(step))\n      }}\n      sx={sx}\n    >\n      <IconSvg\n        icon=\"arrowBack\"\n        wrap={false}\n        sx={{ height: '24px', width: '24px' }}\n      />\n    </IconButton>\n  )\n}\n"],"names":["useLogin","sessionCallback","twoFaErrorResponse","step","setStep","useState","errorMessage","setErrorMessage","userId","setUserId","twoFaToken","setTwoFaToken","useEffect","fullUrl","searchParams","finishLogin","loginResponse","SynapseClient","AUTHENTICATION_RECEIPT_LOCALSTORAGE_KEY","mutateLoginWithUsernameAndPassword","isLoadingLoginWithUsernameAndPassword","useMutation","username","password","authenticationReceipt","error","mutateLoginWith2FACode","isLoadingLoginWith2FACode","e","code","otpType","z","W","q","G","H","n","C","I","J","Q","l","a","i","w","B","U","f","p","h","g","X","Z","T","P","R","S","k","M","E","c","r","m","D","N","t","x","_b","_a","u","y","K","V","s","b","j","$","Y","A","O","_","v","L","TOTP_LENGTH","DIGIT_CHARACTERS","TOTPForm","props","onSubmit","isLoading","verificationCode","setVerificationCode","React","jsxs","Box","jsx","MuiOtpInput","character","Button","UsernamePasswordForm","resetPasswordUrl","getEndpoint","BackendDestinationEnum","setUsername","setPassword","handleLogin","TextField","Link","AuthenticationMethodSelection","onBeginOAuthSignIn","ssoRedirectUrl","onSelectUsernameAndPassword","onGoogleSignIn","event","redirectUrl","OAUTH2_PROVIDERS","data","err","LoginMethodButton","LOGIN_METHOD_OAUTH2_GOOGLE","LOGIN_METHOD_EMAIL","RECOVERY_CODE_LENGTH","RecoveryCodeForm","recoveryCode","setRecoveryCode","valueWithAllowedChars","LoginForm","registerAccountUrl","onStepChange","submitUsernameAndPassword","submitOneTimePassword","Fragment","totp","FullWidthAlert","getPreviousStep","currentStep","LoginFlowBackButton","sx","IconButton","LOGIN_BACK_BUTTON_CLASS_NAME","IconSvg"],"mappings":"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","x_google_ignoreList":[1]}