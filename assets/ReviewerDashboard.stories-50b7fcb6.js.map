{"version":3,"file":"ReviewerDashboard.stories-50b7fcb6.js","sources":["../../src/lib/utils/hooks/SynapseAPI/dataaccess/useAccessApprovals.ts","../../../../node_modules/.pnpm/react-router-dom@5.3.3_react@18.2.0/node_modules/react-router-dom/esm/react-router-dom.js","../../src/lib/containers/AccessApprovalsTable.tsx","../../src/lib/containers/AccessRequestSubmissionTable.tsx","../../src/lib/containers/dataaccess/AccessHistoryDashboard.tsx","../../src/lib/containers/dataaccess/AccessRequirementTable.tsx","../../src/lib/containers/dataaccess/AccessRequirementDashboard.tsx","../../src/lib/containers/dataaccess/AccessSubmissionDashboard.tsx","../../src/lib/containers/dataaccess/ReviewerDashboard.tsx"],"sourcesContent":["import { useInfiniteQuery, UseInfiniteQueryOptions } from 'react-query'\nimport { SynapseClient } from '../../..'\nimport { SynapseClientError } from '../../../SynapseClientError'\nimport { useSynapseContext } from '../../../SynapseContext'\nimport {\n  AccessApprovalSearchRequest,\n  AccessApprovalSearchResponse,\n} from '../../../synapseTypes'\n\nexport function useSearchAccessApprovalsInfinite(\n  params: AccessApprovalSearchRequest,\n  options?: UseInfiniteQueryOptions<\n    AccessApprovalSearchResponse,\n    SynapseClientError\n  >,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useInfiniteQuery<AccessApprovalSearchResponse, SynapseClientError>(\n    keyFactory.searchAccessApprovalsQueryKey(params),\n    async context => {\n      return await SynapseClient.searchAccessApprovals(\n        {\n          ...params,\n          nextPageToken: context.pageParam,\n        },\n        accessToken,\n      )\n    },\n    {\n      ...options,\n      getNextPageParam: page => page.nextPageToken,\n    },\n  )\n}\n","import { Router, __RouterContext, matchPath } from 'react-router';\nexport { MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, generatePath, matchPath, useHistory, useLocation, useParams, useRouteMatch, withRouter } from 'react-router';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { createBrowserHistory, createHashHistory, createLocation, createPath } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nvar resolveToLocation = function resolveToLocation(to, currentLocation) {\n  return typeof to === \"function\" ? to(currentLocation) : to;\n};\nvar normalizeToLocation = function normalizeToLocation(to, currentLocation) {\n  return typeof to === \"string\" ? createLocation(to, null, null, currentLocation) : to;\n};\n\nvar forwardRefShim = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef = React.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar LinkAnchor = forwardRef(function (_ref, forwardedRef) {\n  var innerRef = _ref.innerRef,\n      navigate = _ref.navigate,\n      _onClick = _ref.onClick,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"innerRef\", \"navigate\", \"onClick\"]);\n\n  var target = rest.target;\n\n  var props = _extends({}, rest, {\n    onClick: function onClick(event) {\n      try {\n        if (_onClick) _onClick(event);\n      } catch (ex) {\n        event.preventDefault();\n        throw ex;\n      }\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && ( // ignore everything but left clicks\n      !target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          navigate();\n        }\n    }\n  }); // React 15 compat\n\n\n  if (forwardRefShim !== forwardRef) {\n    props.ref = forwardedRef || innerRef;\n  } else {\n    props.ref = innerRef;\n  }\n  /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n\n\n  return /*#__PURE__*/React.createElement(\"a\", props);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = forwardRef(function (_ref2, forwardedRef) {\n  var _ref2$component = _ref2.component,\n      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,\n      replace = _ref2.replace,\n      to = _ref2.to,\n      innerRef = _ref2.innerRef,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"component\", \"replace\", \"to\", \"innerRef\"]);\n\n  return /*#__PURE__*/React.createElement(__RouterContext.Consumer, null, function (context) {\n    !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n    var history = context.history;\n    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);\n    var href = location ? history.createHref(location) : \"\";\n\n    var props = _extends({}, rest, {\n      href: href,\n      navigate: function navigate() {\n        var location = resolveToLocation(to, context.location);\n        var isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n        var method = replace || isDuplicateNavigation ? history.replace : history.push;\n        method(location);\n      }\n    }); // React 15 compat\n\n\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return /*#__PURE__*/React.createElement(component, props);\n  });\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]);\n  var refType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.displayName = \"Link\";\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nvar forwardRefShim$1 = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef$1 = React.forwardRef;\n\nif (typeof forwardRef$1 === \"undefined\") {\n  forwardRef$1 = forwardRefShim$1;\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = forwardRef$1(function (_ref, forwardedRef) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      sensitive = _ref.sensitive,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      innerRef = _ref.innerRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"sensitive\", \"strict\", \"style\", \"to\", \"innerRef\"]);\n\n  return /*#__PURE__*/React.createElement(__RouterContext.Consumer, null, function (context) {\n    !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <NavLink> outside a <Router>\") : invariant(false) : void 0;\n    var currentLocation = locationProp || context.location;\n    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);\n    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n    var match = escapedPath ? matchPath(currentLocation.pathname, {\n      path: escapedPath,\n      exact: exact,\n      sensitive: sensitive,\n      strict: strict\n    }) : null;\n    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);\n    var className = typeof classNameProp === \"function\" ? classNameProp(isActive) : classNameProp;\n    var style = typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n    if (isActive) {\n      className = joinClassnames(className, activeClassName);\n      style = _extends({}, style, activeStyle);\n    }\n\n    var props = _extends({\n      \"aria-current\": isActive && ariaCurrent || null,\n      className: className,\n      style: style,\n      to: toLocation\n    }, rest); // React 15 compat\n\n\n    if (forwardRefShim$1 !== forwardRef$1) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return /*#__PURE__*/React.createElement(Link, props);\n  });\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\", \"false\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };\n//# sourceMappingURL=react-router-dom.js.map\n","import dayjs from 'dayjs'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Table } from 'react-bootstrap'\nimport { SMALL_USER_CARD } from '../utils/SynapseConstants'\nimport {\n  AccessApprovalSearchRequest,\n  AccessApprovalSearchSort,\n  AccessApprovalSortField,\n  Direction,\n} from '../utils/synapseTypes'\nimport { Typography } from '@mui/material'\nimport UserCard from './UserCard'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../utils/functions/getEndpoint'\nimport { useSearchAccessApprovalsInfinite } from '../utils/hooks/SynapseAPI/dataaccess/useAccessApprovals'\nimport { SynapseSpinner } from './LoadingScreen'\nimport SortIcon from '../assets/icons/Sort'\nimport { formatDate } from '../utils/functions/DateFormatter'\nimport { upperFirst } from 'lodash-es'\n\nexport type AccessApprovalsTableProps = {\n  accessorId: string\n  accessRequirementId?: string\n}\nexport const AccessApprovalsTable: React.FunctionComponent<\n  AccessApprovalsTableProps\n> = ({ accessorId, accessRequirementId }) => {\n  const [sort, setSort] = useState<AccessApprovalSearchSort>({\n    field: AccessApprovalSortField.MODIFIED_ON,\n    direction: Direction.DESC,\n  })\n\n  const searchRequest: AccessApprovalSearchRequest = useMemo(\n    () => ({\n      accessorId,\n      accessRequirementId,\n      sort: [sort],\n    }),\n    [accessorId, accessRequirementId, sort],\n  )\n\n  const { data, hasNextPage, fetchNextPage, isLoading } =\n    useSearchAccessApprovalsInfinite(searchRequest)\n  const accessApprovals = data?.pages.flatMap(page => page.results) ?? []\n\n  const onSort = (field: AccessApprovalSortField) => {\n    if (sort.field === field) {\n      setSort({\n        field,\n        direction:\n          sort.direction === Direction.DESC ? Direction.ASC : Direction.DESC,\n      })\n    } else {\n      setSort({ field, direction: Direction.DESC })\n    }\n  }\n  return (\n    <div className=\"AccessApprovalsTable bootstrap-4-backport\">\n      <Table striped borderless bordered={false}>\n        <thead>\n          <tr>\n            <th>AR ID</th>\n            <th>Access Requirement Name</th>\n            <th>Submitter</th>\n            <th>Status</th>\n            <th>\n              <span className=\"SRC-split\">\n                <span>Modified Date</span>\n                <SortIcon\n                  role=\"button\"\n                  active={sort.field === AccessApprovalSortField.MODIFIED_ON}\n                  direction={\n                    sort.field === 'MODIFIED_ON'\n                      ? sort.direction === 'DESC'\n                        ? Direction.DESC\n                        : Direction.ASC\n                      : Direction.DESC\n                  }\n                  onClick={() => onSort(AccessApprovalSortField.MODIFIED_ON)}\n                />\n              </span>\n            </th>\n            <th>\n              <span className=\"SRC-split\">\n                <span>Expires</span>\n                <SortIcon\n                  role=\"button\"\n                  active={sort.field === AccessApprovalSortField.EXPIRED_ON}\n                  direction={\n                    sort.field === 'EXPIRED_ON'\n                      ? sort.direction === 'DESC'\n                        ? Direction.DESC\n                        : Direction.ASC\n                      : Direction.DESC\n                  }\n                  onClick={() => onSort(AccessApprovalSortField.EXPIRED_ON)}\n                />\n              </span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {accessApprovals.map(item => {\n            return (\n              <tr key={item.id}>\n                <td>\n                  <a\n                    href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!AccessRequirement:AR_ID=${item.accessRequirementId}`}\n                  >\n                    {item.accessRequirementId}\n                  </a>\n                </td>\n                <td>{item.accessRequirementName}</td>\n                <td>\n                  <UserCard size={SMALL_USER_CARD} ownerId={item.submitterId} />\n                </td>\n                <td>{upperFirst(item.state.toLocaleLowerCase())}</td>\n                <td>{formatDate(dayjs(item.modifiedOn))}</td>\n                <td\n                  className={`${\n                    item.expiredOn\n                      ? new Date() > new Date(item.expiredOn)\n                        ? 'expired'\n                        : ''\n                      : 'non-expire'\n                  } remove-border`}\n                >\n                  {item.expiredOn ? formatDate(dayjs(item.expiredOn)) : 'Never'}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      {isLoading && (\n        <div className=\"SRC-center-text\">\n          <SynapseSpinner size={40} />\n        </div>\n      )}\n      {!isLoading && accessApprovals.length === 0 && (\n        <Typography className=\"SRC-center-text\" variant=\"body1\">\n          No Results\n        </Typography>\n      )}\n      {!hasNextPage ? (\n        ''\n      ) : (\n        <Button variant=\"outline\" onClick={() => fetchNextPage}>\n          Show More\n        </Button>\n      )}\n    </div>\n  )\n}\n","import { upperFirst } from 'lodash-es'\nimport dayjs from 'dayjs'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Table } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport SortIcon from '../assets/icons/Sort'\nimport { formatDate } from '../utils/functions/DateFormatter'\nimport { useSearchAccessSubmissionsInfinite } from '../utils/hooks/SynapseAPI/dataaccess/useDataAccessSubmission'\nimport { ACT_TEAM_ID, SMALL_USER_CARD } from '../utils/SynapseConstants'\nimport { Direction, SubmissionState } from '../utils/synapseTypes'\nimport {\n  SubmissionReviewerFilterType,\n  SubmissionSearchRequest,\n  SubmissionSearchSort,\n  SubmissionSortField,\n} from '../utils/synapseTypes/AccessSubmission'\nimport { SynapseSpinner } from './LoadingScreen'\nimport UserCard from './UserCard'\nimport { Typography } from '@mui/material'\nimport UserOrTeamBadge from './UserOrTeamBadge'\n\nexport type AccessRequestSubmissionTableProps = {\n  showSubmitter?: boolean\n  showStatus?: boolean\n  showRequesters?: boolean\n  accessorId?: string\n  accessRequirementId?: string\n  reviewerId?: string\n  submissionState?: SubmissionState\n  reviewerFilterType?: SubmissionReviewerFilterType\n}\n\nexport const AccessRequestSubmissionTable: React.FunctionComponent<\n  AccessRequestSubmissionTableProps\n> = ({\n  showSubmitter,\n  showStatus,\n  showRequesters,\n  accessorId,\n  accessRequirementId,\n  reviewerId,\n  submissionState,\n  reviewerFilterType,\n}) => {\n  const [sort, setSort] = useState<SubmissionSearchSort>({\n    field: SubmissionSortField.CREATED_ON,\n    direction: Direction.DESC,\n  })\n\n  const searchRequest: SubmissionSearchRequest = useMemo(\n    () => ({\n      accessorId,\n      accessRequirementId,\n      submissionState,\n      reviewerId,\n      reviewerFilterType,\n      sort: [sort],\n    }),\n    [\n      accessorId,\n      accessRequirementId,\n      submissionState,\n      reviewerId,\n      reviewerFilterType,\n      sort,\n    ],\n  )\n\n  const { data, hasNextPage, fetchNextPage, isLoading } =\n    useSearchAccessSubmissionsInfinite(searchRequest)\n\n  const accessSubmissions = data?.pages.flatMap(page => page.results) ?? []\n\n  const onSort = (field: SubmissionSortField) => {\n    if (sort.field === field) {\n      setSort({ field, direction: sort.direction === 'DESC' ? 'ASC' : 'DESC' })\n    } else {\n      setSort({ field, direction: 'DESC' })\n    }\n  }\n  return (\n    <div className=\"bootstrap-4-backport AccessSubmissionTable\">\n      <Table striped borderless bordered={false}>\n        <thead>\n          <tr>\n            <th>REQUEST</th>\n            <th>Access Requirement Name</th>\n            {showSubmitter && <th>Submitter</th>}\n            {showStatus && <th>Status</th>}\n            {showRequesters && <th>Requesters</th>}\n            <th>Reviewer(s)</th>\n            <th>\n              Created Date\n              <SortIcon\n                role=\"button\"\n                style={{ float: 'right' }}\n                active={sort.field === 'CREATED_ON'}\n                aria-label=\"Sort by Created On\"\n                direction={\n                  sort.field === 'CREATED_ON'\n                    ? sort.direction === 'DESC'\n                      ? 'DESC'\n                      : 'ASC'\n                    : 'DESC'\n                }\n                onClick={() => onSort(SubmissionSortField.CREATED_ON)}\n              />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {accessSubmissions.map(item => {\n            return (\n              <tr key={item.id}>\n                <td>\n                  <Link to={`/Submissions/${item.id}`}>{item.id}</Link>\n                </td>\n                <td>{item.accessRequirementName}</td>\n                {showSubmitter && (\n                  <td>\n                    <UserOrTeamBadge principalId={item.submitterId} />\n                  </td>\n                )}\n                {showStatus && (\n                  <td>{upperFirst(item.state.toLocaleLowerCase())}</td>\n                )}\n                {showRequesters && (\n                  <td>\n                    <UserOrTeamBadge principalId={item.submitterId} />\n                    {item.accessorChanges\n                      .filter(user => item.submitterId !== user.userId)\n                      .map(requester => (\n                        <li key={requester.userId}>\n                          <UserCard\n                            size={SMALL_USER_CARD}\n                            ownerId={requester.userId}\n                            className=\"requester\"\n                          />\n                        </li>\n                      ))}\n                  </td>\n                )}\n                <td>\n                  {item.accessRequirementReviewerIds.length === 0 ? (\n                    <UserOrTeamBadge principalId={ACT_TEAM_ID} />\n                  ) : (\n                    item.accessRequirementReviewerIds.map(reviewerId => (\n                      <UserOrTeamBadge\n                        key={reviewerId}\n                        principalId={reviewerId}\n                      />\n                    ))\n                  )}\n                </td>\n                <td>{formatDate(dayjs(item.createdOn))}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n      {isLoading && (\n        <div className=\"SRC-center-text\">\n          <SynapseSpinner size={40} />\n        </div>\n      )}\n      {!isLoading && accessSubmissions.length == 0 && (\n        <Typography className=\"SRC-center-text\" variant=\"body1\">\n          No Results\n        </Typography>\n      )}\n      {!hasNextPage ? (\n        ''\n      ) : (\n        <Button\n          variant=\"outline\"\n          onClick={() => {\n            fetchNextPage()\n          }}\n        >\n          Show More\n        </Button>\n      )}\n    </div>\n  )\n}\n","import { omitBy } from 'lodash-es'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormLabel } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useDebouncedEffect } from '../../utils/hooks/useDebouncedEffect'\nimport { TYPE_FILTER } from '../../utils/synapseTypes'\nimport { Typography } from '@mui/material'\nimport {\n  AccessApprovalsTable,\n  AccessApprovalsTableProps,\n} from '../AccessApprovalsTable'\nimport {\n  AccessRequestSubmissionTable,\n  AccessRequestSubmissionTableProps,\n} from '../AccessRequestSubmissionTable'\nimport UserOrTeamBadge from '../UserOrTeamBadge'\nimport UserSearchBoxV2 from '../UserSearchBoxV2'\nimport AccessRequirementSearchBox from './AccessRequirementSearchBox'\nimport { useGetCurrentUserBundle } from '../../utils/hooks/SynapseAPI'\n\nexport const UserHistoryDashboard = () => {\n  const [accessRequirementId, setAccessRequirementId] = useState<\n    string | undefined\n  >()\n  const [accessorId, setAccessorId] = useState<string>('')\n  const [approvalTableProps, setApprovalTableProps] =\n    useState<AccessApprovalsTableProps>({\n      accessorId,\n      accessRequirementId,\n    })\n  const [submissionTableProps, setSubmissionTableProps] =\n    useState<AccessRequestSubmissionTableProps>({\n      showStatus: true,\n      showSubmitter: true,\n      accessorId,\n      accessRequirementId,\n    })\n\n  const { data: userBundle } = useGetCurrentUserBundle()\n  const hasActPermissions = userBundle?.isACTMember\n\n  const location = useLocation()\n  const history = useHistory()\n  const INPUT_CHANGE_DEBOUNCE_DELAY_MS = 500\n\n  const onAccessorChange = useCallback((selected: string | null) => {\n    if (selected) {\n      setAccessorId(selected)\n    } else {\n      setAccessorId('')\n    }\n  }, [])\n\n  useEffect(() => {\n    const initializeFromSearchParam = () => {\n      const initialParams = new URLSearchParams(location.search)\n      setAccessRequirementId(\n        initialParams.get('accessRequirementId') ?? undefined,\n      )\n      setAccessorId(initialParams.get('accessorId') ?? '')\n    }\n    initializeFromSearchParam()\n  }, [location.search])\n\n  useDebouncedEffect(\n    () => {\n      const updateQueryParams = (\n        accessRequirementId: string | undefined,\n        accessorId: string,\n      ) => {\n        const params = new URLSearchParams(\n          omitBy(\n            {\n              accessRequirementId,\n              accessorId,\n            },\n            item => item === undefined || item === '',\n          ) as Record<string, string>,\n        )\n        history.replace({\n          pathname: location.pathname,\n          search: params.toString(),\n        })\n      }\n\n      updateQueryParams(accessRequirementId, accessorId)\n      setApprovalTableProps({\n        accessorId,\n        accessRequirementId,\n      })\n      setSubmissionTableProps({\n        showStatus: true,\n        showSubmitter: true,\n        accessorId,\n        accessRequirementId,\n      })\n    },\n    [accessRequirementId, accessorId, history, location.pathname],\n    INPUT_CHANGE_DEBOUNCE_DELAY_MS,\n  )\n\n  const NoSearchResultComponent = () => {\n    return (\n      <div className=\"text-center\">\n        <img\n          className=\"SearchPlaceholderImage\"\n          alt=\"Begin searching\"\n          src=\"https://s3.amazonaws.com/static.synapse.org/images/search-happy.svg\"\n        />\n        <Typography variant=\"body1Italic\">\n          Select a user using the search field above to view their data access\n          history\n        </Typography>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"UserHistoryDashboard bootstrap-4-backport\">\n      <div className=\"InputPanel\">\n        <div>\n          <FormLabel htmlFor=\"user-filter\">\n            Select a user to view their access history\n          </FormLabel>\n          <UserSearchBoxV2\n            inputId=\"user-filter\"\n            onChange={onAccessorChange}\n            defaultValue={accessorId}\n            placeholder=\"Search for a user name\"\n            typeFilter={TYPE_FILTER.USERS_ONLY}\n          />\n        </div>\n\n        {accessorId && (\n          <div>\n            <FormLabel htmlFor=\"arName-filter\">\n              Filter by Access Requirement Name\n            </FormLabel>\n            <AccessRequirementSearchBox\n              inputId=\"arName-filter\"\n              placeholder=\"Search for an Access Requirement Name \"\n              onChange={setAccessRequirementId}\n            />\n          </div>\n        )}\n      </div>\n\n      {accessorId ? (\n        <>\n          <Typography variant=\"headline3\">\n            Submissions including <UserOrTeamBadge principalId={accessorId} />\n          </Typography>\n          <AccessRequestSubmissionTable {...submissionTableProps} />\n          {hasActPermissions && (\n            <>\n              <Typography variant=\"headline3\">\n                Status in Access Requirements\n              </Typography>\n              <AccessApprovalsTable {...approvalTableProps} />\n            </>\n          )}\n        </>\n      ) : (\n        <NoSearchResultComponent />\n      )}\n    </div>\n  )\n}\n","import dayjs from 'dayjs'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Table } from 'react-bootstrap'\nimport SortIcon from '../../assets/icons/Sort'\nimport { formatDate } from '../../utils/functions/DateFormatter'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../../utils/functions/getEndpoint'\nimport { useSearchAccessRequirementsInfinite } from '../../utils/hooks/SynapseAPI/dataaccess/useAccessRequirements'\nimport { ACT_TEAM_ID } from '../../utils/SynapseConstants'\nimport { ACCESS_TYPE } from '../../utils/synapseTypes'\nimport {\n  AccessRequirementSearchRequest,\n  AccessRequirementSearchSort,\n} from '../../utils/synapseTypes/AccessRequirement/AccessRequirementSearch'\nimport { Typography } from '@mui/material'\nimport { EntityLink } from '../EntityLink'\nimport IconSvg from '../IconSvg'\nimport { SynapseSpinner } from '../LoadingScreen'\nimport UserOrTeamBadge from '../UserOrTeamBadge'\n\nexport type AccessRequirementTableProps = {\n  nameContains?: string\n  relatedProjectId?: string\n  reviewerId?: string\n  accessType?: ACCESS_TYPE\n  onCreateNewAccessRequirementClicked?: () => void\n}\n\nexport function AccessRequirementTable(props: AccessRequirementTableProps) {\n  const {\n    nameContains,\n    relatedProjectId,\n    reviewerId,\n    accessType,\n    onCreateNewAccessRequirementClicked,\n  } = props\n\n  const [sort, setSort] = useState<AccessRequirementSearchSort>({\n    field: 'CREATED_ON',\n    direction: 'DESC',\n  })\n\n  const searchRequest: Omit<AccessRequirementSearchRequest, 'nextPageToken'> =\n    useMemo(\n      () => ({\n        nameContains,\n        relatedProjectId,\n        reviewerId,\n        accessType,\n        sort: [sort],\n      }),\n      [nameContains, relatedProjectId, reviewerId, accessType, sort],\n    )\n\n  const { data, hasNextPage, fetchNextPage, isLoading } =\n    useSearchAccessRequirementsInfinite(searchRequest)\n\n  const accessRequirements = data?.pages.flatMap(page => page.results) ?? []\n  const onSort = (field: AccessRequirementSearchSort['field']) => {\n    if (sort.field === field) {\n      setSort({ field, direction: sort.direction === 'DESC' ? 'ASC' : 'DESC' })\n    } else {\n      setSort({ field, direction: 'DESC' })\n    }\n  }\n\n  return (\n    <div className=\"bootstrap-4-backport\">\n      <div className=\"SRC-split\">\n        <Typography variant=\"headline3\" style={{ marginBottom: 0 }}>\n          Access Requirements\n        </Typography>\n        {onCreateNewAccessRequirementClicked && (\n          <Button\n            variant={'outline'}\n            onClick={onCreateNewAccessRequirementClicked}\n          >\n            <IconSvg icon=\"favTwoTone\" sx={{ paddingRight: '0.2rem' }} />\n            New Access Requirement\n          </Button>\n        )}\n      </div>\n\n      <div className=\"AccessRequirementsTable\">\n        <Table striped borderless bordered={false}>\n          <thead className=\"access-requirements-header\">\n            <tr>\n              <th>AR ID</th>\n              <th>\n                <span className=\"SRC-split\">\n                  <span>Access Requirement Name</span>\n                  <SortIcon\n                    role=\"button\"\n                    onClick={() => onSort('NAME')}\n                    aria-label=\"Sort by Name\"\n                    active={sort.field === 'NAME'}\n                    direction={sort.field === 'NAME' ? sort.direction : 'DESC'}\n                  />\n                </span>\n              </th>\n              <th>Related to Projects</th>\n              <th>Reviewer</th>\n              <th>Last Modified</th>\n              <th>\n                <span className=\"SRC-split\">\n                  <span>Created On</span>\n                  <SortIcon\n                    role=\"button\"\n                    onClick={() => onSort('CREATED_ON')}\n                    active={sort.field === 'CREATED_ON'}\n                    aria-label=\"Sort by Created On\"\n                    direction={\n                      sort.field === 'CREATED_ON' ? sort.direction : 'DESC'\n                    }\n                  />\n                </span>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {accessRequirements.map(ar => {\n              return (\n                <tr key={ar.id}>\n                  <td>\n                    <a\n                      href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!AccessRequirement:AR_ID=${ar.id}`}\n                    >\n                      {ar.id}\n                    </a>\n                  </td>\n                  <td>{ar.name}</td>\n                  <td>\n                    {ar.relatedProjectIds.map(projectId => (\n                      <React.Fragment key={projectId}>\n                        <EntityLink entity={projectId} />{' '}\n                        <span className=\"InlineLabel\">({projectId})</span>\n                        <br />\n                      </React.Fragment>\n                    ))}\n                  </td>\n                  <td>\n                    {ar.reviewerIds.length === 0 ? (\n                      <UserOrTeamBadge principalId={ACT_TEAM_ID} />\n                    ) : (\n                      ar.reviewerIds.map(reviewerId => (\n                        <UserOrTeamBadge\n                          key={reviewerId}\n                          principalId={reviewerId}\n                        />\n                      ))\n                    )}\n                  </td>\n                  <td>{formatDate(dayjs(ar.modifiedOn))}</td>\n                  <td>{formatDate(dayjs(ar.createdOn))}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n        {isLoading && (\n          <div className=\"SRC-center-text\">\n            <SynapseSpinner size={40} />\n          </div>\n        )}\n        {!isLoading && accessRequirements.length === 0 && (\n          <Typography className=\"SRC-center-text\" variant=\"body1\">\n            No Results\n          </Typography>\n        )}\n        {!hasNextPage ? (\n          <></>\n        ) : (\n          <Button\n            variant=\"outline\"\n            onClick={() => {\n              fetchNextPage()\n            }}\n          >\n            Show More\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { omitBy } from 'lodash-es'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Button, FormControl, FormLabel, InputGroup } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useDebouncedEffect } from '../../utils/hooks/useDebouncedEffect'\nimport { EntityType } from '../../utils/synapseTypes'\nimport { EntityFinderModal } from '../entity_finder/EntityFinderModal'\nimport { FinderScope } from '../entity_finder/tree/EntityTree'\nimport IconSvg from '../IconSvg'\nimport UserSearchBoxV2 from '../UserSearchBoxV2'\nimport {\n  AccessRequirementTable,\n  AccessRequirementTableProps,\n} from './AccessRequirementTable'\n\nexport type AccessRequirementDashboardProps = {\n  onCreateNewAccessRequirementClicked?: () => void\n}\n\nexport function AccessRequirementDashboard(\n  props: AccessRequirementDashboardProps,\n) {\n  // Amount of time to wait after an input value changes before sending a new request\n  const INPUT_CHANGE_DEBOUNCE_DELAY_MS = 500\n\n  const { onCreateNewAccessRequirementClicked } = props\n\n  const location = useLocation()\n  const history = useHistory()\n\n  const [nameContains, setNameContains] = useState<string>('')\n  const [relatedProjectId, setRelatedProjectId] = useState<string | undefined>(\n    undefined,\n  )\n  const [reviewerId, setReviewerId] = useState<string | undefined>(undefined)\n\n  useEffect(() => {\n    function initializeFromSearchParams() {\n      const initialParams = new URLSearchParams(location.search)\n      setNameContains(initialParams.get('nameContains') ?? '')\n      setRelatedProjectId(initialParams.get('relatedProjectId') ?? undefined)\n      setReviewerId(initialParams.get('reviewerId') ?? undefined)\n    }\n    initializeFromSearchParams()\n  }, [location.search])\n\n  const [showEntityFinder, setShowEntityFinder] = useState(false)\n\n  const [tableProps, setTableProps] = useState<AccessRequirementTableProps>({\n    nameContains,\n    relatedProjectId,\n    reviewerId,\n    onCreateNewAccessRequirementClicked,\n  })\n\n  /**\n   * When an input changes, update the props passed to the table and update the search params.\n   *\n   * Debounced to prevent firing many queries while the user is entering text.\n   */\n  useDebouncedEffect(\n    () => {\n      function updateQueryParams(\n        nameContains: string | undefined,\n        relatedProjectId: string | undefined,\n        reviewerId: string | undefined,\n      ) {\n        // Don't include undefined/empty parameters\n        const params = omitBy(\n          {\n            nameContains,\n            relatedProjectId,\n            reviewerId,\n          },\n          item => item === undefined || item === '',\n        ) as Record<string, string>\n\n        // Add the new params to the URL\n        // Replace history because intuitively, the user has not navigated to a new page\n        const paramsObject = new URLSearchParams(params)\n        history.replace({\n          pathname: location.pathname,\n          search: paramsObject.toString(),\n        })\n      }\n\n      setTableProps({\n        nameContains,\n        relatedProjectId,\n        reviewerId,\n        onCreateNewAccessRequirementClicked,\n      })\n      updateQueryParams(nameContains, relatedProjectId, reviewerId)\n    },\n    [\n      nameContains,\n      relatedProjectId,\n      reviewerId,\n      onCreateNewAccessRequirementClicked,\n      history,\n      location.pathname,\n    ],\n    INPUT_CHANGE_DEBOUNCE_DELAY_MS,\n  )\n\n  const onReviewerChange = useCallback((selected: string | null) => {\n    if (selected) {\n      setReviewerId(selected)\n    } else {\n      setReviewerId(undefined)\n    }\n  }, [])\n\n  return (\n    <div className=\"AccessRequirementDashboard bootstrap-4-backport\">\n      <EntityFinderModal\n        configuration={{\n          initialScope: FinderScope.ALL_PROJECTS,\n          initialContainer: null,\n          selectMultiple: false,\n          selectableTypes: [EntityType.PROJECT],\n        }}\n        show={showEntityFinder}\n        onClose={() => {\n          setShowEntityFinder(false)\n        }}\n        onCancel={() => {\n          setShowEntityFinder(false)\n        }}\n        title={'Select Project to Filter Access Requirements'}\n        promptCopy={\n          'Select a project to find Access Requirements that are associated with that project. Access Requirements will be found if the Access Requirement is applied to the project, or if it is applied to any item inside the project.'\n        }\n        onConfirm={selected => {\n          setRelatedProjectId(selected[0].targetId)\n          setShowEntityFinder(false)\n        }}\n        confirmButtonCopy={'Select'}\n      />\n      <div className=\"InputPanel\">\n        <div>\n          <FormLabel htmlFor=\"ar-name-filter\">\n            Filter by Access Requirement Name\n          </FormLabel>\n\n          <InputGroup>\n            <FormControl\n              id=\"ar-name-filter\"\n              type=\"text\"\n              placeholder=\"Search for an Access Requirement Name\"\n              value={nameContains}\n              onChange={e => {\n                setNameContains(e.target.value)\n              }}\n            />\n            <IconSvg icon=\"searchOutlined\" />\n          </InputGroup>\n        </div>\n        <div>\n          <FormLabel htmlFor=\"project-id-filter\">Filter by Project</FormLabel>\n          <div className=\"ProjectIdInputGroup\">\n            <FormControl\n              id=\"project-id-filter\"\n              type=\"text\"\n              placeholder=\"Enter a project SynID\"\n              value={relatedProjectId}\n              onChange={e => {\n                const newValue = e.target.value\n                if (newValue === '') {\n                  setRelatedProjectId(undefined)\n                } else {\n                  setRelatedProjectId(newValue)\n                }\n              }}\n            />\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setShowEntityFinder(true)\n              }}\n            >\n              Browse\n            </Button>\n          </div>\n        </div>\n        <div>\n          <FormLabel htmlFor=\"reviewer-filter\">Filter by Reviewer</FormLabel>\n          <UserSearchBoxV2\n            inputId=\"reviewer-filter\"\n            placeholder=\"Search for a username or team name\"\n            defaultValue={reviewerId}\n            onChange={onReviewerChange}\n          />\n        </div>\n      </div>\n      <AccessRequirementTable {...tableProps} />\n    </div>\n  )\n}\n\nexport default AccessRequirementDashboard\n","import { omitBy } from 'lodash-es'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormLabel } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useDebouncedEffect } from '../../utils/hooks/useDebouncedEffect'\nimport { SubmissionState } from '../../utils/synapseTypes'\nimport { TYPE_FILTER } from '../../utils/synapseTypes'\nimport { Typography } from '@mui/material'\nimport {\n  AccessRequestSubmissionTable,\n  AccessRequestSubmissionTableProps,\n} from '../AccessRequestSubmissionTable'\nimport UserSearchBoxV2 from '../UserSearchBoxV2'\nimport AccessRequirementSearchBox from './AccessRequirementSearchBox'\n\nexport const DataAccessSubmissionDashboard = () => {\n  const [accessRequirementId, setAccessRequirementId] = useState<\n    string | undefined\n  >()\n  const [accessorId, setAccessorId] = useState<string | undefined>()\n  const [reviewerId, setReviewerId] = useState<string | undefined>()\n  const [tableProps, setTableProps] =\n    useState<AccessRequestSubmissionTableProps>({\n      accessRequirementId,\n      accessorId,\n      reviewerId,\n      showRequesters: true,\n      submissionState: SubmissionState.SUBMITTED,\n    })\n\n  const location = useLocation()\n  const history = useHistory()\n  const INPUT_CHANGE_DEBOUNCE_DELAY_MS = 500\n\n  useEffect(() => {\n    const initializeFromSearchParam = () => {\n      const initialParams = new URLSearchParams(location.search)\n      setAccessRequirementId(\n        initialParams.get('accessRequirementId') ?? undefined,\n      )\n      setAccessorId(initialParams.get('accessorId') ?? undefined)\n      setReviewerId(initialParams.get('reviewerId') ?? undefined)\n    }\n    initializeFromSearchParam()\n  }, [location.search])\n\n  const onRequesterChange = useCallback((selected: string | null) => {\n    if (selected) {\n      setAccessorId(selected)\n    } else {\n      setAccessorId(undefined)\n    }\n  }, [])\n\n  const onReviewerChange = useCallback((selected: string | null) => {\n    if (selected) {\n      setReviewerId(selected)\n    } else {\n      setReviewerId(undefined)\n    }\n  }, [])\n\n  useDebouncedEffect(\n    () => {\n      const updateQueryParams = (\n        accessRequirementId: string | undefined,\n        accessorId: string | undefined,\n        reviewerId: string | undefined,\n      ) => {\n        const params = new URLSearchParams(\n          omitBy(\n            {\n              accessRequirementId,\n              accessorId,\n              reviewerId,\n            },\n            item => item === undefined || item === '',\n          ) as Record<string, string>,\n        )\n        history.replace({\n          pathname: location.pathname,\n          search: params.toString(),\n        })\n      }\n\n      updateQueryParams(accessRequirementId, accessorId, reviewerId)\n      setTableProps({\n        accessRequirementId,\n        accessorId,\n        reviewerId,\n        showRequesters: true,\n        submissionState: SubmissionState.SUBMITTED,\n      })\n    },\n    [accessRequirementId, accessorId, reviewerId, history, location.pathname],\n    INPUT_CHANGE_DEBOUNCE_DELAY_MS,\n  )\n\n  return (\n    <div className=\"AccessSubmissionDashboard bootstrap-4-backport\">\n      <div className=\"InputPanel\">\n        <div>\n          <FormLabel htmlFor=\"arId-filter\">\n            Filter by Access Requirement Name\n          </FormLabel>\n          <AccessRequirementSearchBox\n            inputId=\"arId-filter\"\n            onChange={setAccessRequirementId}\n            placeholder=\"Search for an Access Requirement Name \"\n          />\n        </div>\n        <div>\n          <FormLabel htmlFor=\"requester-filter\">Filter by Requester</FormLabel>\n          <UserSearchBoxV2\n            inputId=\"requester-filter\"\n            placeholder=\"Search for a user name\"\n            defaultValue={accessorId}\n            onChange={onRequesterChange}\n            typeFilter={TYPE_FILTER.USERS_ONLY}\n          />\n        </div>\n        <div>\n          <FormLabel htmlFor=\"reviewer-filter\">Filter by Reviewer</FormLabel>\n          <UserSearchBoxV2\n            inputId=\"reviewer-filter\"\n            placeholder=\"Search for a user or team name\"\n            defaultValue={reviewerId}\n            onChange={onReviewerChange}\n          />\n        </div>\n      </div>\n\n      <Typography variant=\"headline3\">Access Request Submissions</Typography>\n      <AccessRequestSubmissionTable {...tableProps} />\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport {\n  BrowserRouter,\n  BrowserRouterProps,\n  MemoryRouter,\n  MemoryRouterProps,\n  NavLink,\n  Route,\n  Switch,\n  useParams,\n} from 'react-router-dom'\nimport { useGetCurrentUserBundle } from '../../utils/hooks/SynapseAPI/user/useUserBundle'\nimport { Typography } from '@mui/material'\nimport { SynapseErrorBoundary } from '../error/ErrorBanner'\nimport IconSvg, { Icon } from '../IconSvg'\nimport { SynapseSpinner } from '../LoadingScreen'\nimport { UserHistoryDashboard } from './AccessHistoryDashboard'\nimport { AccessRequirementDashboard } from './AccessRequirementDashboard'\nimport { DataAccessSubmissionDashboard } from './AccessSubmissionDashboard'\nimport SubmissionPage from './SubmissionPage'\n\nfunction LinkTab(props: {\n  href: string\n  children: React.ReactNode\n  icon: Icon\n}) {\n  const { href, children, icon } = props\n  return (\n    <NavLink className=\"Tab\" role=\"tab\" to={href}>\n      <IconSvg\n        icon={icon}\n        sx={{\n          paddingRight: '0.2rem',\n        }}\n      />\n      <Typography variant=\"buttonLink\">{children}</Typography>\n    </NavLink>\n  )\n}\n\ntype ReviewerDashboardProps = {\n  /** Used to determine the base path for the component. Default is #!DataAccessManagement:default */\n  routerBaseName?: string\n  /** If true use a MemoryRouter, which prevents the browser URL from updating. For demo purposes only. */\n  useMemoryRouter?: boolean\n}\n\nexport function ReviewerDashboard(props: ReviewerDashboardProps) {\n  const {\n    routerBaseName = '#!DataAccessManagement:default',\n    useMemoryRouter = false,\n  } = props\n\n  const { data: userBundle, isLoading } = useGetCurrentUserBundle()\n\n  const hasActPermissions = userBundle?.isACTMember\n  const hasReviewerPermissions =\n    userBundle?.isACTMember || userBundle?.isARReviewer\n\n  const Router = useCallback(\n    (props: MemoryRouterProps | BrowserRouterProps) => {\n      if (useMemoryRouter) {\n        return <MemoryRouter {...props} />\n      } else {\n        return <BrowserRouter {...props} />\n      }\n    },\n    [useMemoryRouter],\n  )\n\n  if (isLoading) {\n    return <SynapseSpinner size={50} />\n  }\n\n  return (\n    <Router basename={routerBaseName}>\n      <div className=\"ReviewerDashboard\">\n        <div className=\"Tabs\" role=\"tablist\">\n          {hasActPermissions && (\n            <LinkTab href=\"/AccessRequirements\" icon=\"accessClosed\">\n              Access Requirements\n            </LinkTab>\n          )}\n          {hasReviewerPermissions && (\n            <LinkTab href=\"/Submissions\" icon=\"discussion\">\n              Submissions\n            </LinkTab>\n          )}\n          {hasReviewerPermissions && (\n            <LinkTab href=\"/UserAccessHistory\" icon=\"history\">\n              User Access History\n            </LinkTab>\n          )}\n        </div>\n        <div className=\"TabContentContainer\">\n          <SynapseErrorBoundary>\n            <Switch>\n              {hasActPermissions && (\n                <Route path=\"/AccessRequirements\">\n                  <AccessRequirementDashboard />\n                </Route>\n              )}\n              {hasReviewerPermissions && [\n                <Route exact path=\"/Submissions\" key=\"/Submissions\">\n                  <DataAccessSubmissionDashboard />\n                </Route>,\n\n                <Route path=\"/Submissions/:id\" key=\"/Submissions/:id\">\n                  <SubmissionPageRouteRenderer />\n                </Route>,\n              ]}\n              {\n                <Route exact path=\"/UserAccessHistory\">\n                  <UserHistoryDashboard />\n                </Route>\n              }\n            </Switch>\n          </SynapseErrorBoundary>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nfunction SubmissionPageRouteRenderer() {\n  const { id } = useParams<{ id: string }>()\n  return <SubmissionPage submissionId={id} />\n}\n\nexport default ReviewerDashboard\n"],"names":["useSearchAccessApprovalsInfinite","params","options","accessToken","keyFactory","useSynapseContext","useInfiniteQuery","context","SynapseClient.searchAccessApprovals","page","BrowserRouter","_React$Component","_inheritsLoose","_this","_len","args","_key","createBrowserHistory","_proto","React","Router","resolveToLocation","to","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","isModifiedEvent","event","LinkAnchor","_ref","forwardedRef","innerRef","navigate","_onClick","rest","_objectWithoutPropertiesLoose","target","props","_extends","ex","Link","_ref2","_ref2$component","component","replace","__RouterContext","invariant","history","location","href","isDuplicateNavigation","createPath","method","forwardRefShim$1","forwardRef$1","joinClassnames","classnames","NavLink","_ref$ariaCurrent","ariaCurrent","_ref$activeClassName","activeClassName","activeStyle","classNameProp","exact","isActiveProp","locationProp","sensitive","strict","styleProp","toLocation","path","escapedPath","match","matchPath","isActive","className","style","AccessApprovalsTable","accessorId","accessRequirementId","sort","setSort","useState","AccessApprovalSortField","Direction","searchRequest","useMemo","data","hasNextPage","fetchNextPage","isLoading","accessApprovals","onSort","field","jsxs","Table","jsx","SortIcon","item","PRODUCTION_ENDPOINT_CONFIG","UserCard","SMALL_USER_CARD","upperFirst","formatDate","dayjs","SynapseSpinner","Typography","Button","AccessRequestSubmissionTable","showSubmitter","showStatus","showRequesters","reviewerId","submissionState","reviewerFilterType","SubmissionSortField","useSearchAccessSubmissionsInfinite","accessSubmissions","UserOrTeamBadge","user","requester","ACT_TEAM_ID","reviewerId2","UserHistoryDashboard","setAccessRequirementId","setAccessorId","approvalTableProps","setApprovalTableProps","submissionTableProps","setSubmissionTableProps","userBundle","useGetCurrentUserBundle","hasActPermissions","useLocation","useHistory","INPUT_CHANGE_DEBOUNCE_DELAY_MS","onAccessorChange","useCallback","selected","useEffect","initialParams","useDebouncedEffect","omitBy","NoSearchResultComponent","FormLabel","UserSearchBoxV2","TYPE_FILTER","AccessRequirementSearchBox","Fragment","AccessRequirementTable","nameContains","relatedProjectId","accessType","onCreateNewAccessRequirementClicked","useSearchAccessRequirementsInfinite","accessRequirements","IconSvg","ar","projectId","EntityLink","AccessRequirementDashboard","setNameContains","setRelatedProjectId","setReviewerId","initializeFromSearchParams","showEntityFinder","setShowEntityFinder","tableProps","setTableProps","updateQueryParams","nameContains2","relatedProjectId2","paramsObject","onReviewerChange","EntityFinderModal","FinderScope","EntityType","InputGroup","FormControl","e","newValue","DataAccessSubmissionDashboard","SubmissionState","onRequesterChange","LinkTab","children","icon","ReviewerDashboard","routerBaseName","useMemoryRouter","hasReviewerPermissions","props2","MemoryRouter","SynapseErrorBoundary","Switch","Route","SubmissionPageRouteRenderer","id","useParams","SubmissionPage"],"mappings":"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"}