{"version":3,"file":"UserOrTeamBadge-3b959ec0.js","sources":["../../src/components/TeamBadge.tsx","../../src/components/UserOrTeamBadge/UserOrTeamBadge.tsx"],"sourcesContent":["import React from 'react'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../utils/functions/getEndpoint'\nimport IconSvg, { IconName } from './IconSvg/IconSvg'\nimport {\n  AUTHENTICATED_PRINCIPAL_ID,\n  PUBLIC_PRINCIPAL_ID,\n} from '../utils/SynapseConstants'\n\nexport type TeamBadgeProps = {\n  teamId: string | number\n  teamName: string\n  disableHref?: boolean\n}\n\nexport default function TeamBadge(props: TeamBadgeProps) {\n  const { teamId } = props\n  let { teamName, disableHref } = props\n\n  let icon: IconName = 'team'\n\n  if (teamId == AUTHENTICATED_PRINCIPAL_ID) {\n    icon = 'public'\n    teamName = 'All registered Synapse users'\n    disableHref = true\n  }\n  if (teamId == PUBLIC_PRINCIPAL_ID) {\n    icon = 'public'\n    teamName = 'Anyone on the web'\n    disableHref = true\n  }\n\n  const Tag = disableHref ? 'span' : 'a'\n\n  return (\n    <span>\n      <IconSvg icon={icon} />\n      <Tag\n        style={{ marginLeft: '5px' }}\n        href={\n          disableHref\n            ? undefined\n            : `${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Team:${teamId}`\n        }\n      >\n        {teamName}\n      </Tag>\n    </span>\n  )\n}\n","import { Skeleton } from '@mui/material'\nimport React from 'react'\nimport { useGetUserGroupHeader } from '../../synapse-queries'\nimport { UserGroupHeader } from '@sage-bionetworks/synapse-types'\nimport TeamBadge from '../TeamBadge'\nimport { UserBadge } from '../UserCard/UserBadge'\n\nexport type UserOrTeamBadgeProps = {\n  /* The principal ID of the user or team. Required if userGroupHeader is undefined. */\n  principalId?: string | number\n  /* The userGroupHeader of the user or team. Required if principalId is undefined. */\n  userGroupHeader?: UserGroupHeader\n  showFullName?: boolean\n  disableHref?: boolean\n  showCardOnHover?: boolean\n}\n\nexport default function UserOrTeamBadge(props: UserOrTeamBadgeProps) {\n  let principalId = props.principalId\n  const {\n    disableHref,\n    showCardOnHover,\n    showFullName,\n    userGroupHeader: providedUserGroupHeader,\n  } = props\n\n  if (principalId == null) {\n    principalId = providedUserGroupHeader?.ownerId\n  }\n\n  const { data: fetchedUserGroupHeader } = useGetUserGroupHeader(\n    (principalId ?? '').toString(),\n    {\n      enabled: !providedUserGroupHeader,\n    },\n  )\n\n  const userGroupHeader = providedUserGroupHeader ?? fetchedUserGroupHeader\n\n  if (principalId == null && providedUserGroupHeader == null) {\n    console.error(\n      'Expected one of principalId or userGroupHeader to be defined but both were null or undefined',\n    )\n    return <></>\n  } else if (userGroupHeader === undefined) {\n    return <Skeleton width={125} height={30} />\n  } else if (userGroupHeader.isIndividual) {\n    return (\n      <UserBadge\n        userId={principalId!.toString()}\n        disableLink={disableHref}\n        showFullName={showFullName}\n        showCardOnHover={showCardOnHover}\n      />\n    )\n  } else {\n    return (\n      <TeamBadge\n        teamId={principalId!}\n        teamName={userGroupHeader.userName}\n        disableHref={disableHref}\n      />\n    )\n  }\n}\n"],"names":["TeamBadge","props","teamId","teamName","disableHref","icon","AUTHENTICATED_PRINCIPAL_ID","PUBLIC_PRINCIPAL_ID","jsxs","jsx","IconSvg","PRODUCTION_ENDPOINT_CONFIG","UserOrTeamBadge","principalId","showCardOnHover","showFullName","providedUserGroupHeader","fetchedUserGroupHeader","useGetUserGroupHeader","userGroupHeader","Fragment","Skeleton","UserBadge"],"mappings":"oZAcA,SAAAA,EAAAC,EAAA,CACE,KAAA,CAAA,OAAAC,CAAA,EAAAD,EACA,GAAA,CAAA,SAAAE,EAAA,YAAAC,CAAA,EAAAH,EAEAI,EAAA,OAEA,OAAAH,GAAAI,IACED,EAAA,SACAF,EAAA,+BACAC,EAAA,IAEFF,GAAAK,IACEF,EAAA,SACAF,EAAA,oBACAC,EAAA,IAKFI,EAAA,OAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,KAAAL,EAAA,EAAqBI,EAJzBL,EAAA,OAAA,IAKK,CAAA,MAAA,CAAA,WAAA,KAAA,EAC4B,KAAAA,EAAA,OAAA,GAAAO,EAAA,MAAA,UAAAT,CAAA,GAI+B,SAAAC,CAGzD,CAAA,CACH,CAAA,CAAA,CAGN,yYC/BA,SAAAS,EAAAX,EAAA,CACE,IAAAY,EAAAZ,EAAA,YACA,KAAA,CAAM,YAAAG,EACJ,gBAAAU,EACA,aAAAC,EACA,gBAAAC,CACiB,EAAAf,EAGnBY,GAAA,OACEA,EAAAG,GAAA,YAAAA,EAAA,SAGF,KAAA,CAAA,KAAAC,CAAA,EAAAC,GAAyCL,GAAA,IAAA,SAAA,EACV,CAC7B,QAAA,CAAAG,CACY,CACZ,EAGFG,EAAAH,GAAAC,EAEA,OAAAJ,GAAA,MAAAG,GAAA,MACE,QAAA,MAAQ,8FACN,EAEFP,EAAAW,EAAA,CAAA,CAAA,GAASD,IAAA,OAETV,EAAAY,EAAA,CAAA,MAAA,IAAA,OAAA,EAAA,CAAA,EAAyCF,EAAA,aAEzCV,EACEa,EAAC,CAAA,OAAAT,EAAA,SAAA,EAC+B,YAAAT,EACjB,aAAAW,EACb,gBAAAD,CACA,CAAA,EAIJL,EACET,EAAC,CAAA,OAAAa,EACS,SAAAM,EAAA,SACkB,YAAAf,CAC1B,CAAA,CAIR"}