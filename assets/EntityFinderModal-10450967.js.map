{"version":3,"file":"EntityFinderModal-10450967.js","sources":["../../src/lib/containers/FluidModal.tsx","../../src/lib/containers/entity_finder/EntityFinderModal.tsx"],"sourcesContent":["import { Skeleton } from '@mui/material'\nimport React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport { ButtonVariant } from 'react-bootstrap/esm/types'\nimport { Tooltip } from '@mui/material'\nimport { Typography } from '@mui/material'\nimport { HelpPopover, HelpPopoverProps } from './HelpPopover'\n\ntype ModalAction = {\n  skeleton?: boolean\n  variant?: ButtonVariant\n  copy?: React.ReactNode\n  onClick?: () => void\n  disabled?: boolean\n  [key: string]: any\n}\n\nexport type FluidModalProps = {\n  className?: string\n  show: boolean\n  children: JSX.Element\n  title: string | JSX.Element\n  titlePopoverProps?: HelpPopoverProps\n  onClose: () => void\n  primaryAction?: ModalAction\n  secondaryActions?: ModalAction[]\n}\n\nfunction ModalActionButton(props: ModalAction) {\n  const { copy, skeleton, ...rest } = props\n\n  if (props.skeleton) {\n    return <Skeleton variant=\"rectangular\" width={150} />\n  }\n  return (\n    <Tooltip\n      title={rest['data-tip'] ?? ''}\n      placement=\"top\"\n      enterNextDelay={300}\n    >\n      <Button {...rest}>{copy}</Button>\n    </Tooltip>\n  )\n}\n\n/**\n * Full-screen modal that scales with screen size. Fits requirements defined in SWC-5801\n * @param props\n * @returns\n */\nexport const FluidModal = (props: FluidModalProps) => {\n  // TODO: Info button\n  return (\n    <Modal\n      className={`FluidModal bootstrap-4-backport ${props.className ?? ''}`}\n      backdrop=\"static\"\n      animation={false}\n      show={props.show}\n      onHide={props.onClose}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <Typography variant={'headline1'} component=\"span\">\n            {props.title}\n            {props.titlePopoverProps && (\n              <HelpPopover\n                {...{\n                  placement: 'right',\n                  ...props.titlePopoverProps,\n                  className:\n                    'SRC-margin-left-5 ' +\n                    (props.titlePopoverProps?.className ?? ''),\n                }}\n              />\n            )}\n          </Typography>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.children}</Modal.Body>\n      <Modal.Footer>\n        {props.secondaryActions &&\n          props.secondaryActions.reverse().map((action, index) => {\n            return (\n              <ModalActionButton\n                key={index}\n                {...{\n                  variant: 'outline',\n                  ...action,\n                }}\n              />\n            )\n          })}\n        {props.primaryAction && (\n          <ModalActionButton\n            {...{\n              variant: 'sds-primary',\n              ...props.primaryAction,\n            }}\n          />\n        )}\n      </Modal.Footer>\n    </Modal>\n  )\n}\n","import React, { useState } from 'react'\nimport { Reference } from '../../utils/synapseTypes'\nimport { Typography } from '@mui/material'\nimport { FluidModal } from '../FluidModal'\nimport { HelpPopoverProps } from '../HelpPopover'\nimport WarningDialog from '../synapse_form_wrapper/WarningDialog'\nimport EntityFinder, { EntityFinderProps } from './EntityFinder'\n\nexport const UNSAVED_CHANGES = 'Unsaved Changes'\n\nexport type EntityFinderModalProps = {\n  configuration: Omit<EntityFinderProps, 'onSelectedChange'>\n  show: boolean\n  onClose: () => void\n  title: string\n  titlePopoverProps?: HelpPopoverProps\n  onConfirm: (selected: Reference[]) => void\n  confirmButtonCopy: string\n  onCancel: () => void\n  promptCopy?: string\n}\n\nexport const EntityFinderModal = (props: EntityFinderModalProps) => {\n  const [selected, setSelected] = useState<Reference[]>([])\n  const [showUnsavedChangesWarning, setShowUnsavedChangesWarning] =\n    useState(false)\n  return (\n    <>\n      <WarningDialog\n        title={UNSAVED_CHANGES}\n        content=\"Any unsaved changes will be lost. Are you sure you want to close the finder?\"\n        open={showUnsavedChangesWarning}\n        confirmButtonText=\"Close Finder\"\n        onConfirm={() => {\n          setShowUnsavedChangesWarning(false)\n          props.onCancel()\n        }}\n        onCancel={() => {\n          setShowUnsavedChangesWarning(false)\n        }}\n      />\n      <FluidModal\n        className={showUnsavedChangesWarning ? 'SRC-hidden' : undefined}\n        show={props.show}\n        title={props.title}\n        titlePopoverProps={props.titlePopoverProps}\n        onClose={props.onClose}\n        primaryAction={{\n          copy: props.confirmButtonCopy,\n          onClick: () => {\n            props.onConfirm(selected)\n          },\n        }}\n        secondaryActions={[\n          {\n            copy: 'Cancel',\n            onClick: () => {\n              if (selected.length > 0) {\n                setShowUnsavedChangesWarning(true)\n              } else {\n                props.onCancel()\n              }\n            },\n          },\n        ]}\n      >\n        <>\n          <Typography variant={'body1'}>{props.promptCopy}</Typography>\n          <EntityFinder\n            {...props.configuration}\n            onSelectedChange={setSelected}\n          />\n        </>\n      </FluidModal>\n    </>\n  )\n}\n"],"names":["ModalActionButton","props","copy","skeleton","rest","jsx","Skeleton","Tooltip","Button","FluidModal","jsxs","Modal","Typography","HelpPopover","_a","action","index","UNSAVED_CHANGES","EntityFinderModal","selected","setSelected","useState","showUnsavedChangesWarning","setShowUnsavedChangesWarning","Fragment","WarningDialog","EntityFinder"],"mappings":"ieA4BA,SAAAA,EAAAC,EAAA,CACE,KAAA,CAAA,KAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAH,EAEA,OAAAA,EAAA,SACEI,EAAAC,EAAA,CAAA,QAAA,cAAA,MAAA,GAAA,CAAA,EAEFD,EACEE,EAAC,CAAA,MAAAH,EAAA,UAAA,GAAA,GAC4B,UAAA,MACjB,eAAA,IACM,SAAAC,EAAAG,EAAA,CAAA,GAAAJ,EAAA,SAAAF,EAAA,CAEQ,CAAA,CAG9B,CAOO,MAAAO,EAAAR,GAAA,OAEL,OAAAS,EACEC,EAAC,CAAA,UAAA,mCAAAV,EAAA,WAAA,KACkE,SAAA,SACxD,UAAA,GACE,KAAAA,EAAA,KACC,OAAAA,EAAA,QACE,SAAA,CAEdI,EAAAM,EAAA,OAAA,CAAA,YAAA,GAAA,SAAAN,EAAAM,EAAA,MAAA,CAAA,SAAAD,EAAAE,EAAA,CAAA,QAAA,YAAA,UAAA,OAAA,SAAA,CAGOX,EAAA,MAAMA,EAAA,mBAAAI,EAELQ,EAAC,CACK,UAAA,QACS,GAAAZ,EAAA,kBACF,UAAA,wBAAAa,EAAAb,EAAA,oBAAA,YAAAa,EAAA,YAAA,GAIX,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,EAAA,EAIRT,EAAAM,EAAA,KAAA,CAAA,SAAAV,EAAA,SAAA,EAC4BS,EAAAC,EAAA,OAAA,CAAA,SAAA,CAEzBV,EAAA,kBAAAA,EAAA,iBAAA,QAAA,EAAA,IAAA,CAAAc,EAAAC,IAEGX,EACEL,EAAC,CAEK,QAAA,UACO,GAAAe,CAEX,EAAAC,CAJK,CAKP,EAEHf,EAAA,eAAAI,EAEDL,EAAC,CACK,QAAA,cACO,GAAAC,EAAA,aAEX,CAAA,CACF,EAAA,CAEJ,CAAA,CAAA,CAGN,44BC/FO,MAAAgB,EAAA,kBAcAC,EAAAjB,GAAA,CACL,KAAA,CAAAkB,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEA,OAAAX,EAAAc,EAAA,CAAA,SAAA,CAEInB,EAAAoB,EAAC,CAAA,MAAAR,EACQ,QAAA,+EACC,KAAAK,EACF,kBAAA,eACY,UAAA,IAAA,CAEhBC,EAAA,EAAA,EACAtB,EAAA,SAAA,CAAe,EACjB,SAAA,IAAA,CAEEsB,EAAA,EAAA,CAAkC,CACpC,CAAA,EACFlB,EACAI,EAAC,CAAA,UAAAa,EAAA,aAAA,OACuD,KAAArB,EAAA,KAC1C,MAAAA,EAAA,MACC,kBAAAA,EAAA,kBACY,QAAAA,EAAA,QACV,cAAA,CACA,KAAAA,EAAA,kBACD,QAAA,IAAA,CAEVA,EAAA,UAAAkB,CAAA,CAAwB,CAC1B,EACF,iBAAA,CACkB,CAChB,KAAA,SACQ,QAAA,IAAA,CAEJA,EAAA,OAAA,EACEI,EAAA,EAAA,EAEAtB,EAAA,SAAA,CACF,CACF,CACF,EACF,SAAAS,EAAAc,EAAA,CAAA,SAAA,CAGEnB,EAAAO,EAAA,CAAA,QAAA,QAAA,SAAAX,EAAA,WAAA,EAAgDI,EAChDqB,EAAC,CAAA,GAAAzB,EAAA,cACW,iBAAAmB,CACQ,CAAA,CACpB,EAAA,CACF,CAAA,CACF,CAAA,CAAA,CAGN"}