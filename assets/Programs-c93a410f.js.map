{"version":3,"file":"Programs-c93a410f.js","sources":["../../src/components/Programs/Programs.Mobile.tsx","../../src/components/Programs/Programs.Desktop.tsx","../../src/components/Programs/Programs.tsx"],"sourcesContent":["import React from 'react'\nimport { ProgramsDataProps } from './Programs'\nimport ExpandableContent from '../home_page/ExpandableContent'\nimport LargeButton from '../../components/styled/LargeButton'\nimport { ImageFileHandle } from '../widgets/ImageFileHandle'\n\nexport default function ProgramsMobile({\n  link,\n  summary,\n  title,\n  color,\n  fileHandleAssociation,\n  exploreLink,\n}: ProgramsDataProps) {\n  const titleElement = (\n    <div className=\"Programs__Mobile__Header\">\n      <span className=\"Programs__Card__header__icon\">\n        {fileHandleAssociation && (\n          <ImageFileHandle fileHandleAssociation={fileHandleAssociation} />\n        )}\n      </span>\n      <span className=\"Programs__Mobile__Header__Title\"> {title} </span>\n    </div>\n  )\n  const content = (\n    <div className=\"Programs__Mobile__Content\">\n      {link && (\n        <p className=\"Programs__Card__header__info__link\">\n          <a\n            className=\"highlight-link\"\n            href={link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Visit website\n          </a>\n        </p>\n      )}\n      <p>{summary}</p>\n      <LargeButton\n        color=\"secondary\"\n        variant=\"contained\"\n        href={exploreLink}\n        sx={{ marginLeft: 0 }}\n      >\n        Explore\n      </LargeButton>\n    </div>\n  )\n  return <ExpandableContent title={titleElement} content={content} />\n}\n","import React from 'react'\nimport { ProgramsDataProps } from './Programs'\nimport LargeButton from '../../components/styled/LargeButton'\nimport { ImageFileHandle } from '../widgets/ImageFileHandle'\n\nexport default function ProgramsDesktop({\n  link,\n  summary,\n  title,\n  color,\n  fileHandleAssociation,\n  exploreLink,\n}: ProgramsDataProps) {\n  return (\n    <div className=\"Programs__Card\">\n      <div\n        className=\"Programs__Card__header\"\n        style={{ backgroundColor: color.replace(')', ',.05)') }}\n      >\n        <div className=\"Programs__Card__header__icon\">\n          {fileHandleAssociation && (\n            <ImageFileHandle fileHandleAssociation={fileHandleAssociation} />\n          )}\n        </div>\n        <div className=\"Programs__Card__header__info\">\n          <span className=\"Programs__Card__header__info__title\"> {title} </span>\n          {link && (\n            <p className=\"Programs__Card__header__info__link\">\n              <a\n                className=\"highlight-link\"\n                href={link}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Visit website\n              </a>\n            </p>\n          )}\n        </div>\n      </div>\n      <div className=\"Programs__Card__summary\">\n        <p> {summary} </p>\n        <LargeButton\n          color=\"secondary\"\n          variant=\"contained\"\n          href={exploreLink}\n          sx={{ width: '120px', marginLeft: 0 }}\n        >\n          Explore\n        </LargeButton>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  FileHandleAssociation,\n  QueryBundleRequest,\n} from '@sage-bionetworks/synapse-types'\nimport { SynapseConstants } from '../../utils'\n\nimport useGetQueryResultBundle from '../../synapse-queries/entity/useGetQueryResultBundle'\nimport useShowDesktop from '../../utils/hooks/useShowDesktop'\nimport ProgramsMobile from './Programs.Mobile'\nimport ProgramsDesktop from './Programs.Desktop'\nimport { getColorPalette } from '../ColorGradient'\nimport { CardLink } from '../CardContainerLogic'\nimport { getFieldIndex } from '../../utils/functions/queryUtils'\nimport { useGetEntity } from '../../synapse-queries/entity/useEntity'\nimport { getFileHandleAssociation, getLinkParams } from '../GenericCard'\n\nexport type ProgramsProps = {\n  entityId: string\n  rgbIndex: number\n  titleColumnName: string\n  linkColumnName: string\n  summaryColumnName: string\n  imageFileHandleColumnName: string\n  linkConfig: CardLink\n}\n\nexport type ProgramsDataProps = {\n  title: string\n  summary: string\n  link: string\n  exploreLink: string\n  color: string\n  fileHandleAssociation?: FileHandleAssociation\n}\n\nexport const Programs: React.FC<ProgramsProps> = (props: ProgramsProps) => {\n  const {\n    entityId,\n    titleColumnName,\n    linkColumnName,\n    summaryColumnName,\n    imageFileHandleColumnName,\n    linkConfig,\n    rgbIndex,\n  } = props\n  const showDesktop = useShowDesktop()\n  const entity = useGetEntity(entityId)\n  const color: string = getColorPalette(rgbIndex ?? 0, 2).colorPalette[0]\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `select * from ${entityId}`,\n    },\n  }\n  const { data: queryResultBundle } =\n    useGetQueryResultBundle(queryBundleRequest)\n\n  const titleColumnIndex = getFieldIndex(titleColumnName, queryResultBundle)\n  const summaryColumnIndex = getFieldIndex(summaryColumnName, queryResultBundle)\n  const linkColumnIndex = getFieldIndex(linkColumnName, queryResultBundle)\n  const iconColumnIndex = getFieldIndex(\n    imageFileHandleColumnName,\n    queryResultBundle,\n  )\n  return (\n    <div className={`Programs${showDesktop ? '__Desktop' : ''}`}>\n      {queryResultBundle?.queryResult!.queryResults.rows.map(el => {\n        const values = el.values as string[]\n        if (values.some(value => value === null)) {\n          // We cast values above assuming there are no null values, emit a warning just in case.\n          console.warn('Row has null value(s) when no nulls expected')\n        }\n\n        const title = values[titleColumnIndex]\n        const summary = values[summaryColumnIndex]\n        const link = values[linkColumnIndex] ?? ''\n        const iconFileHandleIdValue = values[iconColumnIndex]\n\n        const schema: Record<string, number> = {}\n        queryResultBundle?.queryResult!.queryResults.headers.forEach(\n          (header, colIndex) => {\n            schema[header.name] = colIndex\n          },\n        )\n        const { href } = getLinkParams(link, linkConfig, values, schema)\n\n        const fileHandleAssociation = getFileHandleAssociation(\n          entity.data,\n          iconFileHandleIdValue,\n          `syn${el.rowId}`,\n        )\n        const ProgramsDataProps: ProgramsDataProps = {\n          title,\n          summary,\n          link,\n          color,\n          exploreLink: href,\n          fileHandleAssociation,\n        }\n        return showDesktop ? (\n          <ProgramsDesktop {...ProgramsDataProps} />\n        ) : (\n          <ProgramsMobile {...ProgramsDataProps} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Programs\n"],"names":["ProgramsMobile","link","summary","title","color","fileHandleAssociation","exploreLink","jsx","ExpandableContent","jsxs","ImageFileHandle","LargeButton","ProgramsDesktop","Programs","props","entityId","titleColumnName","linkColumnName","summaryColumnName","imageFileHandleColumnName","linkConfig","rgbIndex","showDesktop","useShowDesktop","entity","useGetEntity","getColorPalette","queryBundleRequest","SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","queryResultBundle","useGetQueryResultBundle","titleColumnIndex","getFieldIndex","summaryColumnIndex","linkColumnIndex","iconColumnIndex","el","values","value","iconFileHandleIdValue","schema","header","colIndex","href","getLinkParams","getFileHandleAssociation","ProgramsDataProps"],"mappings":"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"}