{"version":3,"file":"RequirementItem-8ca4e3d4.js","sources":["../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/AccessTimeFilled.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/CheckTwoTone.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/LockTwoTone.js","../../src/components/AccessRequirementList/AccessApprovalCheckMark.tsx","../../src/components/AccessRequirementList/RequirementItem/RequirementItem.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm3.3 14.71L11 12.41V7h2v4.59l3.71 3.71-1.42 1.41z\"\n}), 'AccessTimeFilled');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n}), 'CheckTwoTone');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 20h12V10H6v10zm6-7c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}, \"1\")], 'LockTwoTone');","import React from 'react'\nimport {\n  AccessTimeFilled,\n  CheckTwoTone,\n  LockTwoTone,\n} from '@mui/icons-material'\nimport Skeleton from '@mui/material/Skeleton'\nimport ConditionalWrapper from '../utils/ConditionalWrapper'\nimport { Avatar, AvatarProps, styled, SxProps, useTheme } from '@mui/material'\nimport { StyledComponent } from '@emotion/styled/dist/emotion-styled.cjs'\n\nexport enum RequirementItemStatus {\n  COMPLETE = 'COMPLETE',\n  PENDING = 'PENDING',\n  LOCKED = 'LOCKED',\n  LOADING = 'LOADING',\n}\n\nexport type CheckMarkProps = {\n  status: RequirementItemStatus\n  sx?: SxProps\n}\n\nconst iconSx: SxProps = {\n  width: '20px',\n}\n\nconst AccessApprovalCheckMarkContainer: StyledComponent<AvatarProps> = styled(\n  Avatar,\n  {\n    label: 'AccessApprovalCheckMarkContainer',\n  },\n)({\n  color: 'white',\n  height: '30px',\n  width: '30px',\n})\n\n/**\n * Renders an icon for a RequirementItem based on the status prop.\n */\nexport default function AccessApprovalCheckMark({\n  status,\n  sx,\n}: CheckMarkProps) {\n  const theme = useTheme()\n  let backgroundColor: string | undefined = undefined\n  let icon: React.ReactNode = <></>\n\n  switch (status) {\n    case RequirementItemStatus.COMPLETE:\n      backgroundColor = theme.palette.success.main\n      icon = <CheckTwoTone sx={iconSx} />\n      break\n    case RequirementItemStatus.PENDING:\n      // TODO: Use theme to provide this color\n      // Should always be Sapphire 500, not the primary color of the current app\n      backgroundColor = '#395979'\n      icon = <AccessTimeFilled sx={iconSx} />\n      break\n    case RequirementItemStatus.LOCKED:\n      // TODO: Use theme to provide this color\n      backgroundColor = '#FF9B00'\n      icon = <LockTwoTone sx={iconSx} />\n      break\n    case RequirementItemStatus.LOADING:\n    default:\n      break\n  }\n\n  return (\n    <AccessApprovalCheckMarkContainer\n      data-testid={`AccessApprovalCheckMark-${status}`}\n      sx={{\n        backgroundColor: backgroundColor,\n        ...sx,\n      }}\n    >\n      <ConditionalWrapper\n        condition={status === RequirementItemStatus.LOADING}\n        wrapper={Skeleton}\n        wrapperProps={{\n          variant: 'circular',\n          sx: {\n            minHeight: '30px',\n            minWidth: '30px',\n          },\n        }}\n      >\n        {icon}\n      </ConditionalWrapper>\n    </AccessApprovalCheckMarkContainer>\n  )\n}\n","import React from 'react'\nimport AccessApprovalCheckMark, {\n  RequirementItemStatus,\n} from '../AccessApprovalCheckMark'\nimport { Box, BoxProps, Button, ButtonProps, styled } from '@mui/material'\nimport { StyledComponent } from '@emotion/styled'\n\nexport type RequirementItemProps = React.PropsWithChildren<{\n  status: RequirementItemStatus\n  actions?: ButtonProps[]\n}>\n\nconst RequirementContainer: StyledComponent<BoxProps> = styled(Box, {\n  label: 'RequirementContainer',\n})({\n  display: 'grid',\n  gridTemplateRows: '50px auto auto',\n  gridTemplateColumns: '30px auto',\n  columnGap: '20px',\n  alignItems: 'center',\n  margin: '1rem 0 2rem',\n})\n\nconst InlineButtonContainer: StyledComponent<BoxProps> = styled(Box, {\n  label: 'InlineButtonContainer',\n})(({ theme }) => ({\n  display: 'flex',\n  gap: theme.spacing(2),\n  margin: `${theme.spacing(1)} 0`,\n}))\n\n/**\n * Renders a single requirement item, which includes a checkmark, the requirement text, and any required actions. This\n * component represents one condition (of potentially many) that a user must meet to gain access to data.\n *\n * This component does not make requests to external stores and is side-effect free. Variations in the displayed\n * component are controlled entirely by props\n */\nexport default function RequirementItem(props: RequirementItemProps) {\n  const { actions, status, children } = props\n  return (\n    <RequirementContainer data-testid={'RequirementItem'}>\n      <AccessApprovalCheckMark\n        status={status}\n        sx={{\n          gridRow: '1 / span 1',\n          gridColumn: '1 / span 1',\n          margin: 'auto',\n        }}\n      />\n      <Box\n        sx={{\n          gridColumn: '2 / span 1',\n          gridRow: '1 / span 2',\n          alignSelf: 'start',\n          mt: '12px',\n        }}\n      >\n        {children}\n      </Box>\n      {actions && !!actions.length && (\n        <>\n          {/* This Box renders a vertical line beneath the icon that spans the 2nd row */}\n          <Box\n            sx={{\n              gridColumnStart: 1,\n              gridRow: '2 / span 1',\n              width: '1px',\n              height: '100%',\n              backgroundColor: 'grey.400',\n              margin: 'auto',\n            }}\n          />\n          {/*\n            This Box renders the 'L' shaped line, which is visually connected to the vertical line in the 3rd row\n            Placing this in the 3rd row vertically aligns this with the InlineButtonContainer actions\n            */}\n          <Box\n            sx={theme => ({\n              gridColumnStart: 1,\n              gridRow: '3 / span 1',\n              width: '50%',\n              height: '60%',\n              borderLeft: `1px solid ${theme.palette.grey[400]}`,\n              borderBottom: `1px solid ${theme.palette.grey[400]}`,\n              marginLeft: 'auto',\n              marginBottom: 'auto',\n              marginRight: '0',\n            })}\n          />\n        </>\n      )}\n      {actions && !!actions.length && (\n        <InlineButtonContainer\n          sx={{ gridColumnStart: 2, gridRow: '3 / span 1', mt: 2 }}\n        >\n          {actions.map((buttonProps, i) => (\n            <Button key={i} disabled={status === 'LOADING'} {...buttonProps} />\n          ))}\n        </InlineButtonContainer>\n      )}\n    </RequirementContainer>\n  )\n}\n"],"names":["AccessTimeFilled","createSvgIcon","_jsx","CheckTwoTone","LockTwoTone","RequirementItemStatus","RequirementItemStatus2","iconSx","AccessApprovalCheckMarkContainer","styled","Avatar","AccessApprovalCheckMark","status","sx","theme","useTheme","backgroundColor","icon","jsx","Fragment","ConditionalWrapper","Skeleton","RequirementContainer","Box","InlineButtonContainer","RequirementItem","props","actions","children","jsxs","buttonProps","i","Button"],"mappings":"wZAEA,MAAAA,EAAeC,EAA4BC,EAAK,OAAQ,CACtD,EAAG,uIACL,CAAC,EAAG,kBAAkB,ECFtBC,EAAeF,EAA4BC,EAAK,OAAQ,CACtD,EAAG,2DACL,CAAC,EAAG,cAAc,ECFlBE,EAAeH,EAAc,CAAcC,EAAK,OAAQ,CACtD,EAAG,oEACH,QAAS,IACX,EAAG,GAAG,EAAgBA,EAAK,OAAQ,CACjC,EAAG,6NACL,EAAG,GAAG,CAAC,EAAG,aAAa,ECIhB,IAAAG,GAAAC,IACLA,EAAA,SAAA,WACAA,EAAA,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UAJUA,IAAAD,GAAA,CAAA,CAAA,EAYZ,MAAAE,EAAA,CAAwB,MAAA,MAExB,EAEAC,EAAAC,EAAuEC,EACrE,CACA,MAAA,kCACS,CAEX,EAAA,CAAE,MAAA,QACO,OAAA,OACC,MAAA,MAEV,CAAA,EAKA,SAAAC,EAAA,CAAgD,OAAAC,EAC9C,GAAAC,CAEF,EAAA,CACE,MAAAC,EAAAC,IACA,IAAAC,EACAC,EAAAC,EAAAC,EAAA,CAAA,CAAA,EAEA,OAAAP,EAAA,CAAgB,IAAA,WAEZI,EAAAF,EAAA,QAAA,QAAA,KACAG,EAAAC,EAAAf,EAAA,CAAA,GAAAI,CAAA,CAAA,EACA,MAAA,IAAA,UAIAS,EAAA,UACAC,EAAAC,EAAAlB,EAAA,CAAA,GAAAO,CAAA,CAAA,EACA,MAAA,IAAA,SAGAS,EAAA,UACAC,EAAAC,EAAAd,EAAA,CAAA,GAAAG,CAAA,CAAA,EACA,KAGA,CAGJ,OAAAW,EACEV,EAAC,CAAA,cAAA,2BAAAI,IACyC,GAAA,CACpC,gBAAAI,EACF,GAAAH,CACG,EACL,SAAAK,EAEAE,EAAC,CAAA,UAAAR,IAAA,UACuB,QAAAS,EACb,aAAA,CACK,QAAA,WACH,GAAA,CACL,UAAA,OACS,SAAA,MACD,CACZ,EACF,SAAAJ,CAEC,CAAA,CACH,CAAA,CAGN,kcCjFA,MAAAK,EAAAb,EAAAc,EAAA,CAAoE,MAAA,sBAEpE,CAAA,EAAA,CAAG,QAAA,OACQ,iBAAA,iBACS,oBAAA,YACG,UAAA,OACV,WAAA,SACC,OAAA,aAEd,CAAA,EAEAC,EAAAf,EAAAc,EAAA,CAAqE,MAAA,uBAErE,CAAA,EAAA,CAAA,CAAA,MAAAT,MAAA,CAAmB,QAAA,OACR,IAAAA,EAAA,QAAA,CAAA,EACW,OAAA,GAAAA,EAAA,QAAA,CAAA,KAEtB,EAAA,EASA,SAAAW,EAAAC,EAAA,CACE,KAAA,CAAA,QAAAC,EAAA,OAAAf,EAAA,SAAAgB,CAAA,EAAAF,EACA,OAAAG,EAAAP,EAAA,CAAA,cAAA,kBAAA,SAAA,CAEIJ,EAAAP,EAAC,CAAA,OAAAC,EACC,GAAA,CACI,QAAA,aACO,WAAA,aACG,OAAA,MACJ,CACV,CAAA,EACFM,EACAK,EAAC,CAAA,GAAA,CACK,WAAA,aACU,QAAA,aACH,UAAA,QACE,GAAA,MACP,EACN,SAAAK,CAEC,CAAA,EACHD,GAAA,CAAA,CAAAA,EAAA,QAAAE,EAAAV,EAAA,CAAA,SAAA,CAIID,EAAAK,EAAC,CAAA,GAAA,CACK,gBAAA,EACe,QAAA,aACR,MAAA,MACF,OAAA,OACC,gBAAA,WACS,OAAA,MACT,CACV,CAAA,EACFL,EAKAK,EAAC,CAAA,GAAAT,IAAA,CACe,gBAAA,EACK,QAAA,aACR,MAAA,MACF,OAAA,MACC,WAAA,aAAAA,EAAA,QAAA,KAAA,GAAA,IACuC,aAAA,aAAAA,EAAA,QAAA,KAAA,GAAA,IACE,WAAA,OACrC,aAAA,OACE,YAAA,GACD,EACf,CAAA,CACF,EAAA,EACFa,GAAA,CAAA,CAAAA,EAAA,QAAAT,EAGAM,EAAC,CAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,aAAA,GAAA,CAAA,EACwD,SAAAG,EAAA,IAAA,CAAAG,EAAAC,IAAAb,EAAAc,EAAA,CAAA,SAAApB,IAAA,UAAA,GAAAkB,CAAA,EAAAC,CAAA,CAAA,CAItD,CAAA,CACH,CAAA,CAAA,CAIR;;;;","x_google_ignoreList":[0,1,2]}