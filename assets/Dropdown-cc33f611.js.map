{"version":3,"file":"Dropdown-cc33f611.js","sources":["../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/SelectableContext.js","../../../../node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/esm/matches.js","../../../../node_modules/.pnpm/@restart+hooks@0.4.8_react@18.2.0/node_modules/@restart/hooks/esm/useForceUpdate.js","../../../../node_modules/.pnpm/@restart+hooks@0.4.8_react@18.2.0/node_modules/@restart/hooks/esm/useEventListener.js","../../../../node_modules/.pnpm/@restart+hooks@0.4.8_react@18.2.0/node_modules/@restart/hooks/esm/useGlobalListener.js","../../../../node_modules/.pnpm/react-overlays@5.2.1_react-dom@18.2.0_react@18.2.0/node_modules/react-overlays/esm/DropdownContext.js","../../../../node_modules/.pnpm/react-overlays@5.2.1_react-dom@18.2.0_react@18.2.0/node_modules/react-overlays/esm/DropdownMenu.js","../../../../node_modules/.pnpm/react-overlays@5.2.1_react-dom@18.2.0_react@18.2.0/node_modules/react-overlays/esm/DropdownToggle.js","../../../../node_modules/.pnpm/react-overlays@5.2.1_react-dom@18.2.0_react@18.2.0/node_modules/react-overlays/esm/Dropdown.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/NavContext.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/DropdownItem.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/NavbarContext.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/DropdownMenu.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/DropdownToggle.js","../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/Dropdown.js"],"sourcesContent":["import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;"],"names":["SelectableContext","React","makeEventKey","eventKey","href","SelectableContext$1","matchesImpl","matches","node","selector","body","nativeMatch","n","s","useForceUpdate","_useReducer","useReducer","state","dispatch","useEventListener","eventTarget","event","listener","capture","handler","useEventCallback","useEffect","target","useGlobalListener","documentTarget","useCallback","DropdownContext","noop","useDropdownMenu","options","context","useContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","offset","rootCloseEvent","_options$fixed","fixed","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","handleClose","e","_ref","drop","setMenu","menuElement","toggleElement","placement","popper","usePopper","mergeOptionsWithPopperConfig","menuProps","_extends","metadata","useRootClose","propTypes","PropTypes","defaultProps","DropdownMenu","_ref2","children","_objectWithoutPropertiesLoose","_useDropdownMenu","props","meta","useDropdownToggle","_ref$show","_ref$toggle","toggle","setToggle","handleClick","DropdownToggle","_useDropdownToggle","useRefWithUpdate","forceUpdate","ref","attachRef","element","Dropdown","defaultShow","rawShow","rawOnToggle","_ref$itemSelector","itemSelector","focusFirstItemOnShow","_useUncontrolledProp","useUncontrolledProp","onToggle","_useRefWithUpdate","menuRef","_useRefWithUpdate2","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","useMemo","focusToggle","maybeFocusFirst","type","focusType","first","qsa","getNextFocusedChild","current","items","index","_menuRef$current","_toggleRef$current","key","fromMenu","fromToggle","isInput","next","_next","addEventListener","_menuRef$current2","NavContext","NavContext$1","_excluded","SafeAnchor","DropdownItem","bsPrefix","className","disabled","onClick","onSelect","propActive","Component","prefix","useBootstrapPrefix","onSelectCtx","navContext","activeKey","active","classNames","DropdownItem$1","NavbarContext","useWrappedRefWithWarning","componentName","alignDirection","align","alignRight","showProps","renderOnMount","_ref$as","isNavbar","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","brkPoint","direction","_useDropdownMenu$","hasShown","useMergedRefs","style","DropdownMenu$1","split","childBsPrefix","Button","toggleProps","DropdownToggle$1","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","handleToggle","source","handleSelect","BaseDropdown","Dropdown$1"],"mappings":"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"}