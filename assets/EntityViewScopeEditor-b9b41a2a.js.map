{"version":3,"file":"EntityViewScopeEditor-b9b41a2a.js","sources":["../../src/components/EntityViewScopeEditor/EntityViewScopeEditor.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport EntityHeaderTable from '../EntityHeaderTable'\nimport { EntityType, ReferenceList } from '@sage-bionetworks/synapse-types'\nimport { VersionSelectionType } from '../EntityFinder/VersionSelectionType'\nimport { FinderScope } from '../EntityFinder/tree/EntityTree'\nimport { EntityTypeGroup } from '../../utils/functions/EntityTypeUtils'\nimport { Typography } from '@mui/material'\n\nconst DEFAULT_SELECTABLE_TYPES = EntityTypeGroup.CONTAINER\nconst PROJECT_VIEW_SELECTABLE_TYPES = [EntityType.PROJECT]\n\nexport type EntityViewScopeEditorProps = {\n  scopeIds: string[]\n  onChange: (scopeIds: string[]) => void\n  isProjectView?: boolean\n}\n\nexport default function EntityViewScopeEditor(\n  props: EntityViewScopeEditorProps,\n) {\n  const { scopeIds, isProjectView = false, onChange } = props\n  const references: ReferenceList = useMemo(\n    () => scopeIds.map(scope => ({ targetId: scope })),\n    [scopeIds],\n  )\n\n  return (\n    <>\n      <Typography variant={'body1'} mb={1.25} sx={{ fontWeight: 700 }}>\n        Scope\n      </Typography>\n      {scopeIds.length === 0 && (\n        <Typography variant={'smallText1'} color={'grey.600'}>\n          Empty! Add items to populate your view\n        </Typography>\n      )}\n      <EntityHeaderTable\n        references={references}\n        isEditable={true}\n        onUpdate={newReferences => {\n          onChange(newReferences.map(ref => ref.targetId))\n        }}\n        removeSelectedRowsButtonText={'Remove Selected Items from View Scope'}\n        objectNameCopy={isProjectView ? 'project' : 'container'}\n        hideTextFieldToPasteValue={true}\n        entityFinderConfiguration={{\n          selectMultiple: true,\n          versionSelection: VersionSelectionType.DISALLOWED,\n          initialScope: FinderScope.ALL_PROJECTS,\n          initialContainer: 'root',\n          selectableTypes: isProjectView\n            ? PROJECT_VIEW_SELECTABLE_TYPES\n            : DEFAULT_SELECTABLE_TYPES,\n        }}\n      />\n    </>\n  )\n}\n"],"names":["DEFAULT_SELECTABLE_TYPES","EntityTypeGroup","PROJECT_VIEW_SELECTABLE_TYPES","EntityType","EntityViewScopeEditor","props","scopeIds","isProjectView","onChange","references","useMemo","scope","jsxs","Fragment","jsx","Typography","EntityHeaderTable","newReferences","ref","VersionSelectionType","FinderScope"],"mappings":"qVAQA,MAAAA,EAAAC,EAAA,UACAC,EAAA,CAAAC,EAAA,OAAA,EAQA,SAAAC,EAAAC,EAAA,CAGE,KAAA,CAAA,SAAAC,EAAA,cAAAC,EAAA,GAAA,SAAAC,CAAA,EAAAH,EACAI,EAAAC,EAAA,QAAkC,IAAAJ,EAAA,IAAAK,IAAA,CAAA,SAAAA,CAAA,EAAA,EACiB,CAAAL,CAAA,CACxC,EAGX,OAAAM,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,QAAA,QAAA,GAAA,KAAA,GAAA,CAAA,WAAA,GAAA,EAAA,SAAA,OAAA,CAAA,EAEAT,EAAA,SAAA,GAAAQ,EAAAC,EAAA,CAAA,QAAA,aAAA,MAAA,WAAA,SAAA,wCAAA,CAAA,EAIED,EAEFE,EAAC,CAAA,WAAAP,EACC,WAAA,GACY,SAAAQ,GAAA,CAEVT,EAAAS,EAAA,IAAAC,GAAAA,EAAA,QAAA,CAAA,CAA+C,EACjD,6BAAA,wCAC8B,eAAAX,EAAA,UAAA,YACc,0BAAA,GACjB,0BAAA,CACA,eAAA,GACT,iBAAAY,EAAA,WACuB,aAAAC,EAAA,aACb,iBAAA,OACR,gBAAAb,EAAAL,EAAAF,CAGd,CACN,CAAA,CACF,CAAA,CAAA,CAGN"}