{"version":3,"file":"_basePickBy-38ad6c16.js","sources":["../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseSet.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_basePickBy.js"],"sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n"],"names":["assignValue","require$$0","castPath","require$$1","isIndex","require$$2","isObject","require$$3","toKey","require$$4","baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","_baseSet","baseGet","basePickBy","paths","predicate","result","_basePickBy"],"mappings":"gHAAA,IAAIA,EAAcC,EACdC,EAAWC,EACXC,EAAUC,EACVC,EAAWC,EACXC,EAAQC,EAYZ,SAASC,EAAQC,EAAQC,EAAMC,EAAOC,EAAY,CAChD,GAAI,CAACR,EAASK,CAAM,EAClB,OAAOA,EAETC,EAAOV,EAASU,EAAMD,CAAM,EAO5B,QALII,EAAQ,GACRC,EAASJ,EAAK,OACdK,EAAYD,EAAS,EACrBE,EAASP,EAENO,GAAU,MAAQ,EAAEH,EAAQC,GAAQ,CACzC,IAAIG,EAAMX,EAAMI,EAAKG,CAAK,CAAC,EACvBK,EAAWP,EAEf,GAAIM,IAAQ,aAAeA,IAAQ,eAAiBA,IAAQ,YAC1D,OAAOR,EAGT,GAAII,GAASE,EAAW,CACtB,IAAII,EAAWH,EAAOC,CAAG,EACzBC,EAAWN,EAAaA,EAAWO,EAAUF,EAAKD,CAAM,EAAI,OACxDE,IAAa,SACfA,EAAWd,EAASe,CAAQ,EACxBA,EACCjB,EAAQQ,EAAKG,EAAQ,CAAC,CAAC,EAAI,CAAA,EAAK,CAAA,EAExC,CACDf,EAAYkB,EAAQC,EAAKC,CAAQ,EACjCF,EAASA,EAAOC,CAAG,CACpB,CACD,OAAOR,CACT,CAEA,IAAAW,EAAiBZ,EClDba,EAAUtB,EACVS,EAAUP,EACVD,EAAWG,EAWf,SAASmB,EAAWb,EAAQc,EAAOC,EAAW,CAK5C,QAJIX,EAAQ,GACRC,EAASS,EAAM,OACfE,EAAS,CAAA,EAEN,EAAEZ,EAAQC,GAAQ,CACvB,IAAIJ,EAAOa,EAAMV,CAAK,EAClBF,EAAQU,EAAQZ,EAAQC,CAAI,EAE5Bc,EAAUb,EAAOD,CAAI,GACvBF,EAAQiB,EAAQzB,EAASU,EAAMD,CAAM,EAAGE,CAAK,CAEhD,CACD,OAAOc,CACT,CAEA,IAAAC,EAAiBJ"}