{"version":3,"file":"SchemaDrivenAnnotationEditor-d6132f33.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormGroup/formGroupClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormGroup/FormGroup.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItem/listItemClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItem/ListItem.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/useRadioGroup.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/radioClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/Radio.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/Add.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/ArrowDownward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/ArrowUpward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/HelpOutline.js","../../src/synapse-queries/entity/useEntityBoundSchema.ts","../../src/synapse-queries/entity/useSchema.ts","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Add.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Error.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/ArrowDownward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/ArrowUpward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Remove.js","../../../../node_modules/.pnpm/@rjsf+mui@5.7.3_@emotion+react@11.10.6_@emotion+styled@11.10.6_@mui+icons-material@5.11.16_@m_sqn4ixj6qiqomuwg7kznczz65m/node_modules/@rjsf/mui/dist/mui.esm.js","../../src/assets/icons/AddToList.tsx","../../src/components/SchemaDrivenAnnotationEditor/AnnotationEditorUtils.ts","../../src/components/SchemaDrivenAnnotationEditor/template/AdditionalPropertyContext.tsx","../../src/components/SchemaDrivenAnnotationEditor/field/AdditionalPropertiesSchemaField.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/BooleanWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/DateTimeWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ObjectFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/TextWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/field/CustomObjectField.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldItemTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/WrapIfAdditionalTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldTitleTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ButtonTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldDescriptionTable.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/DescriptionFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldDescriptionTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/BaseInputTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldErrorTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/SchemaDrivenAnnotationEditor.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n\n/**\n * Must be used as the last child of ListItem to function properly.\n */\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n  _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      button = false,\n      children: childrenProp,\n      className,\n      component: componentProp,\n      components = {},\n      componentsProps = {},\n      ContainerComponent = 'li',\n      ContainerProps: {\n        className: ContainerClassName\n      } = {},\n      dense = false,\n      disabled = false,\n      disableGutters = false,\n      disablePadding = false,\n      divider = false,\n      focusVisibleClassName,\n      secondaryAction,\n      selected = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = slots.root || components.Root || ListItemRoot;\n  const rootProps = slotProps.root || componentsProps.root || {};\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n  let Component = componentProp || 'li';\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component;\n\n    // Avoid nesting of li > li.\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children);\n\n    // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n    let secondaryActionIndex = -1;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    }\n\n    //  is ListItemSecondaryAction the last child of ListItem\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItem;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span')({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary']);\nexport default radioClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');","import { UseQueryOptions, useQuery } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport { JsonSchemaObjectBinding } from '@sage-bionetworks/synapse-types'\nimport { ValidationResults } from '@sage-bionetworks/synapse-types'\n\nexport function useGetSchemaBinding(\n  entityId: string,\n  options?: UseQueryOptions<JsonSchemaObjectBinding | null, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<JsonSchemaObjectBinding | null, SynapseClientError>(\n    keyFactory.getEntityBoundJsonSchemaQueryKey(entityId),\n    () => SynapseClient.getSchemaBinding(entityId, accessToken),\n    options,\n  )\n}\n\nexport function useGetValidationResults(\n  entityId: string,\n  options?: UseQueryOptions<ValidationResults, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useQuery<ValidationResults, SynapseClientError>(\n    keyFactory.getEntitySchemaValidationResultsQueryKey(entityId),\n    () => SynapseClient.getSchemaValidationResults(entityId, accessToken),\n    options,\n  )\n}\n","/*\n * Hooks for accessing services related to JSON Schemas in the Synapse REST API\n */\n\nimport { JSONSchema7 } from 'json-schema'\nimport { useQuery, UseQueryOptions } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\n\nexport function useGetSchema(\n  schema$id: string,\n  options?: UseQueryOptions<JSONSchema7, SynapseClientError>,\n) {\n  const { keyFactory } = useSynapseContext()\n  return useQuery<JSONSchema7, SynapseClientError>(\n    keyFactory.getValidationSchemaQueryKey(schema$id),\n    async () => {\n      const response = await SynapseClient.getValidationSchema(schema$id)\n      return response.validationSchema\n    },\n    options,\n  )\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexports.default = _default;","import { withTheme } from '@rjsf/core';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { TranslatableString, getUiOptions, getTemplate, getInputProps, examplesId, labelValue, ariaDescribedByIds, errorId, helpId, titleId, descriptionId, canExpand, getSubmitButtonOptions, ADDITIONAL_PROPERTY_FLAG, schemaRequiresTrueValue, enumOptionsIsSelected, optionId, enumOptionsSelectValue, enumOptionsDeselectValue, enumOptionsValueForIndex, enumOptionsIndexForValue, rangeSpec } from '@rjsf/utils';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport CopyIcon from '@mui/icons-material/ContentCopy';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Slider from '@mui/material/Slider';\nimport MenuItem from '@mui/material/MenuItem';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nvar _excluded$4 = [\"uiSchema\", \"registry\"];\n/** The `AddButton` renders a button that represent the `Add` action on a form\r\n */\nfunction AddButton(_ref) {\n  var registry = _ref.registry,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n  var translateString = registry.translateString;\n  return jsx(IconButton, _extends({\n    title: translateString(TranslatableString.AddItemButton)\n  }, props, {\n    color: 'primary',\n    children: jsx(AddIcon, {})\n  }));\n}\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\r\n *\r\n * @param props - The `ArrayFieldTemplateItemType` props for the component\r\n */\nfunction ArrayFieldItemTemplate(props) {\n  var children = props.children,\n    disabled = props.disabled,\n    hasToolbar = props.hasToolbar,\n    hasCopy = props.hasCopy,\n    hasMoveDown = props.hasMoveDown,\n    hasMoveUp = props.hasMoveUp,\n    hasRemove = props.hasRemove,\n    index = props.index,\n    onCopyIndexClick = props.onCopyIndexClick,\n    onDropIndexClick = props.onDropIndexClick,\n    onReorderClick = props.onReorderClick,\n    readonly = props.readonly,\n    uiSchema = props.uiSchema,\n    registry = props.registry;\n  var _registry$templates$B = registry.templates.ButtonTemplates,\n    CopyButton = _registry$templates$B.CopyButton,\n    MoveDownButton = _registry$templates$B.MoveDownButton,\n    MoveUpButton = _registry$templates$B.MoveUpButton,\n    RemoveButton = _registry$templates$B.RemoveButton;\n  var btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n    minWidth: 0\n  };\n  return jsxs(Grid, {\n    container: true,\n    alignItems: 'center',\n    children: [jsx(Grid, {\n      item: true,\n      xs: true,\n      style: {\n        overflow: 'auto'\n      },\n      children: jsx(Box, {\n        mb: 2,\n        children: jsx(Paper, {\n          elevation: 2,\n          children: jsx(Box, {\n            p: 2,\n            children: children\n          })\n        })\n      })\n    }), hasToolbar && jsxs(Grid, {\n      item: true,\n      children: [(hasMoveUp || hasMoveDown) && jsx(MoveUpButton, {\n        style: btnStyle,\n        disabled: disabled || readonly || !hasMoveUp,\n        onClick: onReorderClick(index, index - 1),\n        uiSchema: uiSchema,\n        registry: registry\n      }), (hasMoveUp || hasMoveDown) && jsx(MoveDownButton, {\n        style: btnStyle,\n        disabled: disabled || readonly || !hasMoveDown,\n        onClick: onReorderClick(index, index + 1),\n        uiSchema: uiSchema,\n        registry: registry\n      }), hasCopy && jsx(CopyButton, {\n        style: btnStyle,\n        disabled: disabled || readonly,\n        onClick: onCopyIndexClick(index),\n        uiSchema: uiSchema,\n        registry: registry\n      }), hasRemove && jsx(RemoveButton, {\n        style: btnStyle,\n        disabled: disabled || readonly,\n        onClick: onDropIndexClick(index),\n        uiSchema: uiSchema,\n        registry: registry\n      })]\n    })]\n  });\n}\n\nvar _excluded$3 = [\"key\"];\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\r\n *\r\n * @param props - The `ArrayFieldTemplateItemType` props for the component\r\n */\nfunction ArrayFieldTemplate(props) {\n  var canAdd = props.canAdd,\n    disabled = props.disabled,\n    idSchema = props.idSchema,\n    uiSchema = props.uiSchema,\n    items = props.items,\n    onAddClick = props.onAddClick,\n    readonly = props.readonly,\n    registry = props.registry,\n    required = props.required,\n    schema = props.schema,\n    title = props.title;\n  var uiOptions = getUiOptions(uiSchema);\n  var ArrayFieldDescriptionTemplate = getTemplate('ArrayFieldDescriptionTemplate', registry, uiOptions);\n  var ArrayFieldItemTemplate = getTemplate('ArrayFieldItemTemplate', registry, uiOptions);\n  var ArrayFieldTitleTemplate = getTemplate('ArrayFieldTitleTemplate', registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  var AddButton = registry.templates.ButtonTemplates.AddButton;\n  return jsx(Paper, {\n    elevation: 2,\n    children: jsxs(Box, {\n      p: 2,\n      children: [jsx(ArrayFieldTitleTemplate, {\n        idSchema: idSchema,\n        title: uiOptions.title || title,\n        schema: schema,\n        uiSchema: uiSchema,\n        required: required,\n        registry: registry\n      }), jsx(ArrayFieldDescriptionTemplate, {\n        idSchema: idSchema,\n        description: uiOptions.description || schema.description,\n        schema: schema,\n        uiSchema: uiSchema,\n        registry: registry\n      }), jsxs(Grid, {\n        container: true,\n        children: [items && items.map(function (_ref) {\n          var key = _ref.key,\n            itemProps = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n          return jsx(ArrayFieldItemTemplate, _extends({}, itemProps), key);\n        }), canAdd && jsx(Grid, {\n          container: true,\n          justifyContent: 'flex-end',\n          children: jsx(Grid, {\n            item: true,\n            children: jsx(Box, {\n              mt: 2,\n              children: jsx(AddButton, {\n                className: 'array-item-add',\n                onClick: onAddClick,\n                disabled: disabled || readonly,\n                uiSchema: uiSchema,\n                registry: registry\n              })\n            })\n          })\n        })]\n      }, \"array-item-list-\" + idSchema.$id)]\n    })\n  });\n}\n\nvar _excluded$2 = [\"id\", \"name\", \"placeholder\", \"required\", \"readonly\", \"disabled\", \"type\", \"label\", \"hideLabel\", \"value\", \"onChange\", \"onChangeOverride\", \"onBlur\", \"onFocus\", \"autofocus\", \"options\", \"schema\", \"uiSchema\", \"rawErrors\", \"formContext\", \"registry\", \"InputLabelProps\"],\n  _excluded2$1 = [\"step\", \"min\", \"max\"];\nvar TYPES_THAT_SHRINK_LABEL = ['date', 'datetime-local', 'file', 'time'];\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\r\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\r\n * It can be customized/overridden for other themes or individual implementations as needed.\r\n *\r\n * @param props - The `WidgetProps` for this template\r\n */\nfunction BaseInputTemplate(props) {\n  var id = props.id,\n    placeholder = props.placeholder,\n    required = props.required,\n    readonly = props.readonly,\n    disabled = props.disabled,\n    type = props.type,\n    label = props.label,\n    hideLabel = props.hideLabel,\n    value = props.value,\n    onChange = props.onChange,\n    onChangeOverride = props.onChangeOverride,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    autofocus = props.autofocus,\n    options = props.options,\n    schema = props.schema,\n    _props$rawErrors = props.rawErrors,\n    rawErrors = _props$rawErrors === void 0 ? [] : _props$rawErrors,\n    InputLabelProps = props.InputLabelProps,\n    textFieldProps = _objectWithoutPropertiesLoose(props, _excluded$2);\n  var inputProps = getInputProps(schema, type, options);\n  // Now we need to pull out the step, min, max into an inner `inputProps` for material-ui\n  var step = inputProps.step,\n    min = inputProps.min,\n    max = inputProps.max,\n    rest = _objectWithoutPropertiesLoose(inputProps, _excluded2$1);\n  var otherProps = _extends({\n    inputProps: _extends({\n      step: step,\n      min: min,\n      max: max\n    }, schema.examples ? {\n      list: examplesId(id)\n    } : undefined)\n  }, rest);\n  var _onChange = function _onChange(_ref) {\n    var value = _ref.target.value;\n    return onChange(value === '' ? options.emptyValue : value);\n  };\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, value);\n  };\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, value);\n  };\n  var DisplayInputLabelProps = TYPES_THAT_SHRINK_LABEL.includes(type) ? _extends({}, InputLabelProps, {\n    shrink: true\n  }) : InputLabelProps;\n  return jsxs(Fragment, {\n    children: [jsx(TextField, _extends({\n      id: id,\n      name: id,\n      placeholder: placeholder,\n      label: labelValue(label || undefined, hideLabel, false),\n      autoFocus: autofocus,\n      required: required,\n      disabled: disabled || readonly\n    }, otherProps, {\n      value: value || value === 0 ? value : '',\n      error: rawErrors.length > 0,\n      onChange: onChangeOverride || _onChange,\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      InputLabelProps: DisplayInputLabelProps\n    }, textFieldProps, {\n      \"aria-describedby\": ariaDescribedByIds(id, !!schema.examples)\n    })), Array.isArray(schema.examples) && jsx(\"datalist\", {\n      id: examplesId(id),\n      children: schema.examples.concat(schema[\"default\"] && !schema.examples.includes(schema[\"default\"]) ? [schema[\"default\"]] : []).map(function (example) {\n        return jsx(\"option\", {\n          value: example\n        }, example);\n      })\n    })]\n  });\n}\n\n/** The `DescriptionField` is the template to use to render the description of a field\r\n *\r\n * @param props - The `DescriptionFieldProps` for this component\r\n */\nfunction DescriptionField(props) {\n  var id = props.id,\n    description = props.description;\n  if (description) {\n    return jsx(Typography, {\n      id: id,\n      variant: 'subtitle2',\n      style: {\n        marginTop: '5px'\n      },\n      children: description\n    });\n  }\n  return null;\n}\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\r\n *\r\n * @param props - The `ErrorListProps` for this component\r\n */\nfunction ErrorList(_ref) {\n  var errors = _ref.errors,\n    registry = _ref.registry;\n  var translateString = registry.translateString;\n  return jsx(Paper, {\n    elevation: 2,\n    children: jsxs(Box, {\n      mb: 2,\n      p: 2,\n      children: [jsx(Typography, {\n        variant: 'h6',\n        children: translateString(TranslatableString.ErrorsLabel)\n      }), jsx(List, {\n        dense: true,\n        children: errors.map(function (error, i) {\n          return jsxs(ListItem, {\n            children: [jsx(ListItemIcon, {\n              children: jsx(ErrorIcon, {\n                color: 'error'\n              })\n            }), jsx(ListItemText, {\n              primary: error.stack\n            })]\n          }, i);\n        })\n      })]\n    })\n  });\n}\n\nvar _excluded$1 = [\"icon\", \"color\", \"uiSchema\", \"registry\"],\n  _excluded2 = [\"iconType\"];\nfunction MuiIconButton(props) {\n  var icon = props.icon,\n    color = props.color,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded$1);\n  return jsx(IconButton, _extends({}, otherProps, {\n    size: 'small',\n    color: color,\n    children: icon\n  }));\n}\nfunction CopyButton(props) {\n  var translateString = props.registry.translateString;\n  return jsx(MuiIconButton, _extends({\n    title: translateString(TranslatableString.CopyButton)\n  }, props, {\n    icon: jsx(CopyIcon, {\n      fontSize: 'small'\n    })\n  }));\n}\nfunction MoveDownButton(props) {\n  var translateString = props.registry.translateString;\n  return jsx(MuiIconButton, _extends({\n    title: translateString(TranslatableString.MoveDownButton)\n  }, props, {\n    icon: jsx(ArrowDownwardIcon, {\n      fontSize: 'small'\n    })\n  }));\n}\nfunction MoveUpButton(props) {\n  var translateString = props.registry.translateString;\n  return jsx(MuiIconButton, _extends({\n    title: translateString(TranslatableString.MoveUpButton)\n  }, props, {\n    icon: jsx(ArrowUpwardIcon, {\n      fontSize: 'small'\n    })\n  }));\n}\nfunction RemoveButton(props) {\n  var iconType = props.iconType,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded2);\n  var translateString = otherProps.registry.translateString;\n  return jsx(MuiIconButton, _extends({\n    title: translateString(TranslatableString.RemoveButton)\n  }, otherProps, {\n    color: 'error',\n    icon: jsx(RemoveIcon, {\n      fontSize: iconType === 'default' ? undefined : 'small'\n    })\n  }));\n}\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\r\n *\r\n * @param props - The `FieldErrorProps` for the errors being rendered\r\n */\nfunction FieldErrorTemplate(props) {\n  var _props$errors = props.errors,\n    errors = _props$errors === void 0 ? [] : _props$errors,\n    idSchema = props.idSchema;\n  if (errors.length === 0) {\n    return null;\n  }\n  var id = errorId(idSchema);\n  return jsx(List, {\n    dense: true,\n    disablePadding: true,\n    children: errors.map(function (error, i) {\n      return jsx(ListItem, {\n        disableGutters: true,\n        children: jsx(FormHelperText, {\n          id: id,\n          children: error\n        })\n      }, i);\n    })\n  });\n}\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\r\n *\r\n * @param props - The `FieldHelpProps` to be rendered\r\n */\nfunction FieldHelpTemplate(props) {\n  var idSchema = props.idSchema,\n    help = props.help;\n  if (!help) {\n    return null;\n  }\n  var id = helpId(idSchema);\n  return jsx(FormHelperText, {\n    id: id,\n    children: help\n  });\n}\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\r\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\r\n *\r\n * @param props - The `FieldTemplateProps` for this component\r\n */\nfunction FieldTemplate(props) {\n  var id = props.id,\n    children = props.children,\n    classNames = props.classNames,\n    style = props.style,\n    disabled = props.disabled,\n    displayLabel = props.displayLabel,\n    hidden = props.hidden,\n    label = props.label,\n    onDropPropertyClick = props.onDropPropertyClick,\n    onKeyChange = props.onKeyChange,\n    readonly = props.readonly,\n    required = props.required,\n    _props$rawErrors = props.rawErrors,\n    rawErrors = _props$rawErrors === void 0 ? [] : _props$rawErrors,\n    errors = props.errors,\n    help = props.help,\n    rawDescription = props.rawDescription,\n    schema = props.schema,\n    uiSchema = props.uiSchema,\n    registry = props.registry;\n  var uiOptions = getUiOptions(uiSchema);\n  var WrapIfAdditionalTemplate = getTemplate('WrapIfAdditionalTemplate', registry, uiOptions);\n  if (hidden) {\n    return jsx(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: children\n    });\n  }\n  return jsx(WrapIfAdditionalTemplate, {\n    classNames: classNames,\n    style: style,\n    disabled: disabled,\n    id: id,\n    label: label,\n    onDropPropertyClick: onDropPropertyClick,\n    onKeyChange: onKeyChange,\n    readonly: readonly,\n    required: required,\n    schema: schema,\n    uiSchema: uiSchema,\n    registry: registry,\n    children: jsxs(FormControl, {\n      fullWidth: true,\n      error: rawErrors.length ? true : false,\n      required: required,\n      children: [children, displayLabel && rawDescription ? jsx(Typography, {\n        variant: 'caption',\n        color: 'textSecondary',\n        children: rawDescription\n      }) : null, errors, help]\n    })\n  });\n}\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\r\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\r\n * the properties.\r\n *\r\n * @param props - The `ObjectFieldTemplateProps` for this component\r\n */\nfunction ObjectFieldTemplate(props) {\n  var description = props.description,\n    title = props.title,\n    properties = props.properties,\n    required = props.required,\n    disabled = props.disabled,\n    readonly = props.readonly,\n    uiSchema = props.uiSchema,\n    idSchema = props.idSchema,\n    schema = props.schema,\n    formData = props.formData,\n    onAddClick = props.onAddClick,\n    registry = props.registry;\n  var uiOptions = getUiOptions(uiSchema);\n  var TitleFieldTemplate = getTemplate('TitleFieldTemplate', registry, uiOptions);\n  var DescriptionFieldTemplate = getTemplate('DescriptionFieldTemplate', registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  var AddButton = registry.templates.ButtonTemplates.AddButton;\n  return jsxs(Fragment, {\n    children: [title && jsx(TitleFieldTemplate, {\n      id: titleId(idSchema),\n      title: title,\n      required: required,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), description && jsx(DescriptionFieldTemplate, {\n      id: descriptionId(idSchema),\n      description: description,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: '10px'\n      },\n      children: [properties.map(function (element, index) {\n        return (\n          // Remove the <Grid> if the inner element is hidden as the <Grid>\n          // itself would otherwise still take up space.\n          element.hidden ? element.content : jsx(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              marginBottom: '10px'\n            },\n            children: element.content\n          }, index)\n        );\n      }), canExpand(schema, uiSchema, formData) && jsx(Grid, {\n        container: true,\n        justifyContent: 'flex-end',\n        children: jsx(Grid, {\n          item: true,\n          children: jsx(AddButton, {\n            className: 'object-property-expand',\n            onClick: onAddClick(schema),\n            disabled: disabled || readonly,\n            uiSchema: uiSchema,\n            registry: registry\n          })\n        })\n      })]\n    })]\n  });\n}\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\r\n */\nfunction SubmitButton(_ref) {\n  var uiSchema = _ref.uiSchema;\n  var _getSubmitButtonOptio = getSubmitButtonOptions(uiSchema),\n    submitText = _getSubmitButtonOptio.submitText,\n    norender = _getSubmitButtonOptio.norender,\n    _getSubmitButtonOptio2 = _getSubmitButtonOptio.props,\n    submitButtonProps = _getSubmitButtonOptio2 === void 0 ? {} : _getSubmitButtonOptio2;\n  if (norender) {\n    return null;\n  }\n  return jsx(Box, {\n    marginTop: 3,\n    children: jsx(Button, _extends({\n      type: 'submit',\n      variant: 'contained',\n      color: 'primary'\n    }, submitButtonProps, {\n      children: submitText\n    }))\n  });\n}\n\n/** The `TitleField` is the template to use to render the title of a field\r\n *\r\n * @param props - The `TitleFieldProps` for this component\r\n */\nfunction TitleField(_ref) {\n  var id = _ref.id,\n    title = _ref.title;\n  return jsxs(Box, {\n    id: id,\n    mb: 1,\n    mt: 1,\n    children: [jsx(Typography, {\n      variant: 'h5',\n      children: title\n    }), jsx(Divider, {})]\n  });\n}\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\r\n * part of an `additionalProperties` part of a schema.\r\n *\r\n * @param props - The `WrapIfAdditionalProps` for this component\r\n */\nfunction WrapIfAdditionalTemplate(props) {\n  var children = props.children,\n    classNames = props.classNames,\n    style = props.style,\n    disabled = props.disabled,\n    id = props.id,\n    label = props.label,\n    onDropPropertyClick = props.onDropPropertyClick,\n    onKeyChange = props.onKeyChange,\n    readonly = props.readonly,\n    required = props.required,\n    schema = props.schema,\n    uiSchema = props.uiSchema,\n    registry = props.registry;\n  var templates = registry.templates,\n    translateString = registry.translateString;\n  // Button templates are not overridden in the uiSchema\n  var RemoveButton = templates.ButtonTemplates.RemoveButton;\n  var keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n  var additional = (ADDITIONAL_PROPERTY_FLAG in schema);\n  var btnStyle = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold'\n  };\n  if (!additional) {\n    return jsx(\"div\", {\n      className: classNames,\n      style: style,\n      children: children\n    });\n  }\n  var handleBlur = function handleBlur(_ref) {\n    var target = _ref.target;\n    return onKeyChange(target.value);\n  };\n  return jsxs(Grid, {\n    container: true,\n    alignItems: 'center',\n    spacing: 2,\n    className: classNames,\n    style: style,\n    children: [jsx(Grid, {\n      item: true,\n      xs: true,\n      children: jsx(TextField, {\n        fullWidth: true,\n        required: required,\n        label: keyLabel,\n        defaultValue: label,\n        disabled: disabled || readonly,\n        id: id + \"-key\",\n        name: id + \"-key\",\n        onBlur: !readonly ? handleBlur : undefined,\n        type: 'text'\n      })\n    }), jsx(Grid, {\n      item: true,\n      xs: true,\n      children: children\n    }), jsx(Grid, {\n      item: true,\n      children: jsx(RemoveButton, {\n        iconType: 'default',\n        style: btnStyle,\n        disabled: disabled || readonly,\n        onClick: onDropPropertyClick(label),\n        uiSchema: uiSchema,\n        registry: registry\n      })\n    })]\n  }, id + \"-key\");\n}\n\nfunction generateTemplates() {\n  return {\n    ArrayFieldItemTemplate: ArrayFieldItemTemplate,\n    ArrayFieldTemplate: ArrayFieldTemplate,\n    BaseInputTemplate: BaseInputTemplate,\n    ButtonTemplates: {\n      AddButton: AddButton,\n      CopyButton: CopyButton,\n      MoveDownButton: MoveDownButton,\n      MoveUpButton: MoveUpButton,\n      RemoveButton: RemoveButton,\n      SubmitButton: SubmitButton\n    },\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldErrorTemplate: FieldErrorTemplate,\n    FieldHelpTemplate: FieldHelpTemplate,\n    FieldTemplate: FieldTemplate,\n    ObjectFieldTemplate: ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    WrapIfAdditionalTemplate: WrapIfAdditionalTemplate\n  };\n}\nvar Templates = /*#__PURE__*/generateTemplates();\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\r\n *  It is typically used to represent a boolean.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction CheckboxWidget(props) {\n  var _options$description;\n  var schema = props.schema,\n    id = props.id,\n    value = props.value,\n    disabled = props.disabled,\n    readonly = props.readonly,\n    _props$label = props.label,\n    label = _props$label === void 0 ? '' : _props$label,\n    hideLabel = props.hideLabel,\n    autofocus = props.autofocus,\n    onChange = props.onChange,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    registry = props.registry,\n    options = props.options,\n    uiSchema = props.uiSchema;\n  var DescriptionFieldTemplate = getTemplate('DescriptionFieldTemplate', registry, options);\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  var required = schemaRequiresTrueValue(schema);\n  var _onChange = function _onChange(_, checked) {\n    return onChange(checked);\n  };\n  var _onBlur = function _onBlur(_ref) {\n    var value = _ref.target.value;\n    return onBlur(id, value);\n  };\n  var _onFocus = function _onFocus(_ref2) {\n    var value = _ref2.target.value;\n    return onFocus(id, value);\n  };\n  var description = (_options$description = options.description) != null ? _options$description : schema.description;\n  return jsxs(Fragment, {\n    children: [!hideLabel && !!description && jsx(DescriptionFieldTemplate, {\n      id: descriptionId(id),\n      description: description,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), jsx(FormControlLabel, {\n      control: jsx(Checkbox, {\n        id: id,\n        name: id,\n        checked: typeof value === 'undefined' ? false : Boolean(value),\n        required: required,\n        disabled: disabled || readonly,\n        autoFocus: autofocus,\n        onChange: _onChange,\n        onBlur: _onBlur,\n        onFocus: _onFocus,\n        \"aria-describedby\": ariaDescribedByIds(id)\n      }),\n      label: labelValue(label, hideLabel, false)\n    })]\n  });\n}\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\r\n *  It is typically used to represent an array of enums.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction CheckboxesWidget(_ref) {\n  var label = _ref.label,\n    hideLabel = _ref.hideLabel,\n    id = _ref.id,\n    disabled = _ref.disabled,\n    options = _ref.options,\n    value = _ref.value,\n    autofocus = _ref.autofocus,\n    readonly = _ref.readonly,\n    required = _ref.required,\n    onChange = _ref.onChange,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n    enumDisabled = options.enumDisabled,\n    inline = options.inline,\n    emptyValue = options.emptyValue;\n  var checkboxesValues = Array.isArray(value) ? value : [value];\n  var _onChange = function _onChange(index) {\n    return function (_ref2) {\n      var checked = _ref2.target.checked;\n      if (checked) {\n        onChange(enumOptionsSelectValue(index, checkboxesValues, enumOptions));\n      } else {\n        onChange(enumOptionsDeselectValue(index, checkboxesValues, enumOptions));\n      }\n    };\n  };\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n  };\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n  };\n  return jsxs(Fragment, {\n    children: [labelValue(jsx(FormLabel, {\n      required: required,\n      htmlFor: id,\n      children: label || undefined\n    }), hideLabel), jsx(FormGroup, {\n      id: id,\n      row: !!inline,\n      children: Array.isArray(enumOptions) && enumOptions.map(function (option, index) {\n        var checked = enumOptionsIsSelected(option.value, checkboxesValues);\n        var itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n        var checkbox = jsx(Checkbox, {\n          id: optionId(id, index),\n          name: id,\n          checked: checked,\n          disabled: disabled || itemDisabled || readonly,\n          autoFocus: autofocus && index === 0,\n          onChange: _onChange(index),\n          onBlur: _onBlur,\n          onFocus: _onFocus,\n          \"aria-describedby\": ariaDescribedByIds(id)\n        });\n        return jsx(FormControlLabel, {\n          control: checkbox,\n          label: option.label\n        }, index);\n      })\n    })]\n  });\n}\n\n/** The `RadioWidget` is a widget for rendering a radio group.\r\n *  It is typically used with a string property constrained with enum options.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction RadioWidget(_ref) {\n  var _enumOptionsIndexForV;\n  var id = _ref.id,\n    options = _ref.options,\n    value = _ref.value,\n    required = _ref.required,\n    disabled = _ref.disabled,\n    readonly = _ref.readonly,\n    label = _ref.label,\n    hideLabel = _ref.hideLabel,\n    onChange = _ref.onChange,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus;\n  var enumOptions = options.enumOptions,\n    enumDisabled = options.enumDisabled,\n    emptyValue = options.emptyValue;\n  var _onChange = function _onChange(_, value) {\n    return onChange(enumOptionsValueForIndex(value, enumOptions, emptyValue));\n  };\n  var _onBlur = function _onBlur(_ref2) {\n    var value = _ref2.target.value;\n    return onBlur(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n  };\n  var _onFocus = function _onFocus(_ref3) {\n    var value = _ref3.target.value;\n    return onFocus(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n  };\n  var row = options ? options.inline : false;\n  var selectedIndex = (_enumOptionsIndexForV = enumOptionsIndexForValue(value, enumOptions)) != null ? _enumOptionsIndexForV : null;\n  return jsxs(Fragment, {\n    children: [labelValue(jsx(FormLabel, {\n      required: required,\n      htmlFor: id,\n      children: label || undefined\n    }), hideLabel), jsx(RadioGroup, {\n      id: id,\n      name: id,\n      value: selectedIndex,\n      row: row,\n      onChange: _onChange,\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      \"aria-describedby\": ariaDescribedByIds(id),\n      children: Array.isArray(enumOptions) && enumOptions.map(function (option, index) {\n        var itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n        var radio = jsx(FormControlLabel, {\n          control: jsx(Radio, {\n            name: id,\n            id: optionId(id, index),\n            color: 'primary'\n          }),\n          label: option.label,\n          value: String(index),\n          disabled: disabled || itemDisabled || readonly\n        }, index);\n        return radio;\n      })\n    })]\n  });\n}\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\r\n * in a div, with the value along side it.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction RangeWidget(props) {\n  var value = props.value,\n    readonly = props.readonly,\n    disabled = props.disabled,\n    onBlur = props.onBlur,\n    onFocus = props.onFocus,\n    options = props.options,\n    schema = props.schema,\n    onChange = props.onChange,\n    required = props.required,\n    label = props.label,\n    hideLabel = props.hideLabel,\n    id = props.id;\n  var sliderProps = _extends({\n    value: value,\n    label: label,\n    id: id,\n    name: id\n  }, rangeSpec(schema));\n  var _onChange = function _onChange(_, value) {\n    onChange(value != null ? value : options.emptyValue);\n  };\n  var _onBlur = function _onBlur(_ref) {\n    var value = _ref.target.value;\n    return onBlur(id, value);\n  };\n  var _onFocus = function _onFocus(_ref2) {\n    var value = _ref2.target.value;\n    return onFocus(id, value);\n  };\n  return jsxs(Fragment, {\n    children: [labelValue(jsx(FormLabel, {\n      required: required,\n      htmlFor: id,\n      children: label || undefined\n    }), hideLabel), jsx(Slider, _extends({\n      disabled: disabled || readonly,\n      onChange: _onChange,\n      onBlur: _onBlur,\n      onFocus: _onFocus,\n      valueLabelDisplay: 'auto'\n    }, sliderProps, {\n      \"aria-describedby\": ariaDescribedByIds(id)\n    }))]\n  });\n}\n\nvar _excluded = [\"schema\", \"id\", \"name\", \"options\", \"label\", \"hideLabel\", \"required\", \"disabled\", \"placeholder\", \"readonly\", \"value\", \"multiple\", \"autofocus\", \"onChange\", \"onBlur\", \"onFocus\", \"rawErrors\", \"registry\", \"uiSchema\", \"hideError\", \"formContext\"];\n/** The `SelectWidget` is a widget for rendering dropdowns.\r\n *  It is typically used with string properties constrained with enum options.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction SelectWidget(_ref) {\n  var id = _ref.id,\n    options = _ref.options,\n    label = _ref.label,\n    hideLabel = _ref.hideLabel,\n    required = _ref.required,\n    disabled = _ref.disabled,\n    placeholder = _ref.placeholder,\n    readonly = _ref.readonly,\n    value = _ref.value,\n    multiple = _ref.multiple,\n    autofocus = _ref.autofocus,\n    onChange = _ref.onChange,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    _ref$rawErrors = _ref.rawErrors,\n    rawErrors = _ref$rawErrors === void 0 ? [] : _ref$rawErrors,\n    textFieldProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var enumOptions = options.enumOptions,\n    enumDisabled = options.enumDisabled,\n    optEmptyVal = options.emptyValue;\n  multiple = typeof multiple === 'undefined' ? false : !!multiple;\n  var emptyValue = multiple ? [] : '';\n  var isEmpty = typeof value === 'undefined' || multiple && value.length < 1 || !multiple && value === emptyValue;\n  var _onChange = function _onChange(_ref2) {\n    var value = _ref2.target.value;\n    return onChange(enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n  };\n  var _onBlur = function _onBlur(_ref3) {\n    var value = _ref3.target.value;\n    return onBlur(id, enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n  };\n  var _onFocus = function _onFocus(_ref4) {\n    var value = _ref4.target.value;\n    return onFocus(id, enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n  };\n  var selectedIndexes = enumOptionsIndexForValue(value, enumOptions, multiple);\n  return jsx(TextField, _extends({\n    id: id,\n    name: id,\n    label: labelValue(label || undefined, hideLabel, false),\n    value: isEmpty ? emptyValue : selectedIndexes,\n    required: required,\n    disabled: disabled || readonly,\n    autoFocus: autofocus,\n    placeholder: placeholder,\n    error: rawErrors.length > 0,\n    onChange: _onChange,\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }, textFieldProps, {\n    select // Apply this and the following props after the potential overrides defined in textFieldProps\n    : true,\n    InputLabelProps: _extends({}, textFieldProps.InputLabelProps, {\n      shrink: !isEmpty\n    }),\n    SelectProps: _extends({}, textFieldProps.SelectProps, {\n      multiple: multiple\n    }),\n    \"aria-describedby\": ariaDescribedByIds(id),\n    children: Array.isArray(enumOptions) && enumOptions.map(function (_ref5, i) {\n      var value = _ref5.value,\n        label = _ref5.label;\n      var disabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(value) !== -1;\n      return jsx(MenuItem, {\n        value: String(i),\n        disabled: disabled,\n        children: label\n      }, i);\n    })\n  }));\n}\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\r\n *\r\n * @param props - The `WidgetProps` for this component\r\n */\nfunction TextareaWidget(props) {\n  var options = props.options,\n    registry = props.registry;\n  var BaseInputTemplate = getTemplate('BaseInputTemplate', registry, options);\n  var rows = 5;\n  if (typeof options.rows === 'string' || typeof options.rows === 'number') {\n    rows = options.rows;\n  }\n  return jsx(BaseInputTemplate, _extends({}, props, {\n    multiline: true,\n    rows: rows\n  }));\n}\n\nfunction generateWidgets() {\n  return {\n    CheckboxWidget: CheckboxWidget,\n    CheckboxesWidget: CheckboxesWidget,\n    RadioWidget: RadioWidget,\n    RangeWidget: RangeWidget,\n    SelectWidget: SelectWidget,\n    TextareaWidget: TextareaWidget\n  };\n}\nvar Widgets = /*#__PURE__*/generateWidgets();\n\nfunction generateTheme() {\n  return {\n    templates: generateTemplates(),\n    widgets: generateWidgets()\n  };\n}\nvar Theme = /*#__PURE__*/generateTheme();\n\nfunction generateForm() {\n  return withTheme(generateTheme());\n}\nvar MuiForm = /*#__PURE__*/generateForm();\n\nexport { MuiForm as Form, Templates, Theme, Widgets, MuiForm as default, generateForm, generateTemplates, generateTheme, generateWidgets };\n//# sourceMappingURL=mui.esm.js.map\n","import React from 'react'\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\n\nconst AddToList = (props: SvgIconProps) => {\n  return (\n    <SvgIcon\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M14 10H2V12H14V10ZM14 6H2V8H14V6ZM18 14V10H16V14H12V16H16V20H18V16H22V14H18ZM2 16H10V14H2V16Z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AddToList\n","import { RJSFValidationError } from '@rjsf/utils'\nimport { flatMap, groupBy, isEmpty } from 'lodash-es'\nimport { ENTITY_CONCRETE_TYPE } from '@sage-bionetworks/synapse-types'\nimport { entityJsonKeys } from '../../utils/functions/EntityTypeUtils'\n\n/**\n * Strips null values from arrays in the provided form data. If the array is empty after\n * removing null values, the key is removed from the form data.\n *\n * This allows users to submit forms with empty array fields (SWC-5762)\n */\nexport function dropNullishArrayValues(\n  formData: Record<string, unknown>,\n): Record<string, unknown> {\n  const newFormData: Record<string, unknown> = {}\n  Object.keys(formData).forEach(key => {\n    let value = formData[key]\n    if (Array.isArray(value)) {\n      value = value.filter((item: any) => item != null)\n      if (!isEmpty(value)) {\n        newFormData[key] = value\n      }\n    } else {\n      newFormData[key] = value\n    }\n  })\n  return newFormData\n}\n\n/**\n * Inspects the property of the AjvError and modifies it to be comparable to simple key strings, like entity property keys.\n * @param error\n * @returns\n */\nexport function getFriendlyPropertyName(error: RJSFValidationError): string {\n  if (error.property?.startsWith('[')) {\n    // Additional properties are surrounded by brackets and quotations, so let's remove them\n    return error.property.substring(2, error.property.length - 2)\n  } else if (error.property?.startsWith('.')) {\n    return error.property.substring(1)\n  } else {\n    return error.property || ''\n  }\n}\n\nexport function getTransformErrors(concreteType?: ENTITY_CONCRETE_TYPE) {\n  return (errors: RJSFValidationError[]): RJSFValidationError[] => {\n    // Transform the errors in the following ways:\n    // - Simplify the set of errors when failing to select an enumeration defined with an anyOf (SWC-5724)\n    // - Show a custom error message when using a property that collides with an internal entity property (SWC-5678)\n\n    // Fixing anyOf errors\n    // Group the errors by the property that the error applies to\n    const grouped = groupBy(errors, error => error.property)\n    Object.keys(grouped).map(property => {\n      const errorGroup = grouped[property]\n\n      // First, see if it is an anyOf error\n      const hasAnyOfError = errorGroup.some(\n        e => e.message === 'should match some schema in anyOf',\n      )\n\n      // We determine if it's an anyOf *enum* error if all error messages in the property match one of these three messages:\n      const isEnumError =\n        hasAnyOfError &&\n        errorGroup.every(error => {\n          if (error.message === 'should be string') {\n            return true\n          } else if (error.message === 'should be equal to constant') {\n            return true\n          } else if (error.message === 'should match some schema in anyOf') {\n            return true\n          } else {\n            return false\n          }\n        })\n\n      // If it's an anyOf enum error, we just modify the first message and drop the rest\n      if (isEnumError && errorGroup.length > 0) {\n        errorGroup[0].message = 'should be equal to one of the allowed values'\n        grouped[property] = [errorGroup[0]]\n      }\n    })\n\n    // Ungroup the errors after potentially modifying them\n    errors = flatMap(grouped)\n\n    // Custom error message if the custom annotation key collides with an internal entity property\n    if (concreteType) {\n      errors = errors.map(error => {\n        const propertyName = getFriendlyPropertyName(error)\n        if (\n          propertyName &&\n          entityJsonKeys[concreteType].includes(propertyName)\n        ) {\n          error.message = `\"${propertyName}\" is a reserved internal key and cannot be used.`\n        }\n        return error\n      })\n    }\n\n    // Return the transformed errors.\n    return errors\n  }\n}\n\n/**\n * Custom annotations in Synapse are always arrays. This function converts initial data to be an array type.\n * If the initial data is an array, return the data itself.\n * If the initial data is a string, returns an array of substrings separated by commas.\n * Otherwise, wrap the data in an array.\n */\nexport function convertToArray<T>(value: T): Array<unknown> {\n  if (Array.isArray(value)) {\n    return value\n  } else if (typeof value === 'string') {\n    return value.split(',').map(s => s.trim()) // split a string of comma-separated values, then trim whitespace\n  } else {\n    return [value]\n  }\n}\n","import React, { useContext } from 'react'\n\nexport type AdditionalPropertyContextType = {\n  dropProperty: (event?: any) => void\n}\n\n/**\n * The `AdditionalPropertyContext` is a custom context object used to pass the `dropProperty` handler to the items within\n * a particular additional property.\n *\n * In RJSF, dropping an entire additional property is handled at the `object` level. In this Synapse UI,\n * we treat all additional properties (a.k.a. custom annotations) as arrays, and render the delete control at the `array`\n * level. RJSF does not normally provide the drop property handler at the `array` level, so we capture it and pass it\n * along using this context.\n */\nexport const AdditionalPropertyContext = React.createContext<\n  AdditionalPropertyContextType | undefined\n>(undefined)\n\nexport type AdditionalPropertyContextProviderProps = React.PropsWithChildren<{\n  value: AdditionalPropertyContextType\n}>\n\nexport function AdditionalPropertyContextProvider(\n  props: AdditionalPropertyContextProviderProps,\n) {\n  return (\n    <AdditionalPropertyContext.Provider value={props.value}>\n      {props.children}\n    </AdditionalPropertyContext.Provider>\n  )\n}\n\nexport const AdditionalPropertyContextConsumer =\n  AdditionalPropertyContext.Consumer\n\nexport function useAdditionalPropertyContext():\n  | AdditionalPropertyContextType\n  | undefined {\n  return useContext(AdditionalPropertyContext)\n}\n","import {\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { isEqual } from 'lodash-es'\nimport React, { useEffect, useState } from 'react'\nimport FullWidthAlert from '../../FullWidthAlert/FullWidthAlert'\nimport { convertToArray } from '../AnnotationEditorUtils'\nimport { Grid, InputLabel } from '@mui/material'\nimport { AdditionalPropertyContextProvider } from '../template/AdditionalPropertyContext'\n\n// Matches ####-##-##T##:##:##.###Z, e.g. 1970-01-01T12:00:000Z\nconst ISO_TIMESTAMP_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/\n\n// Types that correspond to the different input fields that the annotation editor supports\nconst propertyTypeArray = [\n  'String',\n  'Integer',\n  'Float',\n  'Boolean',\n  'Datetime',\n] as const\n\nexport type PropertyType = (typeof propertyTypeArray)[number]\n\nexport function guessPropertyType(list: Array<unknown>): PropertyType {\n  if (list.length === 0) {\n    // The field was just added, so default to string\n    return 'String'\n  } else if (\n    list.every(\n      item => typeof item === 'number' || item === 'NaN', // \"NaN\" is technically a float value\n    )\n  ) {\n    if (list.every(item => Number.isInteger(item))) {\n      return 'Integer'\n    } else {\n      return 'Float'\n    }\n  } else if (list.every(item => typeof item === 'boolean')) {\n    return 'Boolean'\n  } else if (\n    list.every(item => typeof item === 'string') &&\n    (list as string[]).every((item: string) => !!ISO_TIMESTAMP_REGEX.exec(item))\n  ) {\n    return 'Datetime'\n  }\n  // otherwise, default type is 'string'\n  return 'String'\n}\n\nexport function transformDataFromPropertyType(\n  list: Array<any>,\n  propertyType: PropertyType,\n) {\n  switch (propertyType) {\n    case 'Integer':\n      return list.map(item =>\n        Number.isNaN(Number(item)) ? 0 : Math.floor(Number(item)),\n      )\n\n    case 'Float':\n      return list.map(item => {\n        const asFloat = parseFloat(item as string)\n        if (Number.isNaN(asFloat)) {\n          return 'NaN'\n        } else if (Number.isInteger(asFloat)) {\n          return asFloat.toFixed(1)\n        } else {\n          return asFloat\n        }\n      })\n    case 'Datetime':\n      return list.map(item => {\n        if (typeof item === 'string' && ISO_TIMESTAMP_REGEX.exec(item)) {\n          return item\n        } else {\n          return new Date().toISOString()\n        }\n      })\n    case 'Boolean':\n      return list.map(item => !!item)\n    case 'String':\n    default:\n      return list.map(item => String(item))\n  }\n}\n\n/**\n * Maps a Synapse Annotation PropertyType to a JSON Schema that captures the type and format.\n * @param propertyType\n */\nexport function getSchemaForPropertyType(propertyType: PropertyType) {\n  switch (propertyType) {\n    case 'Datetime':\n      return { type: 'string', format: 'datetime' }\n    case 'Boolean':\n      return { type: 'boolean' }\n    case 'Float':\n      return { type: 'number' }\n    case 'Integer':\n      return { type: 'integer' }\n    case 'String':\n    default:\n      return { type: 'string' }\n  }\n}\n\n/**\n * react-jsonschema-form SchemaField override for \"additionalProperties\" only. In Synapse these are \"custom annotations\".\n * Modifies the data to provide full compatibility with Synapse annotations features.\n *\n * This component provides these enhancements to the SchemaField:\n * - Supports selecting a type, and changing the input widget appropriately\n * - Identifying the type on mount\n * - Treat all field values as arrays\n * - When the last array value is removed, remove the entire key from the form.\n * @param props\n * @returns\n */\nexport function AdditionalPropertiesSchemaField<\n  T extends Array<unknown> = Array<unknown>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(\n  props: FieldProps<T, S, F> & {\n    onDropPropertyClick: (key: string) => (event: any) => void\n  },\n) {\n  const {\n    formData,\n    onChange,\n    registry,\n    schema,\n    name,\n    onDropPropertyClick,\n    idSchema,\n  } = props\n  const id = idSchema.$id\n  const { ArrayField } = registry.fields\n  const { SelectWidget } = registry.widgets\n\n  // The type determines which widget we show.\n  const [propertyType, setPropertyType] = useState(\n    guessPropertyType(convertToArray(formData)),\n  )\n\n  // If the property type is updated, store it in a new variable where we'll show a warning if data may be lost on coersion\n  const [nextPropertyType, setNextPropertyType] = useState(propertyType)\n\n  /**\n   * This effect is invoked whenever the user attempts to change the datatype of a custom annotation.\n   */\n  useEffect(() => {\n    function onNextPropertyTypeUpdate() {\n      if (Array.isArray(formData)) {\n        const dataIsEmpty =\n          formData.length === 0 ||\n          formData.every(item => item == null || item == '')\n        const coercedList = transformDataFromPropertyType(\n          formData,\n          nextPropertyType,\n        )\n        // if the data is empty or identical after conversion, then just update the property type\n        if (dataIsEmpty || nextPropertyType !== propertyType) {\n          if (isEqual(formData, coercedList)) {\n            setPropertyType(nextPropertyType)\n          }\n        }\n      }\n    }\n\n    onNextPropertyTypeUpdate()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nextPropertyType])\n\n  /**\n   * This effect is invoked whenever the propertyType changes.\n   */\n  useEffect(() => {\n    function coerceDataAndUpdateWidget() {\n      if (Array.isArray(formData)) {\n        if (formData.every(item => item == null)) {\n          onDropPropertyClick(name)(new CustomEvent('dropEmptyProperty'))\n        } else {\n          const coercedList = transformDataFromPropertyType(\n            formData,\n            nextPropertyType,\n          ) as unknown as T\n\n          // Data conversion is non-destructive or has been confirmed by the user\n          setPropertyType(nextPropertyType)\n          // Coerce the data to match the new type\n          onChange(coercedList)\n        }\n      }\n    }\n\n    coerceDataAndUpdateWidget()\n    // Don't add other properties to dependency array because we don't want to automatically coerce input\n    // i.e. Only coerce data when the type changes, which should only be on mount or when the user explicitly chooses a new type.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propertyType])\n\n  const itemsSchema = getSchemaForPropertyType(propertyType)\n\n  // If the additional property has not yet been coerced to an array, trigger an update to coerce and render nothing.\n  // We must do this because RJSF does not currently batch these kinds of updates\n  // See https://github.com/rjsf-team/react-jsonschema-form/issues/3367\n  if (!Array.isArray(formData)) {\n    onChange(convertToArray(formData) as unknown as T)\n    return <></>\n  }\n\n  return (\n    <AdditionalPropertyContextProvider\n      value={{\n        dropProperty: e => {\n          onDropPropertyClick(name)(e)\n        },\n      }}\n    >\n      <Grid item xs={2}>\n        <InputLabel htmlFor={`${id}-type`}>Type</InputLabel>\n        <SelectWidget\n          name={'Type'}\n          id={`${id}-type`}\n          schema={{} as S}\n          options={{\n            enumOptions: propertyTypeArray.map(type => ({\n              label: type,\n              value: type,\n            })),\n          }}\n          value={propertyType}\n          onChange={value => {\n            setNextPropertyType(value as PropertyType)\n          }}\n          disabled={props.disabled}\n          readOnly={props.readonly}\n          required={true}\n          isClearable={false}\n          onBlur={() => {}}\n          onFocus={() => {}}\n          registry={registry}\n          label={'Type'}\n        />\n      </Grid>\n      <Grid item xs={7}>\n        <ArrayField\n          {...props}\n          schema={{\n            ...schema,\n            items: {\n              ...itemsSchema,\n            },\n          }}\n        />\n      </Grid>\n      {propertyType !== nextPropertyType && (\n        <FullWidthAlert\n          variant=\"warning\"\n          title=\"Data may be lost when converting types\"\n          description={`Are you sure you want to convert ${name} from ${propertyType} to ${nextPropertyType}? Current values may be lost on conversion.`}\n          primaryButtonConfig={{\n            text: 'Convert',\n            onClick: () => {\n              setPropertyType(nextPropertyType)\n            },\n          }}\n          secondaryButtonConfig={{\n            text: 'Cancel',\n            onClick: () => {\n              setNextPropertyType(propertyType)\n            },\n          }}\n          isGlobal={false}\n        />\n      )}\n    </AdditionalPropertyContextProvider>\n  )\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport React from 'react'\n\n/**\n * Select widget compatible with react-jsonschema-form booleans\n */\nexport const BooleanWidget: Widget = (props: WidgetProps) => {\n  const { SelectWidget } = props.registry.widgets\n\n  const options = {\n    enumOptions: [\n      { value: true, label: 'true' },\n      { value: false, label: 'false' },\n    ],\n  }\n  return <SelectWidget {...props} options={options} />\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport dayjs, { Dayjs } from 'dayjs'\nimport React from 'react'\nimport { CalendarWithIconFormGroup } from '../../Evaluation/CalendarWithIconFormGroup'\n\n/**\n * DateTime picker widget compatible with react-jsonschema-form and Synapse Datetime annotations.\n */\nexport const DateTimeWidget: Widget = ({\n  disabled,\n  value,\n  onChange,\n}: WidgetProps) => {\n  return (\n    <CalendarWithIconFormGroup\n      disabled={disabled}\n      value={value ? dayjs(value) : ''}\n      setterCallback={(newValue: string | Dayjs | null) => {\n        if (newValue == null || typeof newValue === 'string') {\n          onChange(newValue)\n        } else {\n          onChange(newValue.toISOString())\n        }\n      }}\n    ></CalendarWithIconFormGroup>\n  )\n}\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  canExpand,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React, { useRef } from 'react'\nimport { Button, Tooltip } from '@mui/material'\nimport { useDeepCompareEffectNoCheck } from 'use-deep-compare-effect'\nimport { displayToast } from '../../ToastMessage'\nimport AddToList from '../../../assets/icons/AddToList'\nimport { JSONSchema7Definition } from 'json-schema'\n\n/**\n * Derived from the base ObjectFieldTemplate with annotations-editor-specific changes\n * - Custom button for adding additional properties\n * - Tracks properties to show a toast message if a property is converted to an additionalProperty because it was\n *   dropped from the schema (e.g. in a conditional schema)\n *\n * See https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/mui/src/ObjectFieldTemplate/ObjectFieldTemplate.tsx\n * @param props\n * @returns\n */\nexport function ObjectFieldTemplate<\n  T extends Record<string, any> | null | undefined = Record<string, any>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props\n\n  const options = getUiOptions<T, S, F>(uiSchema)\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options,\n  )\n  const DescriptionFieldTemplate = getTemplate<\n    'DescriptionFieldTemplate',\n    T,\n    S,\n    F\n  >('DescriptionFieldTemplate', registry, options)\n\n  /*\n     Tracks the property keys that were last known to exist in the object.\n     */\n  const previousSchemaDefinedProperties = useRef<Set<string>>(new Set())\n\n  /**\n   * We track how the schema changes as the user enters data, causing conditional subschemas to be evaluated.\n   *\n   * If a property exists in the previous version of the schema and has user data, and then is dropped from the schema due to a data update, then\n   * we need to prompt the user whether they want to undo the change, or continue and keep/remove those fields\n   *\n   * In this component, we can identify when one or more fields with user data are dropped (the field gains the additional property flag in the schema prop).\n   * We then use a function provided by the context to report which fields were lost.\n   */\n  useDeepCompareEffectNoCheck(() => {\n    if ('properties' in schema && schema.properties) {\n      const propertyKeys = Object.keys(schema.properties)\n      // Schema-defined properties are those properties in the schema without the additional property flag.\n      const schemaDefinedProperties = new Set<string>(\n        propertyKeys.filter(key => {\n          const propertyObject = schema.properties![\n            key\n          ] as JSONSchema7Definition &\n            Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n          return !propertyObject[ADDITIONAL_PROPERTY_FLAG]\n        }),\n      )\n\n      if (previousSchemaDefinedProperties.current != null) {\n        // Compare the schema defined properties with the previous version to see if any were lost.\n        const lostProperties = Array.from(\n          previousSchemaDefinedProperties.current,\n        ).filter(schemaDefinedProperty => {\n          return (\n            // Property is no longer in schema\n            !schemaDefinedProperties.has(schemaDefinedProperty) &&\n            // Form data exists\n            !!formData &&\n            // Property still exists in form data and is not null\n            // if the data is null, then we don't need to worry about it; user data wasn't lost\n            formData[schemaDefinedProperty] != null &&\n            // Property matches `additionalProperties` requirements: is an array and contains non-null values\n            Array.isArray(formData[schemaDefinedProperty]) &&\n            (formData[schemaDefinedProperty] as Array<never>).filter(\n              item => item != null,\n            ).length > 0\n          )\n        })\n        if (lostProperties.length > 0) {\n          // Report the converted fields in a toast message\n          displayToast(\n            `The following annotations are no longer specified by the schema and have been converted to custom fields: ${lostProperties.join(\n              ', ',\n            )}.`,\n            'warning',\n            {\n              title: 'Fields No Longer Specified By Schema',\n            },\n          )\n        }\n      }\n      // Update the last known properties to match the current properties\n      previousSchemaDefinedProperties.current = schemaDefinedProperties\n    }\n  }, [schema.properties])\n\n  return (\n    <fieldset id={idSchema.$id}>\n      {(options.title || title) && (\n        <TitleFieldTemplate\n          id={`${idSchema.$id}__title`}\n          schema={schema}\n          title={options.title || title}\n          required={required}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(options.description || description) && (\n        <DescriptionFieldTemplate\n          id={`${idSchema.$id}__description`}\n          description={options.description || description!}\n          registry={registry}\n          schema={schema}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n\n      {canExpand(schema, uiSchema, formData) && (\n        <Tooltip title=\"Add a new custom field\" placement=\"top\">\n          <Button\n            sx={{ my: 2 }}\n            variant=\"contained\"\n            className=\"object-property-expand\"\n            onClick={onAddClick(schema)}\n            disabled={disabled || readonly}\n            aria-label={'Add Custom Field'}\n          >\n            <AddToList />\n          </Button>\n        </Tooltip>\n      )}\n    </fieldset>\n  )\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport React from 'react'\n\n/**\n * This TextWidget is almost identical to the rjsf TextWidget, except we handle numbers like strings to prevent issues if\n * the actual annotation data is not a string.\n */\nexport const TextWidget: Widget = (props: WidgetProps) => {\n  const { BaseInputTemplate } = props.registry.templates\n\n  // options.inputType will override the input type determined via schema\n  let inputType: string | undefined = undefined\n  if (props.schema.type === 'number' || props.schema.type === 'integer') {\n    inputType = 'text'\n  }\n\n  return (\n    <BaseInputTemplate\n      {...props}\n      options={{ ...props.options, inputType: inputType }}\n    />\n  )\n}\n\nexport default TextWidget\n","import React, { useEffect } from 'react'\nimport { getDefaultRegistry } from '@rjsf/core'\nimport { convertToArray } from '../AnnotationEditorUtils'\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  FieldProps,\n  FormContextType,\n  PROPERTIES_KEY,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { JSONSchema7Definition } from 'json-schema'\n\n/**\n * Extends the @rjsf/core `ObjectField` and just adds a custom hook for Synapse annotation business logic\n */\nexport function CustomObjectField<\n  T extends Record<string, any> | null | undefined = Record<string, any>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldProps<T, S, F>) {\n  const {\n    fields: { ObjectField },\n  } = getDefaultRegistry<T, S, F>()\n  /**\n   * For an object, this will\n   * - convert additionalProperties formData to arrays\n   * - convert schema-defined formData from an array to a non-array if the schema type is not an array\n   * @param props\n   */\n  useEffect(() => {\n    const { schema, formData, onChange } = props\n    const newFormData: Record<string, any> = { ...formData }\n    if (schema[PROPERTIES_KEY]) {\n      Object.entries(schema[PROPERTIES_KEY]).forEach(\n        ([key, propertySchema]) => {\n          const data = newFormData[key]\n          if (\n            (\n              propertySchema as JSONSchema7Definition &\n                Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n            )[ADDITIONAL_PROPERTY_FLAG]\n          ) {\n            /**\n             * All additional properties should be converted to arrays.\n             *\n             * We need to convert it right away because the order of items is not stable, and seems to depend on if the item is an array or not\n             */\n            if (!Array.isArray(data)) {\n              newFormData[key] = convertToArray(data)\n            }\n          } else {\n            /**\n             * If the schema does not call for an array, but the formData is an array, then this will coerce it to a string.\n             *\n             * This can occur when a formData value is an additionalProperty, which we always treat as an array, then the key\n             * is added to the schema (e.g. conditionally).\n             */\n            if (\n              typeof propertySchema === 'object' &&\n              'type' in propertySchema &&\n              propertySchema.type !== 'array' &&\n              Array.isArray(data)\n            ) {\n              newFormData[key] = data.map(v => `${v}`).join(', ')\n            }\n          }\n        },\n      )\n      if (!deepEquals(formData, newFormData)) {\n        onChange(newFormData as T)\n      }\n    }\n  })\n\n  return <ObjectField {...props} />\n}\n\nexport default CustomObjectField\n","import React from 'react'\nimport { Box, Grid } from '@mui/material'\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    disabled,\n    hasToolbar,\n    hasCopy,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onCopyIndexClick,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    uiSchema,\n    registry,\n    onAddIndexClick,\n  } = props\n  const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton, AddButton } =\n    registry.templates.ButtonTemplates\n\n  return (\n    <Grid\n      container\n      gap={2}\n      justifyContent={'space-between'}\n      className={`array-item`}\n    >\n      <Grid item={true} xs>\n        <Box mb={2}>{children}</Box>\n      </Grid>\n      {hasToolbar && (\n        <Grid\n          item={true}\n          sx={{ alignSelf: 'start', my: 1 }}\n          display={'flex'}\n          flexDirection={'row'}\n          gap={1}\n          justifyContent={'flex-start'}\n        >\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveUpButton\n              disabled={disabled || readonly || !hasMoveUp}\n              onClick={onReorderClick(index, index - 1)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveDownButton\n              disabled={disabled || readonly || !hasMoveDown}\n              onClick={onReorderClick(index, index + 1)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {hasCopy && (\n            <CopyButton\n              disabled={disabled || readonly}\n              onClick={onCopyIndexClick(index)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {hasRemove && (\n            <RemoveButton\n              aria-label={`Remove`}\n              disabled={disabled || readonly}\n              onClick={onDropIndexClick(index)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          <AddButton\n            disabled={disabled || readonly}\n            uiSchema={uiSchema}\n            registry={registry}\n            aria-label={`Add New`}\n            onClick={onAddIndexClick(index + 1)}\n          />\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  ArrayFieldTemplateItemType,\n  ArrayFieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React, { useEffect, useState } from 'react'\nimport { Box, Collapse, IconButton, Tooltip } from '@mui/material'\nimport { HelpOutline } from '@mui/icons-material'\nimport { useAdditionalPropertyContext } from './AdditionalPropertyContext'\nimport { JSONSchema7 } from 'json-schema'\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nfunction ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const { idSchema, uiSchema, items, registry, schema } = props\n  const uiOptions = getUiOptions<T, S, F>(uiSchema)\n  const ArrayFieldTitleTemplate = getTemplate<\n    'ArrayFieldTitleTemplate',\n    T,\n    S,\n    F\n  >('ArrayFieldTitleTemplate', registry, uiOptions)\n\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    'ArrayFieldDescriptionTemplate',\n    T,\n    S,\n    F\n  >('ArrayFieldDescriptionTemplate', registry, uiOptions)\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions,\n  )\n\n  const isAdditionalProperty = !!(\n    props.schema as JSONSchema7 & Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n  )[ADDITIONAL_PROPERTY_FLAG]\n  const additionalPropertyContext = useAdditionalPropertyContext()\n\n  const [showDetails, setShowDetails] = useState(false)\n  /**\n   * If we have an array of 0 items, go ahead and add one.\n   */\n  useEffect(() => {\n    if (props.items.length === 0) {\n      props.onAddClick()\n    }\n  }, [props])\n\n  return (\n    <Box id={idSchema.$id} className={props.className}>\n      <div className=\"LabelContainer\">\n        <ArrayFieldTitleTemplate {...props} />\n        {!isAdditionalProperty && (\n          <Tooltip title={'More Info'}>\n            <IconButton\n              onClick={e => {\n                e.preventDefault()\n                setShowDetails(!showDetails)\n              }}\n              aria-expanded={showDetails}\n              size={'small'}\n            >\n              <HelpOutline\n                color={'primary'}\n                sx={{ width: '16px', height: '16px' }}\n              />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n      {items && (\n        <>\n          {items.map(\n            ({\n              key,\n              index,\n              ...itemProps\n            }: ArrayFieldTemplateItemType<T, S, F>) => (\n              <ArrayFieldItemTemplate\n                key={key}\n                index={index}\n                {...itemProps}\n                hasCopy={true}\n                hasMoveUp={items.length > 1 && index != 0}\n                hasMoveDown={items.length > 1 && index != items.length - 1}\n                hasRemove={isAdditionalProperty || items.length > 1}\n                onDropIndexClick={\n                  isAdditionalProperty &&\n                  items.length == 1 &&\n                  additionalPropertyContext\n                    ? i => {\n                        return e => {\n                          additionalPropertyContext.dropProperty(e)\n                        }\n                      }\n                    : itemProps.onDropIndexClick\n                }\n              />\n            ),\n          )}\n        </>\n      )}\n      <Collapse className=\"field-description\" in={showDetails}>\n        <ArrayFieldDescriptionTemplate\n          idSchema={idSchema}\n          schema={schema}\n          description={(uiOptions.description || schema.description) ?? ''}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      </Collapse>\n    </Box>\n  )\n}\n\nexport default ArrayFieldTemplate\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils'\nimport React, { FocusEventHandler } from 'react'\nimport { Grid, TextField } from '@mui/material'\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    disabled,\n    label,\n    onKeyChange,\n    readonly,\n    required,\n    schema,\n    children,\n    registry,\n  } = props\n  const { translateString } = registry\n  const keyLabel = translateString(TranslatableString.KeyLabel, [''])\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema\n\n  if (!additional) {\n    return <div className={classNames}>{children}</div>\n  }\n\n  const handleBlur: FocusEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = ({ target }) => {\n    if (target) onKeyChange(target.value)\n  }\n\n  return (\n    <div className={classNames}>\n      <Grid container sx={{ my: 2 }} columnSpacing={2} rowSpacing={0}>\n        <Grid item xs={3}>\n          <TextField\n            fullWidth={true}\n            required={required}\n            label={keyLabel}\n            defaultValue={label}\n            disabled={disabled || readonly}\n            id={`${id}-key`}\n            name={`${id}-key`}\n            onBlur={!readonly ? handleBlur : undefined}\n            type=\"text\"\n          />\n        </Grid>\n        {children}\n        {/* All additional properties are treated as arrays, so we don't show a remove button here. */}\n        {/* To drop the property, drop the last array item. */}\n      </Grid>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { HelpOutline } from '@mui/icons-material'\nimport { Collapse, Grid, IconButton, InputLabel, Tooltip } from '@mui/material'\n\n// TODO: Wrap and pull out class names to remove bootstrap classes\n//  https://rjsf-team.github.io/react-jsonschema-form/docs/advanced-customization/custom-templates/#baseinputtemplate\n\nexport function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldTemplateProps<T, S, F>) {\n  const {\n    id,\n    label,\n    children,\n    errors,\n    help,\n    description,\n    hidden,\n    required,\n    displayLabel,\n    registry,\n    uiSchema,\n    schema,\n  } = props\n  const uiOptions = getUiOptions<T, S, F>(uiSchema)\n  const WrapIfAdditionalTemplate = getTemplate<\n    'WrapIfAdditionalTemplate',\n    T,\n    S,\n    F\n  >('WrapIfAdditionalTemplate', registry, uiOptions)\n  const [showDetails, setShowDetails] = useState(false)\n\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {/* RJSF hides labels for boolean checkboxes, but since we replaced checkboxes with a custom component, we want to show them */}\n      {(displayLabel || schema.type === 'boolean') && (\n        <div className=\"LabelContainer\">\n          <InputLabel htmlFor={id}>\n            {label}\n            {required && <span className=\"required\">*</span>}\n          </InputLabel>\n          <Tooltip title={'More Info'}>\n            <IconButton\n              onClick={e => {\n                e.preventDefault()\n                setShowDetails(!showDetails)\n              }}\n              aria-expanded={showDetails}\n              size={'small'}\n            >\n              <HelpOutline\n                color={'primary'}\n                sx={{ width: '16px', height: '16px' }}\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n      )}\n      {children}\n      <Grid item xs={12}>\n        {errors}\n      </Grid>\n      <Collapse className=\"field-description\" in={showDetails}>\n        {description}\n      </Collapse>\n      {help}\n    </WrapIfAdditionalTemplate>\n  )\n}\n","import {\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React from 'react'\nimport { InputLabel } from '@mui/material'\n\n/**\n * Custom title template for array fields.\n *\n * @param props\n * @returns\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { title, required } = props\n  return (\n    <InputLabel>\n      {title}\n      {required && <span className=\"required\">*</span>}\n    </InputLabel>\n  )\n}\n","import { Add, ArrowDownward, ArrowUpward, Close } from '@mui/icons-material'\nimport React from 'react'\nimport { Button, IconButton, SxProps } from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils'\n\nconst buttonSx: SxProps = { minWidth: 'unset', width: '40px', height: '40px' }\n\nexport function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>({ uiSchema, registry, ...props }: IconButtonProps<T, S, F>) {\n  const { translateString } = registry\n  return (\n    <Button\n      title={translateString(TranslatableString.AddItemButton)}\n      {...props}\n      color=\"primary\"\n      variant={'contained'}\n      sx={buttonSx}\n    >\n      <Add />\n    </Button>\n  )\n}\n\ntype IconButtonTemplateProps = {\n  buttonType: 'copy' | 'moveUp' | 'moveDown' | 'remove'\n}\n\nfunction getIcon(buttonType: IconButtonTemplateProps['buttonType']) {\n  switch (buttonType) {\n    case 'copy':\n      return <ContentCopyIcon fontSize=\"inherit\" />\n    case 'moveUp':\n      return <ArrowUpward fontSize=\"inherit\" />\n    case 'moveDown':\n      return <ArrowDownward fontSize=\"inherit\" />\n    case 'remove':\n      return <Close fontSize=\"inherit\" />\n    default:\n      throw new Error(`Unexpected iconType ${buttonType}`)\n  }\n}\n\nfunction IconButtonTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F> & IconButtonTemplateProps) {\n  const { iconType, buttonType, ...otherProps } = props\n\n  const {\n    registry: { translateString },\n  } = otherProps\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      {...otherProps}\n      color={'default'}\n      sx={buttonSx}\n    >\n      {getIcon(buttonType)}\n    </IconButton>\n  )\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'remove'} />\n}\n\nexport function CopyButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'copy'} />\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'moveUp'} />\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'moveDown'} />\n}\n\nexport default {\n  AddButton,\n  RemoveButton,\n  MoveUpButton,\n  MoveDownButton,\n  CopyButton,\n}\n","import { Collapse } from '@mui/material'\nimport React from 'react'\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema'\n\nexport type FieldDescriptionTableProps = {\n  schema: JSONSchema7\n  description: React.ReactNode\n}\n\nfunction getTypeAsString(\n  schema: JSONSchema7 | JSONSchema7Definition | JSONSchema7Definition[],\n): string {\n  if (Array.isArray(schema) || typeof schema === 'boolean') {\n    return 'unknown'\n  }\n  const { type, enum: _enum } = schema\n\n  if (type === 'array' && typeof schema.items === 'object') {\n    return `List of ${getTypeAsString(schema.items)}`\n  }\n\n  if (_enum) {\n    return 'enumeration'\n  }\n\n  if (Array.isArray(type)) {\n    return type.reduce(\n      (typesCommaSeparated, nextType) => `${typesCommaSeparated}, ${nextType}`,\n      '',\n    )\n  }\n  return type || 'unknown'\n}\n\nexport default function FieldDescriptionTable(\n  props: FieldDescriptionTableProps,\n) {\n  const { description, schema } = props\n\n  const typeString = getTypeAsString(schema)\n\n  return (\n    <Collapse className=\"field-description\" in={true}>\n      <table className=\"FieldDescriptionTable\">\n        <tbody>\n          {description && (\n            <tr>\n              <th>Description</th>\n              <td>{description}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Type</th>\n            <td>{typeString}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Collapse>\n  )\n}\n","import { DescriptionFieldProps } from '@rjsf/utils'\nimport React from 'react'\nimport { Typography } from '@mui/material'\nimport FieldDescriptionTable from './FieldDescriptionTable'\n\nexport default function DescriptionFieldTemplate(props: DescriptionFieldProps) {\n  const { description, schema = {} } = props\n\n  if (schema.type === 'object') {\n    return (\n      <Typography variant={'body1'} sx={{ my: 2 }}>\n        {description}\n      </Typography>\n    )\n  }\n\n  return <FieldDescriptionTable schema={schema} description={description} />\n}\n","import React from 'react'\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * Identical to @rjsf/core ArrayFieldDescriptionTemplate except this renders something if there is no description.\n * Our description field also includes the type, so it should always be rendered.\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions)\n  const { label: displayLabel } = options\n  if (displayLabel === false) {\n    return null\n  }\n\n  const DescriptionFieldTemplate = getTemplate<\n    'DescriptionFieldTemplate',\n    T,\n    S,\n    F\n  >('DescriptionFieldTemplate', registry, options)\n  const id = `${idSchema.$id}__description`\n  return (\n    <DescriptionFieldTemplate\n      id={id}\n      description={description ?? ''}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  )\n}\n","import React from 'react'\nimport { ChangeEvent, FocusEvent } from 'react'\nimport TextField, { TextFieldProps } from '@mui/material/TextField'\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  labelValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\nconst TYPES_THAT_SHRINK_LABEL = ['date', 'datetime-local', 'file', 'time']\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from textFieldProps\n    placeholder,\n    required,\n    readonly,\n    disabled,\n    type,\n    label,\n    // hideLabel,\n    value,\n    onChange,\n    onChangeOverride,\n    onBlur,\n    onFocus,\n    autofocus,\n    options,\n    schema,\n    uiSchema,\n    rawErrors = [],\n    formContext,\n    registry,\n    InputLabelProps,\n    ...textFieldProps\n  } = props\n  const hideLabel = true\n  const inputProps = getInputProps<T, S, F>(schema, type, options)\n  // Now we need to pull out the step, min, max into an inner `inputProps` for material-ui\n  const { step, min, max, ...rest } = inputProps\n  const otherProps = {\n    inputProps: {\n      step,\n      min,\n      max,\n      ...(schema.examples ? { list: examplesId<T>(id) } : undefined),\n    },\n    ...rest,\n  }\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\n    onChange(value === '' ? options.emptyValue : value)\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value)\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n    onFocus(id, value)\n  const DisplayInputLabelProps = TYPES_THAT_SHRINK_LABEL.includes(type)\n    ? {\n        ...InputLabelProps,\n        shrink: true,\n      }\n    : InputLabelProps\n\n  let derivedValuePlaceholder: string | undefined = undefined\n  if (schema.default || schema.const) {\n    derivedValuePlaceholder =\n      JSON.stringify(schema.default || schema.const) + ' (derived)'\n  }\n\n  return (\n    <>\n      <TextField\n        id={id}\n        name={id}\n        placeholder={derivedValuePlaceholder || placeholder}\n        label={labelValue(label || undefined, hideLabel, false)}\n        autoFocus={autofocus}\n        required={false}\n        disabled={disabled || readonly}\n        {...otherProps}\n        value={value || value === 0 ? value : ''}\n        error={rawErrors.length > 0}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        InputLabelProps={DisplayInputLabelProps}\n        {...(textFieldProps as TextFieldProps)}\n        inputProps={{\n          'aria-label': id,\n        }}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : [],\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />\n            })}\n        </datalist>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport ListItem from '@mui/material/ListItem'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport List from '@mui/material/List'\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props\n  if (errors.length === 0) {\n    return null\n  }\n  const id = errorId<T>(idSchema)\n\n  return (\n    <List dense={true} disablePadding={true}>\n      {errors.map((error, i: number) => {\n        return (\n          <ListItem key={i} disableGutters={true}>\n            <FormHelperText id={id} sx={{ color: 'error.main' }}>\n              {error}\n            </FormHelperText>\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import Form from '@rjsf/mui'\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema'\nimport isEmpty from 'lodash-es/isEmpty'\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { Alert, Box, Divider, Link } from '@mui/material'\nimport AddToList from '../../assets/icons/AddToList'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport {\n  useGetJson,\n  useGetSchema,\n  useGetSchemaBinding,\n  useUpdateViaJson,\n} from '../../synapse-queries'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport {\n  ENTITY_CONCRETE_TYPE,\n  EntityJson,\n} from '@sage-bionetworks/synapse-types'\nimport { SynapseSpinner } from '../LoadingScreen'\nimport { AdditionalPropertiesSchemaField } from './field/AdditionalPropertiesSchemaField'\nimport {\n  dropNullishArrayValues,\n  getFriendlyPropertyName,\n  getTransformErrors,\n} from './AnnotationEditorUtils'\nimport { BooleanWidget } from './widget/BooleanWidget'\nimport { DateTimeWidget } from './widget/DateTimeWidget'\nimport { ObjectFieldTemplate } from './template/ObjectFieldTemplate'\nimport { SelectWidget } from './widget/SelectWidget'\nimport TextWidget from './widget/TextWidget'\nimport { entityJsonKeys } from '../../utils/functions/EntityTypeUtils'\nimport {\n  ConfirmationButtons,\n  ConfirmationDialog,\n} from '../ConfirmationDialog/ConfirmationDialog'\nimport { RJSFValidationError } from '@rjsf/utils'\nimport validator from '@rjsf/validator-ajv8'\nimport CustomObjectField from './field/CustomObjectField'\nimport ArrayFieldItemTemplate from './template/ArrayFieldItemTemplate'\nimport ArrayFieldTemplate from './template/ArrayFieldTemplate'\nimport WrapIfAdditionalTemplate from './template/WrapIfAdditionalTemplate'\nimport { FieldTemplate } from './template/FieldTemplate'\nimport ArrayFieldTitleTemplate from './template/ArrayFieldTitleTemplate'\nimport ButtonTemplate from './template/ButtonTemplate'\nimport DescriptionFieldTemplate from './template/DescriptionFieldTemplate'\nimport ArrayFieldDescriptionTemplate from './template/ArrayFieldDescriptionTemplate'\nimport BaseInputTemplate from './template/BaseInputTemplate'\nimport RJSF from '@rjsf/core'\nimport FieldErrorTemplate from './template/FieldErrorTemplate'\n\nexport type SchemaDrivenAnnotationEditorProps = {\n  /** The entity whose annotations should be edited with the form */\n  entityId?: string\n  /** If no entity ID is supplied, the schema to use for the form */\n  schemaId?: string\n  /** May be used to directly provide a JSON Schema to use for the form */\n  validationSchema?: JSONSchema7\n  /** Optionally supply a ref to the form to handle submission externally with `formRef.current.submit()`. If provided, the editor will not render its own submit UI. */\n  formRef?: React.RefObject<RJSF>\n  /** Provide live input validation. This can cause major performance degradation. */\n  liveValidate?: boolean\n  /** Invoked after a successful form submission */\n  onSuccess?: () => void\n  /** If defined and formRef is not supplied, shows a 'Cancel' button and runs this effect on click */\n  onCancel?: () => void\n  /** Passes new form data upon each change to the form */\n  onChange?: (annotations: Record<string, any>) => void\n}\n\n/**\n * patternProperties lets us define how to treat additionalProperties in a JSON schema by property name.\n * In all cases, let's ban properties that collide with entity properties by making their schema \"not: {}\"\n */\nfunction getPatternPropertiesBannedKeys(\n  concreteType?: ENTITY_CONCRETE_TYPE,\n): Record<string, JSONSchema7Definition> {\n  if (!concreteType) {\n    return {}\n  }\n  // for each property (e.g. id, name, etag, etc.)\n  //  Add to the JSON Schema `\"^id$\": { \"not\": {} }` to ban the property from being added as an additional property.\n  return entityJsonKeys[concreteType].reduce(\n    (current: Record<string, JSONSchema7Definition>, item) => {\n      current[`^${item}$`] = { not: {} }\n      return current\n    },\n    {},\n  )\n}\n\n/**\n * Renders a form for editing an entity's annotations. The component also supports supplying just a schema ID,\n * but work to support annotation flows without an entity (i.e. before creating entities) is not yet complete.\n */\nexport function SchemaDrivenAnnotationEditor(\n  props: SchemaDrivenAnnotationEditorProps,\n) {\n  const {\n    entityId,\n    schemaId,\n    validationSchema: validationSchemaFromProps,\n    liveValidate = false,\n    onSuccess = () => {\n      /* no-op */\n    },\n    onCancel,\n    formRef: formRefFromParent,\n    onChange,\n  } = props\n  const localRef = useRef<RJSF>(null)\n  const ref = formRefFromParent ?? localRef\n\n  // Annotation fields fetched and modified via the form\n  const [formData, setFormData] = React.useState<\n    Record<string, unknown> | undefined\n  >(undefined)\n\n  // Client-side validation errors\n  const [validationError, setValidationError] = React.useState<\n    RJSFValidationError[] | undefined\n  >(undefined)\n\n  // Errors from the backend response\n  const [submissionError, setSubmissionError] = React.useState<\n    SynapseClientError | undefined\n  >(undefined)\n  const [showSubmissionError, setShowSubmissionError] = React.useState(false)\n\n  const [showConfirmation, setShowConfirmation] = React.useState(false)\n\n  const { entityMetadata: entityJson, annotations } = useGetJson(entityId!, {\n    // Metadata is being edited, so don't refetch\n    staleTime: Infinity,\n    enabled: !!entityId,\n    useErrorBoundary: true,\n  })\n\n  /**\n   * patternProperties lets us define how to treat additionalProperties in a JSON schema by property name.\n   * In all cases, let's ban properties that collide with entity properties by making their schema \"not: {}\"\n   */\n  const patternPropertiesBannedKeys = useMemo(\n    () => getPatternPropertiesBannedKeys(entityJson?.concreteType),\n    [entityJson?.concreteType],\n  )\n\n  const transformErrors = useCallback(\n    getTransformErrors(entityJson?.concreteType),\n    [entityJson?.concreteType],\n  )\n\n  useEffect(() => {\n    if (annotations) {\n      // Put the annotations into a state variable so it can be modified by the form.\n      setFormData(annotations)\n    }\n  }, [annotations])\n\n  const { data: schema, isLoading: isLoadingBinding } = useGetSchemaBinding(\n    entityId!,\n    {\n      enabled: !!entityId,\n      refetchOnWindowFocus: false,\n      useErrorBoundary: true,\n    },\n  )\n\n  const { data: fetchedValidationSchema, isLoading: isLoadingSchema } =\n    useGetSchema(schemaId ?? schema?.jsonSchemaVersionInfo.$id ?? '', {\n      enabled: !!schemaId || !!schema,\n      useErrorBoundary: true,\n    })\n\n  const validationSchema = validationSchemaFromProps || fetchedValidationSchema\n\n  const isLoading = isLoadingBinding || isLoadingSchema\n\n  const mutation = useUpdateViaJson({\n    onSuccess: () => {\n      onSuccess()\n    },\n    onError: error => {\n      setSubmissionError(error)\n      setShowSubmissionError(true)\n    },\n  })\n\n  function submitChangedEntity() {\n    mutation.mutate({\n      ...dropNullishArrayValues(formData ?? {}),\n      ...entityJson,\n    } as EntityJson)\n  }\n\n  return (\n    <div className=\"AnnotationEditor\">\n      {isLoading ? (\n        <div className=\"LoadingPlaceholder\">\n          <SynapseSpinner size={30} />\n        </div>\n      ) : (\n        <>\n          {entityJson && schema && (\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\n              <b>{entityJson.name}</b> requires scientific annotations specified\n              by <b>{schema.jsonSchemaVersionInfo.$id}</b>\n              {'. '}\n              <b>\n                <Link\n                  href={`${getEndpoint(\n                    BackendDestinationEnum.REPO_ENDPOINT,\n                  )}/repo/v1/schema/type/registered/${\n                    schema.jsonSchemaVersionInfo.$id\n                  }`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View required schema (JSON)\n                </Link>\n              </b>\n            </Alert>\n          )}\n          {entityJson &&\n            (!formData || isEmpty(formData)) &&\n            schema === null && (\n              <Alert severity=\"info\">\n                <b>{entityJson.name}</b> has no annotations. Click the{' '}\n                <AddToList /> button to annotate.\n              </Alert>\n            )}\n          <Form\n            validator={validator}\n            className=\"AnnotationEditorForm\"\n            liveValidate={liveValidate}\n            noHtml5Validate={true}\n            experimental_defaultFormStateBehavior={{\n              emptyObjectFields: 'skipDefaults',\n            }}\n            fields={{\n              ObjectField: CustomObjectField,\n            }}\n            templates={{\n              ArrayFieldDescriptionTemplate: ArrayFieldDescriptionTemplate,\n              ArrayFieldItemTemplate: ArrayFieldItemTemplate,\n              ArrayFieldTemplate: ArrayFieldTemplate,\n              ArrayFieldTitleTemplate: ArrayFieldTitleTemplate,\n              BaseInputTemplate: BaseInputTemplate,\n              FieldErrorTemplate: FieldErrorTemplate,\n              FieldTemplate: FieldTemplate,\n              ObjectFieldTemplate: ObjectFieldTemplate,\n              WrapIfAdditionalTemplate: WrapIfAdditionalTemplate,\n              ButtonTemplates: ButtonTemplate,\n              DescriptionFieldTemplate: DescriptionFieldTemplate,\n              /* Errors are displayed by an Alert component below, so we don't show the builtin ErrorList */\n              ErrorListTemplate: () => null,\n            }}\n            ref={ref}\n            disabled={mutation.isLoading}\n            schema={\n              {\n                ...(validationSchema ?? {}),\n                patternProperties: {\n                  ...(validationSchema?.patternProperties ?? {}),\n                  ...patternPropertiesBannedKeys,\n                },\n                additionalProperties:\n                  validationSchema?.additionalProperties ?? true,\n              } as JSONSchema7\n            }\n            uiSchema={{\n              'ui:options': {\n                copyable: true,\n                duplicateKeySuffixSeparator: '_',\n              },\n              additionalProperties: {\n                'ui:field': AdditionalPropertiesSchemaField,\n              },\n            }}\n            transformErrors={transformErrors}\n            formData={formData}\n            onChange={({ formData }) => {\n              if (onChange) {\n                onChange(formData)\n              }\n              setFormData(formData)\n              setValidationError(undefined)\n            }}\n            onSubmit={({ formData, errors }, event) => {\n              event.preventDefault()\n              if (errors && errors.length > 0) {\n                setValidationError(errors)\n              }\n              setShowSubmissionError(false)\n              setFormData(formData)\n              submitChangedEntity()\n            }}\n            onError={(errors: RJSFValidationError[]) => {\n              // invoked when submit is clicked and there are client-side validation errors\n              setValidationError(errors)\n              if (validationError && entityId) {\n                setShowConfirmation(true)\n              }\n            }}\n            widgets={{\n              TextWidget: TextWidget,\n              DateTimeWidget: DateTimeWidget,\n              SelectWidget: SelectWidget,\n              CheckboxWidget: BooleanWidget,\n            }}\n          >\n            {validationError && (\n              <Alert severity=\"error\" sx={{ my: 2 }}>\n                <b>Validation errors found:</b>\n                <ul>\n                  {validationError.map(\n                    (e: RJSFValidationError, index: number) => {\n                      return (\n                        <li key={index}>\n                          <b>{`${getFriendlyPropertyName(e)}: `}</b>{' '}\n                          {`${e.message}`}\n                        </li>\n                      )\n                    },\n                  )}\n                </ul>\n              </Alert>\n            )}\n\n            {submissionError && showSubmissionError && (\n              <Alert severity=\"error\" sx={{ my: 2 }}>\n                Annotations could not be updated: {submissionError.reason}\n              </Alert>\n            )}\n            {!formRefFromParent && (\n              <>\n                <Divider sx={{ my: 2 }} />\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"space-between\"\n                  sx={{ gridRowStart: 5 }}\n                >\n                  <ConfirmationButtons\n                    hasCancelButton={onCancel !== undefined}\n                    onCancel={() => {\n                      onCancel && onCancel()\n                    }}\n                    onConfirm={() => {\n                      ref.current!.formElement.current!.requestSubmit()\n                    }}\n                    confirmButtonText={entityId ? 'Save' : 'Validate'}\n                  />\n                </Box>\n              </>\n            )}\n          </Form>\n          {showConfirmation && (\n            <ConfirmationDialog\n              open={true}\n              onConfirm={() => {\n                submitChangedEntity()\n                setShowConfirmation(false)\n              }}\n              onCancel={() => {\n                setShowConfirmation(false)\n              }}\n              title=\"Update Annotations\"\n              content={\n                <>\n                  <div>\n                    The following errors exist with the annotations you entered:\n                  </div>\n                  <div>\n                    <ul>\n                      {(validationError ?? []).map(\n                        (e: RJSFValidationError, index: number) => (\n                          <li key={index}>\n                            <b>{`${getFriendlyPropertyName(e)}: `}</b>{' '}\n                            {`${e.message}`}\n                          </li>\n                        ),\n                      )}\n                    </ul>\n                  </div>\n                  <div>\n                    Are you sure you want to save the invalid annotations?\n                  </div>\n                </>\n              }\n              confirmButtonText=\"Save\"\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n"],"names":["getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","row","error","composeClasses","FormGroupRoot","styled","props","styles","_extends","FormGroup","React.forwardRef","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","_jsx","clsx","FormGroup$1","getListItemUtilityClass","listItemClasses","listItemClasses$1","getListItemSecondaryActionClassesUtilityClass","disableGutters","ListItemSecondaryActionRoot","ListItemSecondaryAction","context","React.useContext","ListContext","ListItemSecondaryAction$1","_excluded2","overridesResolver","alignItems","button","dense","disabled","disablePadding","divider","hasSecondaryAction","selected","ListItemRoot","theme","listItemButtonClasses","alpha","ListItemContainer","ListItem","autoFocus","childrenProp","componentProp","components","componentsProps","ContainerComponent","ContainerClassName","focusVisibleClassName","secondaryAction","slotProps","slots","ContainerProps","childContext","React.useMemo","listItemRef","React.useRef","useEnhancedEffect","children","React.Children","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","_jsxs","isHostComponent","ListItem$1","RadioButtonUncheckedIcon","createSvgIcon","RadioButtonCheckedIcon","RadioButtonIconRoot","RadioButtonIconBackground","RadioButtonIconDot","RadioButtonIcon","checked","fontSize","RadioGroupContext","React.createContext","RadioGroupContext$1","useRadioGroup","getRadioUtilityClass","radioClasses","radioClasses$1","color","capitalize","RadioRoot","SwitchBase","prop","rootShouldForwardProp","areEqualValues","a","b","defaultCheckedIcon","defaultIcon","Radio","_defaultIcon$props$fo","_defaultCheckedIcon$p","checkedProp","checkedIcon","icon","nameProp","onChangeProp","size","radioGroup","onChange","createChainedFunction","name","React.cloneElement","Radio$1","RadioGroup","actions","defaultValue","valueProp","rootRef","value","setValueState","useControlled","React.useImperativeHandle","input","useId","contextValue","event","RadioGroup$1","Add$1","ArrowDownward$1","ArrowUpward$1","HelpOutline","useGetSchemaBinding","entityId","options","accessToken","keyFactory","useSynapseContext","useQuery","SynapseClient","useGetValidationResults","useGetSchema","schema$id","_interopRequireDefault","require$$0","Add","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","_Error","ArrowDownward","ArrowUpward","Remove","target","i","source","key","excluded","sourceKeys","_excluded$4","AddButton","_ref","registry","translateString","jsx","IconButton","TranslatableString","AddIcon","ArrayFieldItemTemplate","hasToolbar","hasCopy","hasMoveDown","hasMoveUp","hasRemove","index","onCopyIndexClick","onDropIndexClick","onReorderClick","readonly","uiSchema","_registry$templates$B","CopyButton","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","jsxs","Grid","Box","Paper","_excluded$3","ArrayFieldTemplate","canAdd","idSchema","items","onAddClick","required","schema","title","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","itemProps","_excluded$2","_excluded2$1","TYPES_THAT_SHRINK_LABEL","BaseInputTemplate","id","placeholder","type","label","hideLabel","onChangeOverride","onBlur","onFocus","autofocus","_props$rawErrors","rawErrors","InputLabelProps","textFieldProps","inputProps","getInputProps","step","min","max","rest","otherProps","examplesId","_onChange","_onBlur","_ref2","_onFocus","_ref3","DisplayInputLabelProps","Fragment","TextField","labelValue","ariaDescribedByIds","example","DescriptionField","description","Typography","ErrorList","errors","List","ListItemIcon","ErrorIcon","ListItemText","_excluded$1","MuiIconButton","CopyIcon","ArrowDownwardIcon","ArrowUpwardIcon","iconType","RemoveIcon","FieldErrorTemplate","_props$errors","errorId","FormHelperText","FieldHelpTemplate","help","helpId","FieldTemplate","classNames","style","displayLabel","hidden","onDropPropertyClick","onKeyChange","rawDescription","WrapIfAdditionalTemplate","FormControl","ObjectFieldTemplate","properties","formData","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","canExpand","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","_getSubmitButtonOptio2","submitButtonProps","Button","TitleField","Divider","templates","keyLabel","additional","ADDITIONAL_PROPERTY_FLAG","handleBlur","generateTemplates","CheckboxWidget","_options$description","_props$label","schemaRequiresTrueValue","_","FormControlLabel","Checkbox","CheckboxesWidget","enumOptions","enumDisabled","inline","emptyValue","checkboxesValues","enumOptionsSelectValue","enumOptionsDeselectValue","enumOptionsValueForIndex","_ref4","FormLabel","option","enumOptionsIsSelected","itemDisabled","checkbox","optionId","RadioWidget","_enumOptionsIndexForV","selectedIndex","enumOptionsIndexForValue","radio","RangeWidget","sliderProps","rangeSpec","Slider","SelectWidget","multiple","_ref$rawErrors","optEmptyVal","isEmpty","selectedIndexes","_ref5","MenuItem","TextareaWidget","rows","generateWidgets","generateTheme","generateForm","withTheme","MuiForm","AddToList","SvgIcon","dropNullishArrayValues","newFormData","item","getFriendlyPropertyName","_a","_b","getTransformErrors","concreteType","grouped","groupBy","property","errorGroup","e","flatMap","propertyName","entityJsonKeys","convertToArray","s","AdditionalPropertyContext","React","AdditionalPropertyContextProvider","AdditionalPropertyContextConsumer","useAdditionalPropertyContext","useContext","ISO_TIMESTAMP_REGEX","propertyTypeArray","guessPropertyType","list","transformDataFromPropertyType","propertyType","asFloat","getSchemaForPropertyType","AdditionalPropertiesSchemaField","ArrayField","setPropertyType","useState","nextPropertyType","setNextPropertyType","useEffect","onNextPropertyTypeUpdate","dataIsEmpty","coercedList","isEqual","coerceDataAndUpdateWidget","itemsSchema","InputLabel","FullWidthAlert","BooleanWidget","DateTimeWidget","CalendarWithIconFormGroup","dayjs","newValue","previousSchemaDefinedProperties","useRef","useDeepCompareEffectNoCheck","propertyKeys","schemaDefinedProperties","lostProperties","schemaDefinedProperty","displayToast","Tooltip","TextWidget","inputType","CustomObjectField","ObjectField","getDefaultRegistry","PROPERTIES_KEY","propertySchema","data","v","deepEquals","onAddIndexClick","isAdditionalProperty","additionalPropertyContext","showDetails","setShowDetails","Collapse","buttonSx","getIcon","buttonType","ContentCopyIcon","Close","IconButtonTemplate","ButtonTemplate","getTypeAsString","_enum","typesCommaSeparated","nextType","FieldDescriptionTable","typeString","formContext","value2","derivedValuePlaceholder","getPatternPropertiesBannedKeys","current","SchemaDrivenAnnotationEditor","schemaId","validationSchemaFromProps","liveValidate","onSuccess","onCancel","formRefFromParent","localRef","setFormData","validationError","setValidationError","submissionError","setSubmissionError","showSubmissionError","setShowSubmissionError","showConfirmation","setShowConfirmation","entityJson","annotations","useGetJson","patternPropertiesBannedKeys","useMemo","transformErrors","useCallback","isLoadingBinding","fetchedValidationSchema","isLoadingSchema","validationSchema","isLoading","mutation","useUpdateViaJson","submitChangedEntity","SynapseSpinner","Alert","Link","getEndpoint","BackendDestinationEnum","Form","validator","formData2","ConfirmationButtons","ConfirmationDialog"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25]}