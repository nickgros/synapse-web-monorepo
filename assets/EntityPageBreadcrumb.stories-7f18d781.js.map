{"version":3,"file":"EntityPageBreadcrumb.stories-7f18d781.js","sources":["../../src/components/entity/page/breadcrumbs/EntityPageBreadcrumbs.tsx"],"sourcesContent":["import React from 'react'\nimport { Breadcrumbs, Link, SxProps, Tooltip, Typography } from '@mui/material'\nimport IconSvg from '../../../IconSvg/IconSvg'\nimport { truncateString } from '../../../../utils/functions/StringUtils'\n\ntype BreadcrumbItem = {\n  /* The text to show in the breadcrumb item. Strings > 25 characters will be truncated */\n  text: string\n  /* Whether this item represents the current page. If true, this item will not have a link. Default false */\n  current?: boolean\n  /* Link for the item */\n  href?: string\n  /* Event handler fired when the link is clicked */\n  onClick?: React.MouseEventHandler\n}\n\ntype EntityPageBreadcrumbsProps = {\n  items: BreadcrumbItem[]\n}\n\nconst MAX_BREADCRUMB_LENGTH = 32\n\nfunction BreadcrumbSeparator() {\n  return <IconSvg icon=\"chevronRight\" sx={{ color: 'grey.500' }} />\n}\n\nconst breadcrumbStyle: SxProps = {\n  marginTop: '0px',\n  padding: '10px 40px',\n  backgroundColor: 'grey.200',\n}\n\nconst linkStyle: SxProps = {\n  color: 'text.secondary',\n  letterSpacing: 0,\n  '&:visited': {\n    color: 'text.secondary',\n  },\n}\n\nexport default function EntityPageBreadcrumbs(\n  props: EntityPageBreadcrumbsProps,\n) {\n  const { items } = props\n  return (\n    <Breadcrumbs\n      separator={<BreadcrumbSeparator />}\n      itemsBeforeCollapse={2}\n      itemsAfterCollapse={2}\n      sx={breadcrumbStyle}\n    >\n      {items.map((data, index) => {\n        const displayedText = truncateString(data.text, MAX_BREADCRUMB_LENGTH)\n        const tooltipText = displayedText !== data.text ? data.text : null\n        return (\n          <Tooltip key={index} title={tooltipText} placement=\"top\">\n            <Typography variant={'breadcrumb1'}>\n              {data.current ? (\n                displayedText\n              ) : (\n                <Link\n                  key={index}\n                  href={data.href}\n                  onClick={data.onClick}\n                  underline=\"hover\"\n                  sx={linkStyle}\n                >\n                  {displayedText}\n                </Link>\n              )}\n            </Typography>\n          </Tooltip>\n        )\n      })}\n    </Breadcrumbs>\n  )\n}\n"],"names":["MAX_BREADCRUMB_LENGTH","BreadcrumbSeparator","jsx","IconSvg","breadcrumbStyle","linkStyle","EntityPageBreadcrumbs","props","items","Breadcrumbs","data","index","displayedText","truncateString","tooltipText","Tooltip","Typography","Link"],"mappings":"gnCAoBA,MAAAA,EAAA,GAEA,SAAAC,GAAA,CACE,OAAAC,EAAAC,EAAA,CAAA,KAAA,eAAA,GAAA,CAAA,MAAA,UAAA,CAAA,CAAA,CACF,CAEA,MAAAC,EAAA,CAAiC,UAAA,MACpB,QAAA,YACF,gBAAA,UAEX,EAEAC,EAAA,CAA2B,MAAA,iBAClB,cAAA,EACQ,YAAA,CACF,MAAA,gBACJ,CAEX,EAEA,SAAAC,EAAAC,EAAA,CAGE,KAAA,CAAA,MAAAC,CAAA,EAAAD,EACA,OAAAL,EACEO,EAAC,CAAA,UAAAP,EAAAD,EAAA,EAAA,EACiC,oBAAA,EACX,mBAAA,EACD,GAAAG,EAChB,SAAAI,EAAA,IAAA,CAAAE,EAAAC,IAAA,CAGF,MAAAC,EAAAC,EAAAH,EAAA,KAAAV,CAAA,EACAc,EAAAF,IAAAF,EAAA,KAAAA,EAAA,KAAA,KACA,OAAAR,EAAAa,EAAA,CAAA,MAAAD,EAAA,UAAA,MAAA,SAAAZ,EAAAc,EAAA,CAAA,QAAA,cAAA,SAAAN,EAAA,QAAAE,EAAAV,EAMQe,EAAC,CAAA,KAAAP,EAAA,KAEY,QAAAA,EAAA,QACG,UAAA,QACJ,GAAAL,EACN,SAAAO,CAEH,EAAAD,CANI,EAAA,CAAA,EAAAA,CAAA,CAUb,CAAA,CAEH,CAAA,CAGP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}