{"version":3,"file":"UpsetPlot-610077fd.js","sources":["../../../../node_modules/.pnpm/@upsetjs+model@1.11.0/node_modules/@upsetjs/model/dist/index.js","../../../../node_modules/.pnpm/@upsetjs+react@1.11.0_react@18.2.0/node_modules/@upsetjs/react/dist/index.js","../../src/components/Plot/UpsetPlot.tsx"],"sourcesContent":["/**\n * @upsetjs/model\n * https://github.com/upsetjs/upsetjs\n *\n * Copyright (c) 2022 Samuel Gratzl <sam@sgratzl.com>\n */\n\nfunction len(a) {\r\n    return a instanceof Set ? a.size : a.length;\r\n}\r\nfunction setOverlapFactory(a, toElemKey) {\r\n    const elems = !toElemKey\r\n        ? a instanceof Set\r\n            ? a\r\n            : new Set(a)\r\n        : new Set((a instanceof Set ? Array.from(a) : a).map(toElemKey));\r\n    const setA = elems.size;\r\n    const same = {\r\n        setA,\r\n        setB: setA,\r\n        union: setA,\r\n        intersection: setA,\r\n    };\r\n    return (b) => {\r\n        if (b === a) {\r\n            return same;\r\n        }\r\n        let intersection = 0;\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection++;\r\n            }\r\n        });\r\n        const setB = len(b);\r\n        return {\r\n            setA,\r\n            setB,\r\n            intersection,\r\n            union: setA + setB - intersection,\r\n        };\r\n    };\r\n}\r\nfunction setOverlap(a, b, toElemKey) {\r\n    if (len(a) < len(b) || a instanceof Set) {\r\n        return setOverlapFactory(a, toElemKey)(b);\r\n    }\r\n    const r = setOverlapFactory(b, toElemKey)(a);\r\n    return Object.assign({}, r, {\r\n        setA: r.setB,\r\n        setB: r.setA,\r\n    });\r\n}\r\nfunction setElemOverlapFactory(a, toElemKey) {\r\n    const elems = !toElemKey\r\n        ? a instanceof Set\r\n            ? a\r\n            : new Set(a)\r\n        : new Set((a instanceof Set ? Array.from(a) : a).map(toElemKey));\r\n    const setA = Array.isArray(a) ? a : Array.from(a);\r\n    const same = {\r\n        setA,\r\n        setB: setA,\r\n        union: setA,\r\n        intersection: setA,\r\n    };\r\n    return (b) => {\r\n        if (b === a) {\r\n            return same;\r\n        }\r\n        const intersection = [];\r\n        const union = setA.slice();\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection.push(e);\r\n            }\r\n            else {\r\n                union.push(e);\r\n            }\r\n        });\r\n        return {\r\n            setA: setA,\r\n            setB: Array.isArray(b) ? b : Array.from(b),\r\n            intersection,\r\n            union,\r\n        };\r\n    };\r\n}\r\nfunction setElemOverlap(a, b, toElemKey) {\r\n    if (len(a) < len(b) || a instanceof Set) {\r\n        return setElemOverlapFactory(a, toElemKey)(b);\r\n    }\r\n    const r = setElemOverlapFactory(b, toElemKey)(a);\r\n    return Object.assign({}, r, {\r\n        setA: r.setB,\r\n        setB: r.setA,\r\n    });\r\n}\r\nfunction setElemIntersectionFactory(a, toElemKey) {\r\n    const arr = a instanceof Set ? Array.from(a) : a;\r\n    const elems = !toElemKey ? (a instanceof Set ? a : new Set(a)) : new Set(arr.map(toElemKey));\r\n    return (b) => {\r\n        if (b === a) {\r\n            return arr;\r\n        }\r\n        const intersection = [];\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection.push(e);\r\n            }\r\n        });\r\n        return intersection;\r\n    };\r\n}\n\nfunction isElemQuery(q) {\r\n    return Array.isArray(q.elems);\r\n}\r\nfunction isCalcQuery(q) {\r\n    return typeof q.overlap === 'function';\r\n}\r\nfunction isSetQuery(q) {\r\n    return q.set != null;\r\n}\r\nfunction queryOverlap(query, what, toElemKey) {\r\n    if (isCalcQuery(query)) {\r\n        return query.overlap;\r\n    }\r\n    if (isSetQuery(query) && query.set.overlap) {\r\n        return query.set.overlap;\r\n    }\r\n    const f = setOverlapFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n    return (s) => {\r\n        if (s.overlap && isElemQuery(query) && Array.isArray(query.elems)) {\r\n            return s.overlap(query.elems);\r\n        }\r\n        if (s.overlap && isSetQuery(query)) {\r\n            return s.overlap(query.set);\r\n        }\r\n        return f(s.elems)[what];\r\n    };\r\n}\r\nfunction queryElemOverlap(query, what, toElemKey) {\r\n    if (isCalcQuery(query)) {\r\n        return () => null;\r\n    }\r\n    if (what === 'intersection') {\r\n        const f = setElemIntersectionFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n        return (s) => f(s.elems);\r\n    }\r\n    const f = setElemOverlapFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems)[what];\r\n    };\r\n}\n\nfunction isBaseSet(v) {\r\n    const vt = v;\r\n    return v != null && typeof vt.cardinality === 'number' && typeof v.name === 'string' && Array.isArray(v.elems);\r\n}\r\nfunction isSet(v) {\r\n    return isBaseSet(v) && v.type === 'set';\r\n}\r\nfunction isSetCombination(v) {\r\n    const vt = v;\r\n    return (isBaseSet(v) &&\r\n        ['composite', 'union', 'intersection', 'distinctIntersection'].includes(vt.type) &&\r\n        vt.sets instanceof Set &&\r\n        typeof vt.degree === 'number');\r\n}\r\nfunction isSetLike(v) {\r\n    return isSet(v) || isSetCombination(v);\r\n}\r\nfunction isGenerateSetCombinationOptions(v) {\r\n    const vt = v;\r\n    return v != null && (vt.type == null || ['intersection', 'union'].includes(vt.type));\r\n}\r\nfunction isUpSetQuery(v) {\r\n    const vt = v;\r\n    return (v != null &&\r\n        typeof vt.name === 'string' &&\r\n        typeof vt.color === 'string' &&\r\n        (isElemQuery(vt) || isSetQuery(vt) || isCalcQuery(vt)));\r\n}\n\nfunction byName(a, b) {\r\n    return a.name.localeCompare(b.name);\r\n}\r\nfunction byCardinality(a, b) {\r\n    return b.cardinality - a.cardinality;\r\n}\r\nfunction byDegree(a, b) {\r\n    return a.degree - b.degree;\r\n}\r\nfunction byComposite(func) {\r\n    return (a, b) => {\r\n        return func.reduce((acc, f) => (acc === 0 ? f(a, b) : acc), 0);\r\n    };\r\n}\r\nfunction negate(func) {\r\n    return (a, b) => -func(a, b);\r\n}\r\nfunction byGroup(sets) {\r\n    return (a, b) => {\r\n        const fixNotFound = (v) => (v < 0 ? Number.POSITIVE_INFINITY : v);\r\n        const aIndex = fixNotFound(sets.findIndex((s) => a.sets.has(s)));\r\n        const bIndex = fixNotFound(sets.findIndex((s) => b.sets.has(s)));\r\n        return aIndex - bIndex;\r\n    };\r\n}\n\nfunction fromSetName(sets, symbol = /[∩∪&|]/) {\r\n    const byName = new Map(sets.map((s) => [s.name, s]));\r\n    return (s) => {\r\n        return s.name.split(symbol).map((setName) => byName.get(setName.trim()));\r\n    };\r\n}\r\nfunction toOrder$1(sets, order) {\r\n    if (!order) {\r\n        return byName;\r\n    }\r\n    const arr = (Array.isArray(order) ? order : [order]);\r\n    if (arr.length === 0) {\r\n        return byName;\r\n    }\r\n    return byComposite(arr.map((o) => {\r\n        switch (o) {\r\n            case 'cardinality':\r\n            case 'cardinality:desc':\r\n                return byCardinality;\r\n            case 'cardinality:asc':\r\n                return negate(byCardinality);\r\n            case 'name:desc':\r\n                return negate(byName);\r\n            case 'degree':\r\n            case 'degree:asc':\r\n                return byDegree;\r\n            case 'degree:desc':\r\n                return negate(byDegree);\r\n            case 'group':\r\n            case 'group:asc':\r\n                return byGroup(sets);\r\n            case 'group:desc':\r\n                return negate(byGroup(sets));\r\n            default:\r\n                return byName;\r\n        }\r\n    }));\r\n}\r\nfunction postprocessCombinations(sets, combinations, options = {}) {\r\n    let r = combinations;\r\n    if (options.order) {\r\n        r = r.sort(toOrder$1(sets, options.order));\r\n    }\r\n    if (options.limit != null) {\r\n        return r.slice(0, options.limit);\r\n    }\r\n    return r;\r\n}\r\nfunction asCombination(set, type, toSets) {\r\n    const sets = toSets(set);\r\n    return Object.assign({\r\n        type,\r\n        cardinality: set.elems.length,\r\n        sets: new Set(sets),\r\n        degree: sets.length,\r\n    }, set);\r\n}\r\nfunction asCombinations(sets, type, toSets) {\r\n    return sets.map((set) => asCombination(set, type, toSets));\r\n}\n\nconst SET_JOINERS = {\r\n    distinctIntersection: ' ∩ ',\r\n    intersection: ' ∩ ',\r\n    union: ' ∪ ',\r\n    composite: ',',\r\n};\n\nfunction parseColor(color) {\r\n    if (!color) {\r\n        return [255, 255, 255];\r\n    }\r\n    const hex = color.match(/#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})/i);\r\n    if (hex) {\r\n        return [Number.parseInt(hex[1], 16), Number.parseInt(hex[2], 16), Number.parseInt(hex[3], 16)];\r\n    }\r\n    const rgb = color.match(/\\(([\\d]+)[, ]([\\d]+)[, ]([\\d]+)\\)/i);\r\n    if (rgb) {\r\n        return [Number.parseInt(rgb[1], 10), Number.parseInt(rgb[2], 10), Number.parseInt(rgb[3], 10)];\r\n    }\r\n    return [255, 255, 255];\r\n}\r\nfunction mergeColors(colors) {\r\n    if (colors.length === 1) {\r\n        return colors[0];\r\n    }\r\n    if (colors.every((d) => d == null)) {\r\n        return undefined;\r\n    }\r\n    const rgb = colors.map(parseColor);\r\n    const r = Math.floor(rgb.reduce((acc, v) => acc + v[0], 0) / rgb.length);\r\n    const g = Math.floor(rgb.reduce((acc, v) => acc + v[1], 0) / rgb.length);\r\n    const b = Math.floor(rgb.reduce((acc, v) => acc + v[2], 0) / rgb.length);\r\n    return `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\r\n}\n\nfunction generateName$1(combo, setIndex, joiner) {\r\n    const sorted = Array.from(combo).sort((a, b) => setIndex.get(a) - setIndex.get(b));\r\n    return sorted.length === 1 ? sorted[0].name : `(${sorted.map((d) => d.name).join(joiner)})`;\r\n}\r\nfunction generateSet(type, name, combo, elems, mergeColors) {\r\n    return {\r\n        type: combo.size === 0 ? 'composite' : type,\r\n        elems,\r\n        color: mergeColors(Array.from(combo).map((s) => s.color)),\r\n        sets: combo,\r\n        name,\r\n        cardinality: elems.length,\r\n        degree: combo.size,\r\n    };\r\n}\r\nfunction mergeIntersection(a, b, lookup, toKey, setIndex, type, mergeColors) {\r\n    const merged = new Set(a.sets);\r\n    b.sets.forEach((s) => merged.add(s));\r\n    const name = generateName$1(merged, setIndex, SET_JOINERS[type]);\r\n    if (a.cardinality === 0 || b.cardinality === 0) {\r\n        return generateSet(type, name, merged, [], mergeColors);\r\n    }\r\n    let small = a;\r\n    let big = b;\r\n    if (a.cardinality > b.cardinality) {\r\n        small = b;\r\n        big = a;\r\n    }\r\n    const keySet = new Set();\r\n    const bigLookup = lookup.get(big);\r\n    const elems = [];\r\n    const l = small.elems.length;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = small.elems[i];\r\n        const key = toKey(e);\r\n        if (!bigLookup.has(key)) {\r\n            continue;\r\n        }\r\n        keySet.add(key);\r\n        elems.push(e);\r\n    }\r\n    const r = generateSet(type, name, merged, elems, mergeColors);\r\n    lookup.set(r, keySet);\r\n    return r;\r\n}\r\nfunction mergeUnion(a, b, lookup, toKey, setIndex, type, mergeColors) {\r\n    const merged = new Set(a.sets);\r\n    b.sets.forEach((s) => merged.add(s));\r\n    const name = generateName$1(merged, setIndex, SET_JOINERS[type]);\r\n    if (a.cardinality === 0) {\r\n        const r = generateSet(type, name, merged, b.elems, mergeColors);\r\n        lookup.set(r, lookup.get(b));\r\n        return r;\r\n    }\r\n    if (b.cardinality === 0) {\r\n        const r = generateSet(type, name, merged, a.elems, mergeColors);\r\n        lookup.set(r, lookup.get(a));\r\n        return r;\r\n    }\r\n    let small = a;\r\n    let big = b;\r\n    if (a.cardinality > b.cardinality) {\r\n        small = b;\r\n        big = a;\r\n    }\r\n    const keySet = new Set(lookup.get(big));\r\n    const bigLookup = lookup.get(big);\r\n    const elems = big.elems.slice();\r\n    small.elems.forEach((e) => {\r\n        const key = toKey(e);\r\n        if (bigLookup.has(key)) {\r\n            return;\r\n        }\r\n        keySet.add(key);\r\n        elems.push(e);\r\n    });\r\n    const r = generateSet(type, name, merged, elems, mergeColors);\r\n    lookup.set(r, keySet);\r\n    return r;\r\n}\r\nfunction generateEmptySet(type, notPartOfAnySet, allElements, lookup, toKey, mergeColors) {\r\n    if (typeof notPartOfAnySet === 'number') {\r\n        return {\r\n            type: 'composite',\r\n            elems: [],\r\n            color: mergeColors ? mergeColors([]) : undefined,\r\n            sets: new Set(),\r\n            name: '()',\r\n            cardinality: notPartOfAnySet,\r\n            overlap(s) {\r\n                return s === this || (isSetLike(s) && s.name === this.name && s.cardinality === this.cardinality)\r\n                    ? this.cardinality\r\n                    : 0;\r\n            },\r\n            degree: 0,\r\n        };\r\n    }\r\n    if (Array.isArray(notPartOfAnySet)) {\r\n        return generateSet(type, '()', new Set(), notPartOfAnySet, mergeColors);\r\n    }\r\n    const lookupArr = Array.from(lookup.values());\r\n    const elems = allElements.filter((e) => {\r\n        const k = toKey(e);\r\n        return lookupArr.every((s) => !s.has(k));\r\n    });\r\n    return generateSet(type, '()', new Set(), elems, mergeColors);\r\n}\r\nfunction generateCombinations(sets, options = {}) {\r\n    const { type = 'intersection', min = 0, max = Number.POSITIVE_INFINITY, empty = false, elems: allElements = [], notPartOfAnySet, toElemKey, mergeColors: mergeColors$1 = mergeColors, } = options;\r\n    const combinations = [];\r\n    const setIndex = new Map(sets.map((s, i) => [s, i]));\r\n    const setElems = new Map(sets.map((s) => [s, toElemKey ? new Set(s.elems.map(toElemKey)) : new Set(s.elems)]));\r\n    const setDirectElems = toElemKey ? null : setElems;\r\n    const setKeyElems = toElemKey ? setElems : null;\r\n    const calc = type === 'union' ? mergeUnion : mergeIntersection;\r\n    function push(s) {\r\n        if (s.degree < min || s.degree > max || (s.cardinality === 0 && !empty)) {\r\n            return;\r\n        }\r\n        if (type !== 'distinctIntersection') {\r\n            combinations.push(s);\r\n            return;\r\n        }\r\n        const others = sets.filter((d) => !s.sets.has(d));\r\n        let elems = [];\r\n        if (toElemKey) {\r\n            const othersSets = others.map((o) => setKeyElems.get(o));\r\n            elems = s.elems.filter((e) => {\r\n                const key = toElemKey(e);\r\n                return othersSets.every((o) => !o.has(key));\r\n            });\r\n        }\r\n        else {\r\n            const othersSets = others.map((o) => setDirectElems.get(o));\r\n            elems = s.elems.filter((e) => othersSets.every((o) => !o.has(e)));\r\n        }\r\n        if (elems.length === s.cardinality) {\r\n            combinations.push(s);\r\n            return;\r\n        }\r\n        const sDistinct = generateSet(type, s.name, s.sets, elems, mergeColors$1);\r\n        if (sDistinct.cardinality === 0 && !empty) {\r\n            return;\r\n        }\r\n        combinations.push(sDistinct);\r\n    }\r\n    function generateLevel(arr, degree, lookup, toKey) {\r\n        if (degree > max) {\r\n            return;\r\n        }\r\n        const l = arr.length;\r\n        for (let i = 0; i < l; i++) {\r\n            const a = arr[i];\r\n            const sub = [];\r\n            for (let j = i + 1; j < l; j++) {\r\n                const b = arr[j];\r\n                const ab = calc(a, b, lookup, toKey, setIndex, type, mergeColors$1);\r\n                push(ab);\r\n                if (type === 'union' || ab.cardinality > 0 || empty) {\r\n                    sub.push(ab);\r\n                }\r\n            }\r\n            if (sub.length > 1) {\r\n                generateLevel(sub, degree + 1, lookup, toKey);\r\n            }\r\n        }\r\n    }\r\n    if (min <= 0) {\r\n        if (toElemKey) {\r\n            push(generateEmptySet(type, notPartOfAnySet, allElements, setKeyElems, toElemKey, mergeColors$1));\r\n        }\r\n        else {\r\n            push(generateEmptySet(type, notPartOfAnySet, allElements, setDirectElems, (v) => v, mergeColors$1));\r\n        }\r\n    }\r\n    const degree1 = sets.map((s) => {\r\n        const r = generateSet(type, s.name, new Set([s]), s.elems, mergeColors$1);\r\n        setElems.set(r, setElems.get(s));\r\n        push(r);\r\n        return r;\r\n    });\r\n    if (toElemKey) {\r\n        generateLevel(degree1, 2, setKeyElems, toElemKey);\r\n    }\r\n    else {\r\n        generateLevel(degree1, 2, setDirectElems, (v) => v);\r\n    }\r\n    return postprocessCombinations(sets, combinations, options);\r\n}\n\nfunction asSet(set) {\r\n    return Object.assign({\r\n        type: 'set',\r\n        cardinality: set.elems.length,\r\n    }, set);\r\n}\r\nfunction toOrder(order) {\r\n    if (!order) {\r\n        return byName;\r\n    }\r\n    switch (order) {\r\n        case 'cardinality':\r\n        case 'cardinality:desc':\r\n            return byComposite([byCardinality, byName]);\r\n        case 'cardinality:asc':\r\n            return byComposite([negate(byCardinality), byName]);\r\n        case 'name:desc':\r\n            return negate(byName);\r\n        default:\r\n            return byName;\r\n    }\r\n}\r\nfunction postprocessSets(sets, options = {}) {\r\n    let r = sets;\r\n    if (options.order) {\r\n        const order = toOrder(options.order);\r\n        r = r.slice().sort(order);\r\n    }\r\n    if (options.limit != null) {\r\n        return r.slice(0, options.limit);\r\n    }\r\n    return r;\r\n}\r\nfunction asSets(sets, options = {}) {\r\n    return postprocessSets(sets.map(asSet), options);\r\n}\n\nfunction extractFromExpression(combinations, accOrOptions, o = {}) {\r\n    var _a, _b, _c;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const type = (_b = options.type) !== null && _b !== void 0 ? _b : 'intersection';\r\n    const joiner = (_c = options.joiner) !== null && _c !== void 0 ? _c : SET_JOINERS[type];\r\n    const sets = [];\r\n    const setLookup = new Map();\r\n    const cs = combinations.map((c) => {\r\n        const containedSets = acc(c);\r\n        const containedSetsObjects = containedSets.map((s) => {\r\n            if (setLookup.has(s)) {\r\n                return setLookup.get(s);\r\n            }\r\n            const set = {\r\n                cardinality: 0,\r\n                elems: [],\r\n                name: s,\r\n                type: 'set',\r\n            };\r\n            sets.push(set);\r\n            setLookup.set(set.name, set);\r\n            return set;\r\n        });\r\n        if (type === 'distinctIntersection') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality += c.cardinality;\r\n            }\r\n        }\r\n        else if (containedSets.length === 1) {\r\n            Object.assign(containedSetsObjects[0], {\r\n                cardinality: c.cardinality,\r\n            }, c);\r\n        }\r\n        else if (type === 'intersection') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality = Math.max(s.cardinality, c.cardinality);\r\n            }\r\n        }\r\n        else if (type === 'union') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality = Math.min(s.cardinality, c.cardinality);\r\n            }\r\n        }\r\n        const name = containedSets.join(joiner);\r\n        return Object.assign({\r\n            type,\r\n            elems: [],\r\n            name,\r\n        }, c, {\r\n            cardinality: c.cardinality,\r\n            degree: containedSets.length,\r\n            sets: new Set(containedSetsObjects),\r\n        });\r\n    });\r\n    const sortedSets = postprocessSets(sets, {\r\n        order: options.setOrder,\r\n    });\r\n    const sortedCombinations = postprocessCombinations(sortedSets, cs, {\r\n        order: options.combinationOrder,\r\n    });\r\n    return {\r\n        sets: sortedSets,\r\n        combinations: sortedCombinations,\r\n    };\r\n}\n\nfunction extractSets(elements, accOrOptions, o = {}) {\r\n    var _a;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const sets = Object.create(null);\r\n    elements.forEach((elem) => {\r\n        acc(elem).forEach((set) => {\r\n            const s = typeof set === 'string' ? set : String(set);\r\n            const r = sets[s];\r\n            if (r == null) {\r\n                sets[s] = [elem];\r\n            }\r\n            else {\r\n                r.push(elem);\r\n            }\r\n        });\r\n    });\r\n    return postprocessSets(Object.entries(sets).map(([set, elems]) => {\r\n        const r = {\r\n            type: 'set',\r\n            elems,\r\n            name: String(set),\r\n            cardinality: elems.length,\r\n        };\r\n        return r;\r\n    }), options);\r\n}\n\nfunction createTree(byDegree, getOrCreateCombination) {\r\n    const children = new Map();\r\n    byDegree\r\n        .slice()\r\n        .reverse()\r\n        .forEach((csOfDegree) => {\r\n        if (csOfDegree.length === 0 || csOfDegree[0].degree === 1) {\r\n            return;\r\n        }\r\n        csOfDegree.forEach((c) => {\r\n            const sets = Array.from(c.sets).map((d) => d.name);\r\n            for (let i = 0; i < sets.length; i++) {\r\n                const subSet = sets.slice();\r\n                subSet.splice(i, 1);\r\n                const parent = getOrCreateCombination(subSet);\r\n                if (children.has(parent)) {\r\n                    children.get(parent).push(c);\r\n                }\r\n                else {\r\n                    children.set(parent, [c]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return children;\r\n}\r\nfunction extractCombinations(elements, accOrOptions, o = {}) {\r\n    var _a, _b, _c, _d;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const type = (_b = options.type) !== null && _b !== void 0 ? _b : 'intersection';\r\n    const sets = (_c = options.sets) !== null && _c !== void 0 ? _c : extractSets(elements, acc, {\r\n        limit: options.setLimit,\r\n        order: options.setOrder,\r\n    });\r\n    if (type === 'union') {\r\n        return {\r\n            sets,\r\n            combinations: generateCombinations(sets, {\r\n                type: 'union',\r\n                limit: options.combinationLimit,\r\n                order: options.combinationOrder,\r\n            }),\r\n        };\r\n    }\r\n    const setLookup = Object.create(null);\r\n    sets.forEach((set, i) => {\r\n        setLookup[set.name] = [set, i];\r\n    });\r\n    const isSortedAlphabetically = sets\r\n        .map((d) => d.name)\r\n        .sort()\r\n        .every((d, i) => sets[i].name === d);\r\n    const bySet = isSortedAlphabetically\r\n        ? undefined\r\n        : (a, b) => {\r\n            var _a, _b, _c, _d;\r\n            const ai = (_b = (_a = setLookup[a]) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : -1;\r\n            const bi = (_d = (_c = setLookup[b]) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : -1;\r\n            return ai - bi;\r\n        };\r\n    const validSet = options.sets == null && options.setLimit == null ? null : new Set(sets.map((d) => d.name));\r\n    const joiner = (_d = options.joiner) !== null && _d !== void 0 ? _d : SET_JOINERS[type];\r\n    const cs = [];\r\n    const csLookup = Object.create(null);\r\n    const byDegree = Array(sets.length + 1)\r\n        .fill(0)\r\n        .map((_) => []);\r\n    function genName(setsOfElem) {\r\n        switch (setsOfElem.length) {\r\n            case 0:\r\n                return '()';\r\n            case 1:\r\n                return setsOfElem[0];\r\n            default:\r\n                const sorted = setsOfElem.slice().sort(bySet);\r\n                const joined = sorted.join(joiner);\r\n                return '(' + joined + ')';\r\n        }\r\n    }\r\n    function genKey(setsOfElem) {\r\n        switch (setsOfElem.length) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return setsOfElem[0];\r\n            case 2: {\r\n                if ((bySet != null && bySet(setsOfElem[0], setsOfElem[1]) > 0) ||\r\n                    (bySet == null && setsOfElem[1] > setsOfElem[0])) {\r\n                    return setsOfElem[1] + '&' + setsOfElem[0];\r\n                }\r\n                return setsOfElem[0] + '&' + setsOfElem[1];\r\n            }\r\n            default:\r\n                const sorted = setsOfElem.slice().sort(bySet);\r\n                return sorted.join('&');\r\n        }\r\n    }\r\n    function getOrCreateCombination(setsOfElem) {\r\n        const key = genKey(setsOfElem);\r\n        const entry = csLookup[key];\r\n        if (entry) {\r\n            return entry;\r\n        }\r\n        const newEntry = {\r\n            type,\r\n            name: genName(setsOfElem),\r\n            degree: setsOfElem.length,\r\n            sets: new Set(setsOfElem.map((s) => setLookup[s][0])),\r\n            cardinality: 0,\r\n            elems: [],\r\n        };\r\n        csLookup[key] = newEntry;\r\n        cs.push(newEntry);\r\n        byDegree[newEntry.degree].push(newEntry);\r\n        return newEntry;\r\n    }\r\n    elements.forEach((elem) => {\r\n        let setsOfElem = acc(elem);\r\n        if (validSet) {\r\n            setsOfElem = setsOfElem.filter((d) => validSet.has(d));\r\n        }\r\n        const c = getOrCreateCombination(setsOfElem);\r\n        c.elems.push(elem);\r\n        c.cardinality++;\r\n    });\r\n    const finalize = () => {\r\n        return {\r\n            sets,\r\n            combinations: postprocessCombinations(sets, cs, {\r\n                order: options.combinationOrder,\r\n                limit: options.combinationLimit,\r\n            }),\r\n        };\r\n    };\r\n    if (type === 'distinctIntersection') {\r\n        return finalize();\r\n    }\r\n    const children = createTree(byDegree, getOrCreateCombination);\r\n    function visit(node, visited, agg) {\r\n        var _a;\r\n        if (visited.has(node)) {\r\n            return;\r\n        }\r\n        visited.add(node);\r\n        if (node.elems.length < 1000) {\r\n            agg[0].push(...node.elems);\r\n        }\r\n        else {\r\n            agg.push(node.elems);\r\n        }\r\n        ((_a = children.get(node)) !== null && _a !== void 0 ? _a : []).forEach((child) => visit(child, visited, agg));\r\n    }\r\n    byDegree.slice(1).forEach((level) => {\r\n        level.forEach((node) => {\r\n            var _a;\r\n            const visited = new Set();\r\n            const agg = [node.elems];\r\n            ((_a = children.get(node)) !== null && _a !== void 0 ? _a : []).forEach((child) => {\r\n                visit(child, visited, agg);\r\n            });\r\n            const elems = agg.length === 1 ? agg[0] : agg.flat();\r\n            Object.assign(node, { elems, cardinality: elems.length });\r\n        });\r\n    });\r\n    return finalize();\r\n}\n\nfunction toKey(s) {\r\n    return `${s.name}:${s.type}#${s.cardinality}`;\r\n}\n\nfunction isUniverse(s) {\r\n    return s.sets.size === 0;\r\n}\r\nfunction common(a, b, toKey$1 = toKey) {\r\n    const r = {\r\n        done: null,\r\n        aKey: '',\r\n        bKey: '',\r\n        aIsSet: false,\r\n        bIsSet: false,\r\n        toKey: toKey$1,\r\n    };\r\n    if (a === b) {\r\n        r.done = a.cardinality;\r\n        return r;\r\n    }\r\n    if (a.cardinality === 0 || b.cardinality === 0) {\r\n        r.done = 0;\r\n        return r;\r\n    }\r\n    r.aKey = toKey$1(a);\r\n    r.bKey = toKey$1(b);\r\n    if (r.aKey === r.bKey) {\r\n        r.done = a.cardinality;\r\n        return r;\r\n    }\r\n    r.aIsSet = isSet(a);\r\n    r.bIsSet = isSet(b);\r\n    if ((!r.aIsSet && isUniverse(a)) || (!r.bIsSet && isUniverse(b))) {\r\n        r.done = 0;\r\n        return r;\r\n    }\r\n    return r;\r\n}\r\nfunction aInB(b, r) {\r\n    if (r.bIsSet || !r.aIsSet) {\r\n        return false;\r\n    }\r\n    return Array.from(b.sets)\r\n        .map(r.toKey)\r\n        .includes(r.aKey);\r\n}\r\nfunction bInA(a, r) {\r\n    if (!r.bIsSet || r.aIsSet) {\r\n        return false;\r\n    }\r\n    return Array.from(a.sets)\r\n        .map(r.toKey)\r\n        .includes(r.bKey);\r\n}\r\nfunction keyedCombinations(combinations, toKey$1 = toKey) {\r\n    return combinations.map((c) => {\r\n        const s = Array.from(c.sets).map(toKey$1).sort();\r\n        return {\r\n            key: s.join('&'),\r\n            s,\r\n            sets: new Set(s),\r\n            degree: c.degree,\r\n            cardinality: c.cardinality,\r\n        };\r\n    });\r\n}\r\nfunction combinedKey(a, b, r) {\r\n    const sets = new Set();\r\n    if (r.aIsSet) {\r\n        sets.add(r.aKey);\r\n    }\r\n    else {\r\n        for (const s of Array.from(a.sets)) {\r\n            sets.add(r.toKey(s));\r\n        }\r\n    }\r\n    if (r.bIsSet) {\r\n        sets.add(r.bKey);\r\n    }\r\n    else {\r\n        for (const s of Array.from(b.sets)) {\r\n            sets.add(r.toKey(s));\r\n        }\r\n    }\r\n    return Array.from(sets).sort().join('&');\r\n}\r\nfunction generateDistinctOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsBySet = new Map();\r\n    for (const c of keyedCombinations(combinations, toKey$1)) {\r\n        for (const s of c.s) {\r\n            if (combinationsBySet.has(s)) {\r\n                combinationsBySet.get(s).push(c);\r\n            }\r\n            else {\r\n                combinationsBySet.set(s, [c]);\r\n            }\r\n        }\r\n    }\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (!r.aIsSet && !r.bIsSet) {\r\n            return 0;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet) {\r\n            return aInB(b, r) ? b.cardinality : 0;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet) {\r\n            return bInA(a, r) ? a.cardinality : 0;\r\n        }\r\n        const hasA = combinationsBySet.get(r.aKey);\r\n        const hasB = combinationsBySet.get(r.bKey);\r\n        if (!hasA || !hasB) {\r\n            return fallback(a, b);\r\n        }\r\n        if (hasA.length < hasB.length) {\r\n            return hasA.reduce((acc, c) => acc + (c.sets.has(r.bKey) ? c.cardinality : 0), 0);\r\n        }\r\n        return hasB.reduce((acc, c) => acc + (c.sets.has(r.aKey) ? c.cardinality : 0), 0);\r\n    };\r\n}\r\nfunction generateIntersectionOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsByKey = new Map(keyedCombinations(combinations, toKey$1).map((d) => [d.key, d.cardinality]));\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet && aInB(b, r)) {\r\n            return b.cardinality;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet && bInA(a, r)) {\r\n            return a.cardinality;\r\n        }\r\n        const key = combinedKey(a, b, r);\r\n        if (!combinationsByKey.has(key)) {\r\n            return fallback(a, b);\r\n        }\r\n        return combinationsByKey.get(key);\r\n    };\r\n}\r\nfunction generateUnionOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsByKey = new Map(keyedCombinations(combinations, toKey$1).map((d) => [d.key, d.cardinality]));\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet && aInB(b, r)) {\r\n            return a.cardinality;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet && bInA(a, r)) {\r\n            return b.cardinality;\r\n        }\r\n        const key = combinedKey(a, b, r);\r\n        if (!combinationsByKey.has(key)) {\r\n            return fallback(a, b);\r\n        }\r\n        return a.cardinality + b.cardinality - combinationsByKey.get(key);\r\n    };\r\n}\r\nfunction generateOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    if (combinations.length === 0) {\r\n        return fallback;\r\n    }\r\n    const firstType = combinations[0].type;\r\n    if (combinations.some((s) => s.type !== firstType)) {\r\n        return fallback;\r\n    }\r\n    switch (firstType) {\r\n        case 'union':\r\n            return generateUnionOverlapFunction(combinations, fallback, toKey$1);\r\n        case 'intersection':\r\n            return generateIntersectionOverlapFunction(combinations, fallback, toKey$1);\r\n        case 'distinctIntersection':\r\n            return generateDistinctOverlapFunction(combinations, fallback, toKey$1);\r\n    }\r\n    return fallback;\r\n}\n\nfunction compressLine(line) {\r\n    if (line.length === 0) {\r\n        return '';\r\n    }\r\n    const r = [];\r\n    let start = line[0];\r\n    let len = 1;\r\n    for (let i = 1; i < line.length; i++) {\r\n        const v = line[i];\r\n        if (v === start) {\r\n            len++;\r\n        }\r\n        else {\r\n            if (len > 1) {\r\n                r.push(`${start}=${len - 1}`);\r\n            }\r\n            else if (start === 0) {\r\n                r.push('');\r\n            }\r\n            else {\r\n                r.push(start.toString());\r\n            }\r\n            start = v;\r\n            len = 1;\r\n        }\r\n    }\r\n    if (len > 1) {\r\n        r.push(`${start}=${len}`);\r\n    }\r\n    else if (start === 0) {\r\n        r.push('');\r\n    }\r\n    else {\r\n        r.push(start.toString());\r\n    }\r\n    return r.join(',');\r\n}\r\nfunction decompressLine(line) {\r\n    if (line.length === 0) {\r\n        return [];\r\n    }\r\n    return line\r\n        .split(',')\r\n        .map((v) => {\r\n        if (v === '') {\r\n            return 0;\r\n        }\r\n        if (v.includes('=')) {\r\n            const [value, length] = v.split('=').map((v) => Number.parseInt(v, 10));\r\n            return Array(length + 1).fill(value);\r\n        }\r\n        return Number.parseInt(v, 10);\r\n    })\r\n        .flat();\r\n}\r\nfunction compressMatrix(matrix) {\r\n    if (matrix.length === 0) {\r\n        return '';\r\n    }\r\n    const rows = matrix.length;\r\n    const flat = matrix.flat();\r\n    return `${rows};${compressLine(flat)}`;\r\n}\r\nfunction decompressMatrix(matrix) {\r\n    if (matrix.length === 0) {\r\n        return [];\r\n    }\r\n    const [rowsInfo, data] = matrix.split(';');\r\n    const rows = Number.parseInt(rowsInfo, 10);\r\n    const values = decompressLine(data);\r\n    const r = [];\r\n    let acc = 0;\r\n    for (let i = rows; i > 0; i--) {\r\n        r.push(values.slice(acc, acc + i));\r\n        acc += i;\r\n    }\r\n    return r;\r\n}\r\nfunction generateOverlapLookup(sets, combinations, { toElemKey, what = 'intersection', compress = 'auto' } = {}) {\r\n    const data = sets.concat(combinations);\r\n    function overlapF(set) {\r\n        if (set.overlap) {\r\n            return set.overlap;\r\n        }\r\n        const f = setOverlapFactory(set.elems, toElemKey);\r\n        return (v) => {\r\n            if (v.overlap) {\r\n                return v.overlap(set);\r\n            }\r\n            return f(v.elems)[what];\r\n        };\r\n    }\r\n    const matrix = data.map((set, i) => {\r\n        const overlap = overlapF(set);\r\n        const r = [];\r\n        for (let j = i + 1; j < data.length; j++) {\r\n            r.push(overlap(data[j]));\r\n        }\r\n        return r;\r\n    });\r\n    matrix.pop();\r\n    if (compress === 'no') {\r\n        return matrix;\r\n    }\r\n    const compressed = compressMatrix(matrix);\r\n    if (compress === 'yes') {\r\n        return compressed;\r\n    }\r\n    const encodedLength = JSON.stringify(matrix).length;\r\n    const compressedLength = compressed.length + 2;\r\n    return compressedLength < encodedLength * 0.6 ? compressed : matrix;\r\n}\r\nfunction generateOverlapLookupFunction(matrix, sets, combinations, toKey$1 = toKey) {\r\n    const lookup = typeof matrix == 'string' ? decompressMatrix(matrix) : matrix;\r\n    const setIndex = new Map(sets.map((set, i) => [toKey$1(set), i]));\r\n    const combinationIndex = new Map(combinations.map((set, i) => [toKey$1(set), i + sets.length]));\r\n    const compute = (a, b) => {\r\n        if (a === b) {\r\n            return a.cardinality;\r\n        }\r\n        const aKey = toKey$1(a);\r\n        const bKey = toKey$1(b);\r\n        const aIndex = setIndex.has(aKey) ? setIndex.get(aKey) : combinationIndex.get(aKey);\r\n        const bIndex = setIndex.has(bKey) ? setIndex.get(bKey) : combinationIndex.get(bKey);\r\n        if (aIndex === bIndex) {\r\n            return a.cardinality;\r\n        }\r\n        const row = Math.min(aIndex, bIndex);\r\n        const col = Math.max(aIndex, bIndex) - row - 1;\r\n        if (row < 0 || row >= lookup.length || col < 0 || col >= lookup[row].length) {\r\n            return 0;\r\n        }\r\n        return lookup[row][col];\r\n    };\r\n    return {\r\n        setIndex,\r\n        compute,\r\n        combinationIndex,\r\n    };\r\n}\n\nconst bandScale = (domain, size, padding) => {\r\n    const blocks = domain.length + padding;\r\n    const step = size / Math.max(1, blocks);\r\n    const start = size - step * domain.length;\r\n    const lookup = new Map(domain.map((d, i) => [d, i]));\r\n    const bandwidth = step / (1 + padding);\r\n    const scale = (v) => {\r\n        const index = lookup.get(v);\r\n        if (index == null) {\r\n            return undefined;\r\n        }\r\n        return start + step * index;\r\n    };\r\n    scale.bandwidth = () => bandwidth;\r\n    return scale;\r\n};\n\nfunction hasOverlap(positions, heights, stride = 1) {\r\n    for (let i = 0; i < positions.length - stride; i += stride) {\r\n        const pos_i = positions[i];\r\n        const pos_n = positions[i + 1];\r\n        if (pos_i < pos_n) {\r\n            const right = pos_i + heights[i] / 2;\r\n            const left = pos_n - heights[i + 1] / 2;\r\n            if (right > left) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            const left = pos_i - heights[i] / 2;\r\n            const right = pos_n + heights[i + 1] / 2;\r\n            if (right > left) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction ensureLast(ticks, max, scale, heightPerTick, toStr) {\r\n    let last = ticks[ticks.length - 1];\r\n    if (!last.label) {\r\n        for (let j = ticks.length - 2; j > 0; --j) {\r\n            if (ticks[j].label) {\r\n                last = ticks[j];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (last.value < max) {\r\n        const pos_l = scale(last.value);\r\n        const pos_max = scale(max);\r\n        if (pos_l < pos_max) {\r\n            const right = pos_l + heightPerTick(last.value) / 2;\r\n            const left = pos_max - heightPerTick(max) / 2;\r\n            if (right < left) {\r\n                ticks.push({ value: max, label: toStr(max) });\r\n            }\r\n        }\r\n        else {\r\n            const left = pos_l - heightPerTick(last.value) / 2;\r\n            const right = pos_max + heightPerTick(max) / 2;\r\n            if (right < left) {\r\n                ticks.push({ value: max, label: toStr(max) });\r\n            }\r\n        }\r\n    }\r\n    return ticks;\r\n}\r\nfunction genTicks(values, toStr = String, stride = 1) {\r\n    return values.map((v, i) => ({\r\n        value: v,\r\n        label: stride === 1 || i % stride === 0 ? toStr(v) : undefined,\r\n    }));\r\n}\r\nfunction checkValues(values, scale, heightPerTick, max, toStr) {\r\n    const positions = values.map((v) => scale(v));\r\n    const heights = values.map((v) => heightPerTick(v));\r\n    if (!hasOverlap(positions, heights)) {\r\n        return ensureLast(genTicks(values, toStr), max, scale, heightPerTick, toStr);\r\n    }\r\n    if (!hasOverlap(positions, heights, 2)) {\r\n        return ensureLast(genTicks(values, toStr), max, scale, heightPerTick, toStr);\r\n    }\r\n    return null;\r\n}\n\nfunction toStr$1(v) {\r\n    return v.toLocaleString();\r\n}\r\nfunction niceFactors(max, maxCount = 11) {\r\n    const digits = Math.max(0, Math.floor(Math.log10(max) - 0.5));\r\n    const factor = Math.pow(10, digits);\r\n    const factors = [1, 2, 5];\r\n    const r = factors.map((f) => f * factor);\r\n    if (digits > 0) {\r\n        r.unshift(factors[factors.length - 1] * Math.pow(10, digits - 1));\r\n    }\r\n    r.push(factors[0] * Math.pow(10, digits + 1));\r\n    const lower = Math.ceil(max / maxCount);\r\n    return r.filter((d) => d >= lower && d <= max);\r\n}\r\nfunction range$1(max, inc = 1) {\r\n    const values = [];\r\n    for (let v = 0; v <= max; v += inc) {\r\n        values.push(v);\r\n    }\r\n    return values;\r\n}\r\nfunction distributeTicks$1(max, maxCount, scale, heightPerTick) {\r\n    if (maxCount <= 0) {\r\n        return [];\r\n    }\r\n    const factors = niceFactors(max, maxCount);\r\n    for (let i = 0; i < factors.length; i++) {\r\n        const values = range$1(max, factors[i]);\r\n        const r = checkValues(values, scale, heightPerTick, max, toStr$1);\r\n        if (r) {\r\n            return r;\r\n        }\r\n    }\r\n    return genTicks([0, max], toStr$1);\r\n}\r\nconst linearScale = (max, range, options) => {\r\n    const size = range[1] - range[0];\r\n    const domain = max;\r\n    const scale = (v) => {\r\n        const cv = Math.max(0, Math.min(v, domain));\r\n        const n = cv / domain;\r\n        return range[0] + n * size;\r\n    };\r\n    scale.ticks = (count = 10) => {\r\n        if (options.orientation === 'vertical') {\r\n            const heightPerTick = Math.ceil(options.fontSizeHint * 1.4);\r\n            return distributeTicks$1(max, count + 1, scale, () => heightPerTick);\r\n        }\r\n        const widthPerChar = options.fontSizeHint / 1.4;\r\n        return distributeTicks$1(max, count + 1, scale, (v) => Math.ceil(toStr$1(v).length * widthPerChar));\r\n    };\r\n    scale.tickFormat = () => toStr$1;\r\n    return scale;\r\n};\n\nfunction toStr(v) {\r\n    const orders = ['', 'k', 'M', 'G'];\r\n    const order = Math.max(0, Math.min(Math.floor(Math.log10(v) / 3), orders.length - 1));\r\n    const vi = Math.round(v / Math.pow(10, order * 3 - 1)) / 10;\r\n    return `${vi.toLocaleString()}${orders[order]}`;\r\n}\r\nfunction range(max, factor) {\r\n    const values = [];\r\n    const inc = Math.pow(10, factor);\r\n    for (let v = 1; v <= max; v *= inc) {\r\n        values.push(v);\r\n    }\r\n    return values;\r\n}\r\nfunction generateInnerTicks(max, factor) {\r\n    const values = [];\r\n    const inc = 10;\r\n    for (let v = 1, i = 0; v <= max; v *= inc, i++) {\r\n        values.push({\r\n            value: v,\r\n            label: factor === 1 || i % factor === 0 ? toStr(v) : undefined,\r\n        });\r\n        for (let vv = v + v; vv < v * inc && vv < max; vv += v * factor) {\r\n            values.push({ value: vv });\r\n        }\r\n    }\r\n    return values;\r\n}\r\nfunction distributeTicks(max, maxCount, scale, heightPerTick) {\r\n    if (maxCount <= 0) {\r\n        return [];\r\n    }\r\n    for (const factor of [1, 2, 5]) {\r\n        const values = range(max, factor);\r\n        const r = checkValues(values, scale, heightPerTick, max, toStr);\r\n        if (r) {\r\n            return ensureLast(generateInnerTicks(max, factor), max, scale, heightPerTick, toStr);\r\n        }\r\n    }\r\n    return genTicks([0, max], toStr);\r\n}\r\nconst logScale = (max, range, options) => {\r\n    const size = range[1] - range[0];\r\n    const domain = max < 1 ? 1 : Math.log10(max);\r\n    const scale = (v) => {\r\n        const cv = Math.max(0, Math.min(v, domain));\r\n        const n = cv <= 1 ? 0 : Math.log10(cv) / domain;\r\n        return range[0] + n * size;\r\n    };\r\n    scale.ticks = (count = 10) => {\r\n        if (options.orientation === 'vertical') {\r\n            const heightPerTick = Math.ceil(options.fontSizeHint * 1.4);\r\n            return distributeTicks(max, count + 1, scale, () => heightPerTick);\r\n        }\r\n        const widthPerChar = options.fontSizeHint / 1.4;\r\n        return distributeTicks(max, count + 1, scale, (v) => Math.ceil(toStr(v).length * widthPerChar));\r\n    };\r\n    scale.tickFormat = () => toStr;\r\n    return scale;\r\n};\n\nfunction compressIndicesArray(arr) {\r\n    if (arr.length === 0) {\r\n        return '';\r\n    }\r\n    const encoded = [];\r\n    let startIndex = 0;\r\n    const push = (i) => {\r\n        if (i === startIndex + 1) {\r\n            encoded.push(arr[startIndex].toString());\r\n        }\r\n        else if (i === startIndex + 2 && i < 10) {\r\n            encoded.push(`${arr[startIndex]},${arr[startIndex + 1]}`);\r\n        }\r\n        else {\r\n            encoded.push(`${arr[startIndex]}+${i - startIndex - 1}`);\r\n        }\r\n        return i;\r\n    };\r\n    for (let i = 1; i < arr.length; i++) {\r\n        const expected = arr[i - 1] + 1;\r\n        const v = arr[i];\r\n        if (v !== expected) {\r\n            startIndex = push(i);\r\n            startIndex = i;\r\n        }\r\n    }\r\n    push(arr.length);\r\n    return encoded.join(',');\r\n}\r\nfunction toIndicesArray(arr, toIndex, { sortAble, compress = 'auto' } = {}) {\r\n    if (arr.length === 0) {\r\n        return [];\r\n    }\r\n    const base = arr.map((v) => toIndex(v));\r\n    if (compress === 'no') {\r\n        return base;\r\n    }\r\n    if (sortAble) {\r\n        base.sort((a, b) => a - b);\r\n    }\r\n    const encoded = compressIndicesArray(base);\r\n    const baseLength = JSON.stringify(base).length;\r\n    const encodedLength = encoded.length + 2;\r\n    if (encodedLength < baseLength * 0.6 ||\r\n        baseLength - encodedLength > 50 ||\r\n        (compress === 'yes' && encodedLength < baseLength)) {\r\n        return encoded;\r\n    }\r\n    return base;\r\n}\r\nfunction fromIndicesArray(indices, elements) {\r\n    if (typeof indices === 'string') {\r\n        if (indices.length === 0) {\r\n            return [];\r\n        }\r\n        return indices\r\n            .split(',')\r\n            .map((s) => {\r\n            if (s.includes('+')) {\r\n                const [start, length] = s.split('+').map((si) => Number.parseInt(si, 10));\r\n                return elements.slice(start, start + length + 1);\r\n            }\r\n            return elements[Number.parseInt(s, 10)];\r\n        })\r\n            .flat();\r\n    }\r\n    return indices.map((i) => elements[i]);\r\n}\n\nfunction withColor(v, s) {\r\n    if (s.color) {\r\n        v.color = s.color;\r\n    }\r\n    return v;\r\n}\n\nfunction fromDump(dump, elems, options = {}) {\r\n    const sets = dump.sets.map((set) => asSet(Object.assign(Object.assign({}, set), { elems: fromIndicesArray(set.elems, elems) })));\r\n    const gen = () => {\r\n        var _a;\r\n        return generateCombinations(sets, Object.assign({ type: 'intersection', elems, toElemKey: options.toElemKey }, (_a = dump.combinationOptions) !== null && _a !== void 0 ? _a : {}));\r\n    };\r\n    const combinations = dump.combinations\r\n        ? dump.combinations.map((c) => asCombination(Object.assign(Object.assign({}, c), { elems: fromIndicesArray(c.elems, elems) }), c.type, (v) => v.sets.map((i) => sets[i])))\r\n        : gen();\r\n    function fromSetRef(ref) {\r\n        if (ref.type === 'set') {\r\n            return sets[ref.index];\r\n        }\r\n        return combinations[ref.index];\r\n    }\r\n    return {\r\n        sets,\r\n        combinations,\r\n        selection: dump.selection\r\n            ? typeof dump.selection === 'string' || Array.isArray(dump.selection)\r\n                ? fromIndicesArray(dump.selection, elems)\r\n                : fromSetRef(dump.selection)\r\n            : undefined,\r\n        queries: dump.queries.map((query) => {\r\n            if (query.set) {\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: fromSetRef(query.set),\r\n                };\r\n            }\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                elems: fromIndicesArray(query.elems, elems),\r\n            };\r\n        }),\r\n    };\r\n}\r\nfunction toDump(data, config = {}) {\r\n    var _a;\r\n    const indicesOptions = Object.assign({ sortAble: true }, config);\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    const bySetKey = new Map(data.sets.map((s, i) => [toKey$1(s), i]));\r\n    const byCombinationKey = new Map(data.combinations.map((s, i) => [toKey$1(s), i]));\r\n    const toSetRef = (s) => {\r\n        if (s.type === 'set') {\r\n            return {\r\n                type: s.type,\r\n                index: bySetKey.get(toKey$1(s)),\r\n            };\r\n        }\r\n        const index = byCombinationKey.get(toKey$1(s));\r\n        if (index == null || index < 0) {\r\n            return toIndicesArray(s.elems, data.toElemIndex, indicesOptions);\r\n        }\r\n        return {\r\n            type: s.type,\r\n            index,\r\n        };\r\n    };\r\n    const setLookup = data.sets.map((s, i) => ({\r\n        key: toKey$1(s),\r\n        i,\r\n    }));\r\n    return {\r\n        sets: data.sets.map((set) => withColor({\r\n            name: set.name,\r\n            cardinality: set.cardinality,\r\n            elems: toIndicesArray(set.elems, data.toElemIndex, indicesOptions),\r\n        }, set)),\r\n        combinations: config.compress === 'no'\r\n            ? data.combinations.map((c) => {\r\n                const setKeys = new Set(Array.from(c.sets).map(toKey$1));\r\n                return withColor({\r\n                    name: c.name,\r\n                    type: c.type,\r\n                    cardinality: c.cardinality,\r\n                    degree: c.degree,\r\n                    sets: setLookup.filter(({ key }) => setKeys.has(key)).map(({ i }) => i),\r\n                    elems: toIndicesArray(c.elems, data.toElemIndex, indicesOptions),\r\n                }, c);\r\n            })\r\n            : undefined,\r\n        combinationOptions: data.combinationOptions,\r\n        selection: data.selection\r\n            ? Array.isArray(data.selection)\r\n                ? toIndicesArray(data.selection, data.toElemIndex, indicesOptions)\r\n                : toSetRef(data.selection)\r\n            : undefined,\r\n        queries: data.queries.map((query) => {\r\n            const elems = isSetQuery(query)\r\n                ? toSetRef(query.set)\r\n                : toIndicesArray(Array.from(query.elems), data.toElemIndex, indicesOptions);\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                set: typeof elems === 'string' || Array.isArray(elems) ? undefined : elems,\r\n                elems: typeof elems === 'string' || Array.isArray(elems) ? elems : undefined,\r\n            };\r\n        }),\r\n    };\r\n}\n\nfunction generateName(sets, type) {\r\n    if (sets.length === 1) {\r\n        return sets[0].name;\r\n    }\r\n    return `(${sets.map((set) => set.name).join(SET_JOINERS[type])})`;\r\n}\r\nfunction toStaticDump(data, config = {}) {\r\n    var _a;\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    const bySetKey = new Map(data.sets.map((s, i) => [toKey$1(s), i]));\r\n    const byCombinationKey = new Map(data.combinations.map((s, i) => [toKey$1(s), i]));\r\n    const toSelectionSetRef = (s) => {\r\n        if (isSetLike(s)) {\r\n            if (s.type === 'set') {\r\n                return {\r\n                    type: s.type,\r\n                    index: bySetKey.get(toKey$1(s)),\r\n                };\r\n            }\r\n            const index = byCombinationKey.get(toKey$1(s));\r\n            if (index != null && index >= 0) {\r\n                return {\r\n                    type: s.type,\r\n                    index,\r\n                };\r\n            }\r\n        }\r\n        const overlapF = setOverlapFactory(isSetLike(s) ? s.elems : s);\r\n        return data.sets\r\n            .map((set) => overlapF(set.elems).intersection)\r\n            .concat(data.combinations.map((set) => overlapF(set.elems).intersection));\r\n    };\r\n    const setIndex = new Map(data.sets.map((set, i) => [toKey$1(set), i]));\r\n    const overlaps = generateOverlapLookup(data.sets, data.combinations, config);\r\n    const shortNames = config.compress === 'yes';\r\n    const compressCombination = (set) => {\r\n        const partOf = Array.from(set.sets)\r\n            .map((s) => setIndex.get(toKey$1(s)))\r\n            .sort((a, b) => a - b);\r\n        const r = {\r\n            c: set.cardinality,\r\n            s: partOf.reduce((acc, i) => acc + Math.pow(2, i), 0),\r\n        };\r\n        if (set.name !==\r\n            generateName(partOf.map((i) => data.sets[i]), set.type)) {\r\n            r.n = set.name;\r\n        }\r\n        if (set.type !== 'intersection') {\r\n            r.type = set.type[0];\r\n        }\r\n        if (set.color) {\r\n            r.cc = set.color;\r\n        }\r\n        return r;\r\n    };\r\n    return {\r\n        sets: shortNames\r\n            ? data.sets.map((set) => ({ n: set.name, cc: set.color, c: set.cardinality }))\r\n            : data.sets.map((set) => withColor({ name: set.name, cardinality: set.cardinality }, set)),\r\n        combinations: shortNames\r\n            ? data.combinations.map(compressCombination)\r\n            : data.combinations.map((set) => withColor({\r\n                name: set.name,\r\n                cardinality: set.cardinality,\r\n                type: set.type,\r\n                sets: Array.from(set.sets)\r\n                    .map((s) => setIndex.get(toKey$1(s)))\r\n                    .sort((a, b) => a - b),\r\n            }, set)),\r\n        overlaps,\r\n        selection: data.selection ? toSelectionSetRef(data.selection) : undefined,\r\n        queries: data.queries.map((query) => {\r\n            if (isSetQuery(query)) {\r\n                const ref = toSelectionSetRef(query.set);\r\n                if (Array.isArray(ref)) {\r\n                    return {\r\n                        name: query.name,\r\n                        color: query.color,\r\n                        overlaps: ref,\r\n                    };\r\n                }\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: ref,\r\n                };\r\n            }\r\n            const overlapF = setOverlapFactory(query.elems);\r\n            const overlaps = data.sets\r\n                .map((set) => overlapF(set.elems).intersection)\r\n                .concat(data.combinations.map((set) => overlapF(set.elems).intersection));\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                overlaps,\r\n            };\r\n        }),\r\n    };\r\n}\r\nfunction isCompressed(s) {\r\n    return typeof s.c === 'number';\r\n}\r\nfunction isCompressedSet(s) {\r\n    return typeof s.c === 'number';\r\n}\r\nfunction fromStaticDump(dump, config = {}) {\r\n    var _a;\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    let computeF = () => 0;\r\n    function withOverlap(s) {\r\n        s.overlap = (b) => computeF(s, b);\r\n        return s;\r\n    }\r\n    const sets = dump.sets.map((set) => withOverlap({\r\n        name: isCompressedSet(set) ? set.n : set.name,\r\n        cardinality: isCompressedSet(set) ? set.c : set.cardinality,\r\n        type: 'set',\r\n        elems: [],\r\n    }));\r\n    const fromBit = (v) => {\r\n        return sets.filter((_, i) => {\r\n            const position = Math.pow(2, i);\r\n            return (v & position) === position;\r\n        });\r\n    };\r\n    const combinations = dump.combinations.map((set) => {\r\n        var _a, _b;\r\n        const partOf = isCompressed(set) ? fromBit(set.s) : set.sets.map((i) => sets[i]);\r\n        const lookup = {\r\n            i: 'intersection',\r\n            u: 'union',\r\n            c: 'composite',\r\n            d: 'distinctIntersection',\r\n        };\r\n        const type = lookup[((_a = set.type) !== null && _a !== void 0 ? _a : 'i')[0]];\r\n        return withOverlap({\r\n            name: isCompressed(set) ? (_b = set.n) !== null && _b !== void 0 ? _b : generateName(partOf, type) : set.name,\r\n            cardinality: isCompressed(set) ? set.c : set.cardinality,\r\n            type,\r\n            degree: partOf.length,\r\n            sets: new Set(partOf),\r\n            elems: [],\r\n        });\r\n    });\r\n    const { setIndex, combinationIndex, compute } = generateOverlapLookupFunction(dump.overlaps, sets, combinations, toKey$1);\r\n    computeF = compute;\r\n    function fromSetRef(ref) {\r\n        if (ref.type === 'set') {\r\n            return sets[ref.index];\r\n        }\r\n        return combinations[ref.index];\r\n    }\r\n    function generateOverlap(lookup) {\r\n        return (v) => {\r\n            const key = toKey$1(v);\r\n            const index = setIndex.has(key) ? setIndex.get(key) : combinationIndex.get(key);\r\n            return index == null || index < 0 || index >= lookup.length ? 0 : lookup[index];\r\n        };\r\n    }\r\n    return {\r\n        sets,\r\n        combinations,\r\n        selection: dump.selection\r\n            ? Array.isArray(dump.selection)\r\n                ? generateOverlap(dump.selection)\r\n                : fromSetRef(dump.selection)\r\n            : undefined,\r\n        queries: dump.queries.map((query) => {\r\n            if (query.set) {\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: fromSetRef(query.set),\r\n                };\r\n            }\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                overlap: generateOverlap(query.overlaps),\r\n            };\r\n        }),\r\n    };\r\n}\n\nexport { SET_JOINERS, asCombination, asCombinations, asSet, asSets, bandScale, extractCombinations, extractFromExpression, extractSets, fromDump, fromIndicesArray, fromSetName, fromStaticDump, generateCombinations, generateDistinctOverlapFunction, generateIntersectionOverlapFunction, generateOverlapFunction, generateOverlapLookup, generateOverlapLookupFunction, generateUnionOverlapFunction, isCalcQuery, isElemQuery, isGenerateSetCombinationOptions, isSet, isSetCombination, isSetLike, isSetQuery, isUpSetQuery, linearScale, logScale, mergeColors, parseColor, queryElemOverlap, queryOverlap, setElemIntersectionFactory, setElemOverlap, setElemOverlapFactory, setOverlap, setOverlapFactory, toDump, toIndicesArray, toKey, toStaticDump };\n//# sourceMappingURL=index.js.map\n","/**\n * @upsetjs/react\n * https://github.com/upsetjs/upsetjs\n *\n * Copyright (c) 2022 Samuel Gratzl <sam@sgratzl.com>\n */\n\nimport React, { useRef, useState, useLayoutEffect, useMemo, useCallback } from 'react';\nimport { toKey, toDump, isElemQuery, isSetQuery, isSetLike as isSetLike$1, toStaticDump, setElemOverlapFactory, setOverlapFactory, generateCombinations, generateOverlapFunction, bandScale as bandScale$1, linearScale, logScale, queryOverlap, queryElemOverlap, generateDistinctOverlapFunction, isSet, isSetCombination, isGenerateSetCombinationOptions, isUpSetQuery } from '@upsetjs/model';\nexport * from '@upsetjs/model';\nimport LZString from 'lz-string';\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction extractStyleId(node) {\r\n    return Array.from(node.classList)\r\n        .find((d) => d.startsWith('root-'))\r\n        .slice('root-'.length);\r\n}\r\nfunction extractTitle(node, styleId) {\r\n    var _a, _b;\r\n    return (_b = (_a = node.querySelector(`titleTextStyle-${styleId}`)) === null || _a === void 0 ? void 0 : _a.textContent) !== null && _b !== void 0 ? _b : 'UpSetJS';\r\n}\r\nfunction extractDescription(node, styleId) {\r\n    var _a, _b;\r\n    return (_b = (_a = node.querySelector(`descTextStyle-${styleId}`)) === null || _a === void 0 ? void 0 : _a.textContent) !== null && _b !== void 0 ? _b : '';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_OBJECT = {};\r\nconst EMPTY_ARRAY$2 = [];\r\nconst DEFAULT_FONT_SIZES = {\r\n    setLabel: '16px',\r\n    axisTick: '10px',\r\n    chartLabel: '16px',\r\n    barLabel: '10px',\r\n    legend: '10px',\r\n    description: '16px',\r\n    title: '24px',\r\n    valueLabel: '12px',\r\n    exportLabel: '10px',\r\n};\r\nconst DEFAULT_WIDTH_RATIO = [0.18, 0.12, 0.7];\r\nconst DEFAULT_HEIGHT_RATIO = [0.6, 0.4];\r\nconst DEFAULT_COMBINATIONS = {\r\n    type: 'intersection',\r\n    order: ['cardinality:desc', 'name:asc'],\r\n};\r\nconst FONT_SIZES_KEYS = /* #__PURE__ */ Object.keys(DEFAULT_FONT_SIZES);\r\nconst MULTI_STYLE_KEYS = [\r\n    'axisTick',\r\n    'bar',\r\n    'barLabel',\r\n    'chartLabel',\r\n    'dot',\r\n    'legend',\r\n    'title',\r\n    'description',\r\n    'setLabel',\r\n    'set',\r\n    'valueLabel',\r\n];\r\nconst EXPORT_OPTION_KEYS = ['dump', 'png', 'share', 'svg', 'vega'];\r\nconst OVERFLOW_OPACITY_FACTOR = [0.7, 0.4];\r\nconst OVERFLOW_PADDING_FACTOR = [0.15, 0.3];\n\nvar sets$6 = [\n];\nvar intersections$5 = [\n];\nvar bb$5 = {\n\tx: 0,\n\ty: 0,\n\twidth: 10,\n\theight: 10\n};\nvar venn0 = {\n\tsets: sets$6,\n\tintersections: intersections$5,\n\tbb: bb$5\n};\n\nvar sets$5 = [\n\t{\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 3.5,\n\t\t\ty: -4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$4 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: 5,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$4 = {\n\tx: -5,\n\ty: -5,\n\twidth: 10,\n\theight: 10\n};\nvar venn1 = {\n\tsets: sets$5,\n\tintersections: intersections$4,\n\tbb: bb$4\n};\n\nvar sets$4 = [\n\t{\n\t\tcx: -4,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: -7.5,\n\t\t\ty: 4\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: 4,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 7.5,\n\t\t\ty: -4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$3 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: 0\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: 3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 0\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: 3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$3 = {\n\tx: -9,\n\ty: -5,\n\twidth: 18,\n\theight: 10\n};\nvar venn2 = {\n\tsets: sets$4,\n\tintersections: intersections$3,\n\tbb: bb$3\n};\n\nvar sets$3 = [\n\t{\n\t\tcx: -3.464,\n\t\tcy: -2,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: -7,\n\t\t\ty: -6\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 3.464,\n\t\tcy: -2,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 7,\n\t\t\ty: -6\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 0,\n\t\tcy: 4,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 7.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t}\n];\nvar intersections$2 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4.216,\n\t\t\ty: -2.434\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: -5.606,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4.216,\n\t\t\ty: -2.434\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 4.869\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: -5.606,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: -2.404\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.082,\n\t\t\ty: 1.202\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.082,\n\t\t\ty: 1.202\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 1.39,\n\t\ty1: -0.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$2 = {\n\tx: -8.464,\n\ty: -7,\n\twidth: 16.928,\n\theight: 16\n};\nvar venn3 = {\n\tsets: sets$3,\n\tintersections: intersections$2,\n\tbb: bb$2\n};\n\nvar sets$2 = [\n\t{\n\t\tcx: 0.439,\n\t\tcy: -1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 45,\n\t\ttext: {\n\t\t\tx: 4.5,\n\t\t\ty: -4.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 2.561,\n\t\tcy: 1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 45,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 3.75\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: -2.561,\n\t\tcy: 1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: -45,\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: 3.7\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: -0.439,\n\t\tcy: -1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: -45,\n\t\ttext: {\n\t\t\tx: -4.5,\n\t\t\ty: -4.5\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$1 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3.94,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.914,\n\t\t\ty: -3.536\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 5.036,\n\t\t\ty: -1.414\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: 0,\n\t\ty1: 5.006,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -5.036,\n\t\t\ty: -1.414\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3\n\t\t],\n\t\tx1: -4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.914,\n\t\t\ty: -3.536\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 3.205,\n\t\t\ty: -1.672\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: -1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.212,\n\t\t\ty: 1.591\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3.94,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: -1.87\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 3.393\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 3.108,\n\t\ty1: -0.328,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.212,\n\t\t\ty: 1.591\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -3.108,\n\t\ty1: -0.328,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.205,\n\t\t\ty: -1.672\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 0,\n\t\ty1: 2.346,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.766,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 2.179,\n\t\ty1: -1.858,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.558,\n\t\t\ty: -0.056\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -0.969,\n\t\ty1: 1.755,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.558,\n\t\t\ty: -0.056\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.766,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0,\n\t\ty1: 0.188,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 1.43\n\t\t}\n\t}\n];\nvar bb$1 = {\n\tx: -6.5,\n\ty: -5,\n\twidth: 13,\n\theight: 10\n};\nvar venn4 = {\n\tsets: sets$2,\n\tintersections: intersections$1,\n\tbb: bb$1\n};\n\nvar sets$1 = [\n\t{\n\t\tcx: 0.5,\n\t\tcy: -1,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 0,\n\t\ttext: {\n\t\t\tx: 2.25,\n\t\t\ty: -5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 1.106,\n\t\tcy: 0.167,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 72,\n\t\ttext: {\n\t\t\tx: 4.5,\n\t\t\ty: 1.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: 0.183,\n\t\tcy: 1.103,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 144,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: -0.992,\n\t\tcy: 0.515,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 216,\n\t\ttext: {\n\t\t\tx: -4.7,\n\t\t\ty: 2\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: -0.797,\n\t\tcy: -0.785,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 288,\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: -3.6\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: -1.653,\n\t\ty1: -3.541,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.5,\n\t\t\ty: -5\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 2.857,\n\t\ty1: -2.666,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4.91,\n\t\t\ty: -1.07\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: 3.419,\n\t\ty1: 1.893,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.534,\n\t\t\ty: 4.339\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3\n\t\t],\n\t\tx1: -0.744,\n\t\ty1: 3.837,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.343,\n\t\t\ty: 3.751\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t4\n\t\t],\n\t\tx1: -3.879,\n\t\ty1: 0.478,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4.601,\n\t\t\ty: -2.021\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 2.5,\n\t\ty1: -2.648,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.741,\n\t\t\ty: -2.152\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: 2.342,\n\t\ty1: 2.381,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.5,\n\t\t\ty: 3.5\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3\n\t\t],\n\t\tx1: -0.495,\n\t\ty1: -3.303,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.653,\n\t\t\ty: -3.125\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t4\n\t\t],\n\t\tx1: -1.653,\n\t\ty1: -3.541,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.199,\n\t\t\ty: -3.272\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 3.291,\n\t\ty1: 1.559,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.894,\n\t\t\ty: 1.942\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: -1.54,\n\t\ty1: 2.963,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.174,\n\t\t\ty: 1.557\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t4\n\t\t],\n\t\tx1: 2.988,\n\t\ty1: -1.492,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 3.483,\n\t\t\ty: 0.606\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -0.466,\n\t\ty1: 3.612,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.953,\n\t\t\ty: 3.352\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: -3.294,\n\t\ty1: -0.549,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tsweep: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.462,\n\t\t\ty: -2.538\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -3.579,\n\t\ty1: 0.673,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.483,\n\t\t\ty: 0.13\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 2.544,\n\t\ty1: 1.878,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.457,\n\t\t\ty: 2.331\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 1.51,\n\t\ty1: -2.515,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.194,\n\t\t\ty: -2.334\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t4\n\t\t],\n\t\tx1: 2.572,\n\t\ty1: -1.839,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.667,\n\t\t\ty: -0.665\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0.257,\n\t\ty1: 2.922,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.403,\n\t\t\ty: 3.178\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: -1.746,\n\t\ty1: -3.196,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.542,\n\t\t\ty: -2.808\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -0.495,\n\t\ty1: -3.303,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.192,\n\t\t\ty: -2.742\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -1.54,\n\t\ty1: 2.963,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.767,\n\t\t\ty: 2.106\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: 2.858,\n\t\ty1: 0.659,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.898,\n\t\t\ty: 1.365\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -2.7,\n\t\ty1: 1.147,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.147,\n\t\t\ty: 0.599\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -3.294,\n\t\ty1: -0.549,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.548,\n\t\t\ty: -1.029\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0.983,\n\t\ty1: 2.049,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.407,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: 2.253,\n\t\ty1: -0.302,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.071,\n\t\t\ty: 1.101\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: 1.51,\n\t\ty1: -2.515,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.687,\n\t\t\ty: -1.63\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -2,\n\t\ty1: -1.08,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.028,\n\t\t\ty: -2.108\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -1.645,\n\t\ty1: 1.568,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.323,\n\t\t\ty: 0.327\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: 0.409,\n\t\ty1: -2.236,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tsweep: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb = {\n\tx: -5.5,\n\ty: -6,\n\twidth: 11.6,\n\theight: 11.8\n};\nvar venn5 = {\n\tsets: sets$1,\n\tintersections: intersections,\n\tbb: bb\n};\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction isEllipse(d) {\r\n    return typeof d.rx === 'number';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst vennDiagramLayout = {\r\n    maxSets: 5,\r\n    compute(sets, _combinations, width, height) {\r\n        return layoutImpl(sets.length, width, height);\r\n    },\r\n};\r\nfunction layoutImpl(sets, width, height) {\r\n    const lookup = [venn0, venn1, venn2, venn3, venn4, venn5];\r\n    const r = lookup[Math.min(lookup.length - 1, sets)];\r\n    const f = Math.min(width / r.bb.width, height / r.bb.height);\r\n    const x = f * -r.bb.x + (width - f * r.bb.width) / 2;\r\n    const y = f * -r.bb.y + (height - f * r.bb.height) / 2;\r\n    const mx = (v) => x + f * v;\r\n    const my = (v) => y + f * v;\r\n    return {\r\n        sets: r.sets.map((c) => Object.assign({}, c, {\r\n            cx: mx(c.cx),\r\n            cy: my(c.cy),\r\n            text: {\r\n                x: mx(c.text.x),\r\n                y: my(c.text.y),\r\n            },\r\n        }, isEllipse(c)\r\n            ? {\r\n                rx: c.rx * f,\r\n                ry: c.ry * f,\r\n            }\r\n            : {\r\n                r: c.r * f,\r\n            })),\r\n        intersections: r.intersections.map((c) => ({\r\n            text: {\r\n                x: mx(c.text.x),\r\n                y: my(c.text.y),\r\n            },\r\n            x1: mx(c.x1),\r\n            y1: my(c.y1),\r\n            sets: c.sets,\r\n            arcs: c.arcs.map((a) => Object.assign({}, a, {\r\n                x2: mx(a.x2),\r\n                y2: my(a.y2),\r\n            })),\r\n        })),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst lightTheme = {\r\n    selectionColor: '#ffa500',\r\n    color: '#000000',\r\n    hasSelectionColor: '',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#000000',\r\n    hoverHintColor: '#cccccc',\r\n    notMemberColor: '#d3d3d3',\r\n    alternatingBackgroundColor: 'rgba(0,0,0,0.05)',\r\n    valueTextColor: '#000000',\r\n    strokeColor: '#000000',\r\n    backgroundColor: '#ffffff',\r\n    filled: false,\r\n};\r\nconst darkTheme = {\r\n    selectionColor: '#ffa500',\r\n    color: '#cccccc',\r\n    hasSelectionColor: '',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#ffffff',\r\n    hoverHintColor: '#d9d9d9',\r\n    notMemberColor: '#666666',\r\n    alternatingBackgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    valueTextColor: '#ffffff',\r\n    strokeColor: '#ffffff',\r\n    backgroundColor: '#303030',\r\n    filled: false,\r\n};\r\nconst vegaTheme = {\r\n    selectionColor: '#4c78a8',\r\n    color: '#4c78a8',\r\n    hasSelectionColor: '#c9d6e5',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#000000',\r\n    hoverHintColor: '#cccccc',\r\n    notMemberColor: '#d3d3d3',\r\n    alternatingBackgroundColor: 'rgba(0,0,0,0.05)',\r\n    valueTextColor: '#000000',\r\n    strokeColor: '#000000',\r\n    backgroundColor: '#ffffff',\r\n    filled: true,\r\n};\r\nfunction getDefaultTheme(theme) {\r\n    return theme === 'vega' ? vegaTheme : theme === 'dark' ? darkTheme : lightTheme;\r\n}\r\nfunction areCombinations$1(combinations) {\r\n    return Array.isArray(combinations);\r\n}\r\nfunction styleFactory(rules) {\r\n    return React.createElement(\"style\", null, rules);\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction fillGeneric(base, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nprops, others = {}) {\r\n    const theme = getDefaultTheme(props.theme);\r\n    return Object.assign(base, {\r\n        queryLegend: props.queries != null && props.queries.length > 0,\r\n        theme: 'light',\r\n        padding: 20,\r\n        selection: null,\r\n        title: '',\r\n        description: '',\r\n        fontFamily: 'sans-serif',\r\n        queries: EMPTY_ARRAY$2,\r\n        exportButtons: true,\r\n        className: '',\r\n        fontSizes: DEFAULT_FONT_SIZES,\r\n        classNames: EMPTY_OBJECT,\r\n        style: EMPTY_OBJECT,\r\n        styles: EMPTY_OBJECT,\r\n        toKey,\r\n        tooltips: true,\r\n        styleFactory,\r\n    }, theme, props, others, props.fontSizes\r\n        ? {\r\n            fontSizes: Object.assign({}, DEFAULT_FONT_SIZES, props.fontSizes),\r\n        }\r\n        : EMPTY_OBJECT);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillDefaultsG(props) {\r\n    return fillGeneric({\r\n        barPadding: 0.3,\r\n        dotPadding: 0.7,\r\n        combinations: DEFAULT_COMBINATIONS,\r\n        combinationName: props.combinations != null && !areCombinations$1(props.combinations) && props.combinations.type === 'union'\r\n            ? 'Union Size'\r\n            : 'Intersection Size',\r\n        barLabelOffset: 2,\r\n        setNameAxisOffset: 'auto',\r\n        combinationNameAxisOffset: 'auto',\r\n        setName: 'Set Size',\r\n        widthRatios: DEFAULT_WIDTH_RATIO,\r\n        heightRatios: DEFAULT_HEIGHT_RATIO,\r\n        setLabelAlignment: 'center',\r\n        numericScale: 'linear',\r\n        bandScale: 'band',\r\n        childrenFactories: EMPTY_OBJECT,\r\n        setAddons: EMPTY_ARRAY$2,\r\n        combinationAddons: EMPTY_ARRAY$2,\r\n        setAddonPadding: 1,\r\n        combinationAddonPadding: 1,\r\n        emptySelection: true,\r\n    }, props);\r\n}\r\nfunction valueFormat(v) {\r\n    return v.toLocaleString();\r\n}\r\nfunction fillDefaults(props) {\r\n    return fillDefaultsG(props);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillVennDiagramDefaultsG(props) {\r\n    return fillGeneric({\r\n        valueFormat,\r\n        layout: vennDiagramLayout,\r\n        setLabelOffsets: EMPTY_ARRAY$2,\r\n    }, props, {\r\n        exportButtons: props.exportButtons === false\r\n            ? false\r\n            : Object.assign({}, props.exportButtons === true ? {} : props.exportButtons, { vega: false }),\r\n    });\r\n}\r\nfunction fillVennDiagramDefaults(props) {\r\n    return fillVennDiagramDefaultsG(props);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillKarnaughMapDefaultsG(props) {\r\n    return fillGeneric({\r\n        numericScale: 'linear',\r\n        barPadding: 0.3,\r\n        barLabelOffset: 2,\r\n        combinationName: 'Intersection Size',\r\n        combinationNameAxisOffset: 'auto',\r\n    }, props, {\r\n        exportButtons: props.exportButtons === false\r\n            ? false\r\n            : Object.assign({}, props.exportButtons === true ? {} : props.exportButtons, { vega: false }),\r\n    });\r\n}\r\nfunction fillKarnaughMapDefaults(props) {\r\n    return fillKarnaughMapDefaultsG(props);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction createSVG(node, toRemove) {\r\n    const clone = node.cloneNode(true);\r\n    clone.style.backgroundColor = getDefaultTheme(node.dataset.theme).backgroundColor;\r\n    if (toRemove) {\r\n        Array.from(clone.querySelectorAll(toRemove)).forEach((d) => d.remove());\r\n    }\r\n    return new XMLSerializer().serializeToString(clone);\r\n}\r\n/**\r\n * helper method to export an download an SVG image\r\n * @param node the SVG element to download\r\n * @param options additional options\r\n */\r\nfunction exportSVG(node, { type = 'png', title, toRemove }) {\r\n    const b = new Blob([createSVG(node, toRemove)], {\r\n        type: 'image/svg+xml;charset=utf-8',\r\n    });\r\n    const styleId = extractStyleId(node);\r\n    const chartTitle = title !== null && title !== void 0 ? title : extractTitle(node, styleId);\r\n    const url = URL.createObjectURL(b);\r\n    if (type === 'svg') {\r\n        downloadUrl(url, `${chartTitle}.${type}`, node.ownerDocument);\r\n        URL.revokeObjectURL(url);\r\n        return Promise.resolve();\r\n    }\r\n    return toPNG(url, node).then((purl) => {\r\n        downloadUrl(purl, `${chartTitle}.${type}`, node.ownerDocument);\r\n        URL.revokeObjectURL(url);\r\n    });\r\n}\r\nfunction toPNG(url, node) {\r\n    const canvas = node.ownerDocument.createElement('canvas');\r\n    const bb = node.getBoundingClientRect();\r\n    canvas.width = bb.width;\r\n    canvas.height = bb.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image(canvas.width, canvas.height);\r\n    return new Promise((resolve) => {\r\n        img.onload = () => {\r\n            ctx.drawImage(img, 0, 0);\r\n            const png = canvas.toDataURL('image/png');\r\n            resolve(png);\r\n        };\r\n        img.src = url;\r\n    });\r\n}\r\n/**\r\n * helper method to download a given url in the browser\r\n * @param url the url to download\r\n * @param title the desired file name\r\n * @param doc the root document\r\n */\r\nfunction downloadUrl(url, title, doc) {\r\n    const a = doc.createElement('a');\r\n    a.href = url;\r\n    a.style.position = 'absolute';\r\n    a.style.left = '-10000px';\r\n    a.style.top = '-10000px';\r\n    a.download = title;\r\n    doc.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction createVegaSpec(svg, title) {\r\n    var _a, _b, _c, _d, _e;\r\n    const resolveStyle = (_c = (svg.getComputedStyle || ((_b = (_a = svg.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.getComputedStyle))) !== null && _c !== void 0 ? _c : window.getComputedStyle;\r\n    const styleId = extractStyleId(svg);\r\n    const chartTitle = title !== null && title !== void 0 ? title : extractTitle(svg, styleId);\r\n    const sets = Array.from(svg.querySelectorAll('[data-upset=sets] [data-cardinality]'))\r\n        .map((set) => {\r\n        return {\r\n            name: set.querySelector(`text.setTextStyle-${styleId}`).textContent,\r\n            cardinality: Number.parseInt(set.dataset.cardinality, 10),\r\n        };\r\n    })\r\n        .reverse();\r\n    const barLabelOffset = -Number.parseFloat(svg.querySelector(`.sBarTextStyle-${styleId}`).getAttribute('dx'));\r\n    const color = resolveStyle(svg.querySelector(`.fillPrimary-${styleId}`)).fill;\r\n    const fillNotMember = resolveStyle(svg.querySelector(`.fillNotMember-${styleId}`)).fill;\r\n    const textColor = resolveStyle(svg.querySelector('text')).fill;\r\n    const csName = svg.querySelector(`.cChartTextStyle-${styleId}`).textContent;\r\n    const setName = svg.querySelector(`.sChartTextStyle-${styleId}`).textContent;\r\n    const combinations = Array.from(svg.querySelectorAll('[data-upset=cs] [data-cardinality]')).map((set) => {\r\n        return {\r\n            name: set.querySelector(`text.hoverBarTextStyle-${styleId}`).textContent,\r\n            cardinality: Number.parseInt(set.dataset.cardinality, 10),\r\n            sets: Array.from(set.querySelectorAll(`.fillPrimary-${styleId} > title`)).map((n) => n.textContent),\r\n        };\r\n    });\r\n    const translateX = (v) => Number.parseFloat(v.getAttribute('transform').match(/([\\d.]+),/)[1]);\r\n    const translateY = (v) => Number.parseFloat(v.getAttribute('transform').match(/,([\\d.]+)/)[1]);\r\n    const base = svg.querySelector('[data-upset=base]');\r\n    const padding = translateX(base);\r\n    // combination axis block\r\n    const setWidth = translateX(svg.querySelector('[data-upset=csaxis]'));\r\n    // axisline\r\n    const csWidth = Number.parseFloat(base.querySelector('g').firstElementChild.children[1].getAttribute('x2'));\r\n    // set axis block\r\n    const csHeight = translateY(svg.querySelector('[data-upset=setaxis]'));\r\n    // set label clip path\r\n    const labelWidth = Number.parseFloat(svg.querySelector('defs rect').getAttribute('width'));\r\n    const setHeight = Number.parseFloat(svg.querySelector('defs rect').getAttribute('height'));\r\n    const radius = Number.parseFloat(svg.querySelector(`[data-cardinality] circle.fillPrimary-${styleId}`).getAttribute('r'));\r\n    const hasPrimarySelection = svg.querySelector('[data-upset=sets-s] [data-cardinality]') != null;\r\n    const hasQuery = svg.querySelector('[data-upset=sets-q] [data-cardinality]') != null;\r\n    const hasSelection = hasPrimarySelection || hasQuery;\r\n    let selectionColor = 'orange';\r\n    if (hasSelection) {\r\n        // inject the selection data\r\n        Array.from(svg.querySelectorAll(`[data-upset=sets-${hasPrimarySelection ? 's]' : 'q]:first-of-type'} [data-cardinality]`)).forEach((elem) => {\r\n            // since artificially reversed\r\n            const i = sets.length - Number.parseInt(elem.dataset.i, 10) - 1;\r\n            sets[i].selection = Number.parseInt(elem.dataset.cardinality, 10);\r\n        });\r\n        Array.from(svg.querySelectorAll(`[data-upset=cs-${hasPrimarySelection ? 's]' : 'q]:first-of-type'} [data-cardinality]`)).forEach((elem) => {\r\n            const i = Number.parseInt(elem.dataset.i, 10);\r\n            combinations[i].selection = Number.parseInt(elem.dataset.cardinality, 10);\r\n        });\r\n        selectionColor = resolveStyle(svg.querySelector(`[data-upset=sets-${hasPrimarySelection ? 's' : 'q'}] [data-cardinality]`)).fill;\r\n    }\r\n    const highlightedCombination = Number.parseInt((_e = (_d = svg.querySelector('[data-upset=cs-ss]')) === null || _d === void 0 ? void 0 : _d.dataset.i) !== null && _e !== void 0 ? _e : '-1', 10);\r\n    const filter = highlightedCombination >= 0\r\n        ? {\r\n            field: 'partOf',\r\n            oneOf: [1, 2],\r\n        }\r\n        : {\r\n            field: 'partOf',\r\n            equal: 1,\r\n        };\r\n    // part of: 0 ... negative list, 1 ... positive set list, 2, ... positive and selected\r\n    return {\r\n        $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\r\n        title: chartTitle,\r\n        description: extractDescription(svg, styleId),\r\n        datasets: {\r\n            sets,\r\n            combinations: combinations\r\n                .map((c, i) => Object.assign({}, c, {\r\n                partOf: highlightedCombination === i ? 2 : 1,\r\n                nsets: [''],\r\n            }))\r\n                .concat(combinations.map((c) => ({\r\n                name: c.name,\r\n                cardinality: c.cardinality,\r\n                // no selection!\r\n                partOf: 0,\r\n                sets: [''],\r\n                nsets: sets.filter((s) => !c.sets.includes(s.name)).map((s) => s.name),\r\n            }))),\r\n        },\r\n        vconcat: [\r\n            {\r\n                hconcat: [\r\n                    {\r\n                        mark: 'bar',\r\n                        width: setWidth + labelWidth - 40,\r\n                        height: csHeight,\r\n                    },\r\n                    {\r\n                        width: csWidth,\r\n                        height: csHeight,\r\n                        data: {\r\n                            name: 'combinations',\r\n                        },\r\n                        transform: [\r\n                            {\r\n                                filter,\r\n                            },\r\n                        ],\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    tooltip: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: {\r\n                                    type: 'text',\r\n                                    align: 'center',\r\n                                    baseline: 'bottom',\r\n                                    dy: -barLabelOffset,\r\n                                },\r\n                                encoding: {\r\n                                    text: { field: 'cardinality', type: 'quantitative' },\r\n                                },\r\n                            },\r\n                            hasSelection && {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    fill: selectionColor,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    y: {\r\n                                        field: 'selection',\r\n                                        type: 'quantitative',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ].filter(Boolean),\r\n                        encoding: {\r\n                            x: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            y: {\r\n                                field: 'cardinality',\r\n                                type: 'quantitative',\r\n                                axis: {\r\n                                    grid: false,\r\n                                },\r\n                                title: csName,\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                hconcat: [\r\n                    {\r\n                        width: setWidth,\r\n                        height: setHeight,\r\n                        data: {\r\n                            name: 'sets',\r\n                        },\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    tooltip: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: {\r\n                                    type: 'text',\r\n                                    align: 'right',\r\n                                    baseline: 'middle',\r\n                                    dx: -barLabelOffset,\r\n                                },\r\n                                encoding: {\r\n                                    text: { field: 'cardinality', type: 'quantitative' },\r\n                                },\r\n                            },\r\n                            hasSelection && {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    fill: selectionColor,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    x: {\r\n                                        field: 'selection',\r\n                                        type: 'quantitative',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ].filter(Boolean),\r\n                        encoding: {\r\n                            y: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            x: {\r\n                                field: 'cardinality',\r\n                                type: 'quantitative',\r\n                                title: setName,\r\n                                sort: 'descending',\r\n                                axis: {\r\n                                    grid: false,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        data: {\r\n                            name: 'sets',\r\n                        },\r\n                        width: labelWidth,\r\n                        height: setHeight,\r\n                        mark: {\r\n                            type: 'text',\r\n                            align: 'center',\r\n                            baseline: 'middle',\r\n                            fontSize: Number.parseInt(resolveStyle(svg.querySelector(`.setTextStyle-${styleId}`)).fontSize, 10),\r\n                        },\r\n                        encoding: {\r\n                            y: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            text: { field: 'name', type: 'ordinal' },\r\n                        },\r\n                    },\r\n                    {\r\n                        width: csWidth,\r\n                        height: setHeight,\r\n                        data: {\r\n                            name: 'combinations',\r\n                        },\r\n                        transform: [\r\n                            {\r\n                                flatten: ['sets'],\r\n                                as: ['has_set'],\r\n                            },\r\n                            {\r\n                                flatten: ['nsets'],\r\n                                as: ['has_not_set'],\r\n                            },\r\n                            {\r\n                                calculate: 'datum.has_set+datum.has_not_set',\r\n                                as: 'set',\r\n                            },\r\n                        ],\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'circle',\r\n                                    size: radius * radius * Math.PI,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    color: {\r\n                                        field: 'partOf',\r\n                                        type: 'nominal',\r\n                                        legend: null,\r\n                                        scale: {\r\n                                            range: [fillNotMember, color].concat(highlightedCombination >= 0 ? [selectionColor] : []),\r\n                                        },\r\n                                    },\r\n                                    y: {\r\n                                        field: 'set',\r\n                                        type: 'ordinal',\r\n                                        axis: null,\r\n                                        sort: null,\r\n                                        scale: {\r\n                                            domain: sets.map((s) => s.name),\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: 'rule',\r\n                                transform: [\r\n                                    {\r\n                                        filter,\r\n                                    },\r\n                                    {\r\n                                        calculate: 'datum.sets[datum.sets.length -1]',\r\n                                        as: 'set_end',\r\n                                    },\r\n                                ],\r\n                                encoding: Object.assign({ y: { field: 'sets[0]', type: 'ordinal', axis: null, sort: null }, y2: { field: 'set_end' } }, (highlightedCombination < 0\r\n                                    ? {}\r\n                                    : {\r\n                                        color: {\r\n                                            field: 'partOf',\r\n                                            type: 'nominal',\r\n                                            legend: null,\r\n                                            scale: {\r\n                                                range: [color, selectionColor],\r\n                                            },\r\n                                        },\r\n                                    })),\r\n                            },\r\n                        ],\r\n                        encoding: {\r\n                            x: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        config: {\r\n            padding,\r\n            background: getDefaultTheme(svg.dataset.theme).backgroundColor,\r\n            concat: {\r\n                spacing: 0,\r\n            },\r\n            view: {\r\n                stroke: null,\r\n            },\r\n            // scale: {\r\n            //   bandPaddingInner: props.barPadding,\r\n            //   bandPaddingOuter: props.barPadding,\r\n            //   pointPadding: props.barPadding,\r\n            // },\r\n            bar: {\r\n                fill: color,\r\n            },\r\n            circle: {\r\n                opacity: 1,\r\n            },\r\n            rule: {\r\n                stroke: color,\r\n                strokeWidth: Number.parseInt(resolveStyle(svg.querySelector(`[data-upset=cs] [data-cardinality] line`)).strokeWidth, 10),\r\n            },\r\n            axis: {\r\n                labelColor: textColor,\r\n                labelFontSize: Number.parseInt(resolveStyle(svg.querySelector(`.axisTextStyle-${styleId}`)).fontSize, 10),\r\n                titleColor: textColor,\r\n                titleFontSize: Number.parseInt(resolveStyle(svg.querySelector(`.cChartTextStyle-${styleId}`)).fontSize, 10),\r\n            },\r\n            title: {\r\n                color: textColor,\r\n            },\r\n            text: {\r\n                fill: textColor,\r\n                fontSize: Number.parseInt(resolveStyle(svg.querySelector(`.sBarTextStyle-${styleId}`)).fontSize, 10),\r\n            },\r\n        },\r\n    };\r\n}\r\nfunction exportVegaLite(svg, { title } = {}) {\r\n    const spec = createVegaSpec(svg, title);\r\n    const url = URL.createObjectURL(new Blob([JSON.stringify(spec, null, 2)], {\r\n        type: 'application/json',\r\n    }));\r\n    downloadUrl(url, `${spec.title}.json`, svg.ownerDocument);\r\n    URL.revokeObjectURL(url);\r\n}\n\nconst THEME_KEYS = [\r\n    'selectionColor',\r\n    'color',\r\n    'textColor',\r\n    'hoverHintColor',\r\n    'notMemberColor',\r\n    'alternatingBackgroundColor',\r\n    'hasSelectionColor',\r\n    'hasSelectionOpacity',\r\n    'opacity',\r\n    'strokeColor',\r\n    'valueTextColor',\r\n];\r\nconst LAYOUT_KEYS = [\r\n    'padding',\r\n    'barPadding',\r\n    'dotPadding',\r\n    'widthRatios',\r\n    'heightRatios',\r\n];\r\nconst STYLE_KEYS = [\r\n    'fontSizes',\r\n    'combinationName',\r\n    'setName',\r\n    'barLabelOffset',\r\n    'setNameAxisOffset',\r\n    'combinationNameAxisOffset',\r\n    'theme',\r\n    'fontFamily',\r\n    'emptySelection',\r\n    'exportButtons',\r\n    'queryLegend',\r\n];\r\nconst DUMP_KEYS = ['bandScale', 'numericScale'].concat(THEME_KEYS, LAYOUT_KEYS, STYLE_KEYS);\r\nfunction toDumpProps(props) {\r\n    var _a;\r\n    const full = fillDefaults({\r\n        width: 0,\r\n        height: 0,\r\n        sets: (_a = props.sets) !== null && _a !== void 0 ? _a : [],\r\n        combinations: props.combinations,\r\n        theme: props.theme,\r\n    });\r\n    const r = {};\r\n    DUMP_KEYS.forEach((key) => {\r\n        const value = props[key];\r\n        const defaultValue = full[key];\r\n        if (key === 'theme' && value !== 'light') {\r\n            // keep dark theme flag\r\n            r[key] = value;\r\n            return;\r\n        }\r\n        if (value == null || value === defaultValue) {\r\n            return;\r\n        }\r\n        if (key === 'fontSizes') {\r\n            // nested check\r\n            let empty = true;\r\n            const sub = {};\r\n            FONT_SIZES_KEYS.forEach((fKey) => {\r\n                const fValue = value[fKey];\r\n                const fDefaultValue = defaultValue[fKey];\r\n                if (fValue !== fDefaultValue) {\r\n                    sub[fKey] = fValue;\r\n                    empty = false;\r\n                }\r\n            });\r\n            if (!empty) {\r\n                r[key] = sub;\r\n            }\r\n        }\r\n        else {\r\n            r[key] = value;\r\n        }\r\n    });\r\n    return r;\r\n}\r\nfunction toUpSetJSDump(dump, elements, props, author, mode) {\r\n    return Object.assign({\r\n        $schema: 'https://upset.js.org/schema.1.0.0.json',\r\n        name: typeof props.title === 'string' ? props.title : 'UpSetJS',\r\n        description: typeof props.description === 'string' ? props.description : '',\r\n        mode,\r\n        author,\r\n        elements,\r\n        attrs: [],\r\n        props: toDumpProps(props),\r\n    }, dump);\r\n}\r\nfunction toUpSetJSStaticDump(dump, props, author, mode) {\r\n    return Object.assign({\r\n        $schema: 'https://upset.js.org/schema-static.1.0.0.json',\r\n        name: typeof props.title === 'string' ? props.title : 'UpSetJS',\r\n        description: typeof props.description === 'string' ? props.description : '',\r\n        mode,\r\n        author,\r\n        props: toDumpProps(props),\r\n    }, dump);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction exportDumpData(props, data, compress = false, mode) {\r\n    var _a, _b;\r\n    const elems = [];\r\n    const lookup = new Map();\r\n    const toElemIndex = (elem) => {\r\n        if (lookup.has(elem)) {\r\n            return lookup.get(elem);\r\n        }\r\n        lookup.set(elem, elems.length);\r\n        elems.push(elem);\r\n        return elems.length - 1;\r\n    };\r\n    const dump = toDump({\r\n        sets: props.sets,\r\n        queries: (_b = (_a = props.queries) === null || _a === void 0 ? void 0 : _a.filter((d) => isElemQuery(d) || isSetQuery(d))) !== null && _b !== void 0 ? _b : [],\r\n        toElemIndex,\r\n        selection: props.selection && isSetLike$1(props.selection) ? props.selection : undefined,\r\n        combinations: data.cs.v,\r\n        combinationOptions: Array.isArray(props.combinations)\r\n            ? {}\r\n            : props.combinations,\r\n    }, {\r\n        compress: compress ? 'yes' : 'no',\r\n    });\r\n    return toUpSetJSDump(dump, elems, props, undefined, mode);\r\n}\r\nfunction exportStaticDumpData(props, data, compress = false, mode) {\r\n    var _a, _b;\r\n    const dump = toStaticDump({\r\n        sets: props.sets,\r\n        queries: (_b = (_a = props.queries) === null || _a === void 0 ? void 0 : _a.filter((d) => isElemQuery(d) || isSetQuery(d))) !== null && _b !== void 0 ? _b : [],\r\n        selection: props.selection && isSetLike$1(props.selection) ? props.selection : undefined,\r\n        combinations: data.cs.v,\r\n    }, {\r\n        compress: compress ? 'yes' : 'no',\r\n    });\r\n    return toUpSetJSStaticDump(dump, props, undefined, mode);\r\n}\r\nfunction exportDump(svg, props, data, mode) {\r\n    const dump = exportDumpData(props, data, false, mode);\r\n    const url = URL.createObjectURL(new Blob([JSON.stringify(dump, null, 2)], {\r\n        type: 'application/json',\r\n    }));\r\n    downloadUrl(url, `${dump.name}.json`, svg.ownerDocument);\r\n    URL.revokeObjectURL(url);\r\n}\r\nconst MAX_URL_LENGTH = 2048 * 2;\r\nfunction exportSharedLink(props, data, mode) {\r\n    const r = exportDumpData(props, data, true, mode);\r\n    delete r.$schema;\r\n    const arg = LZString.compressToEncodedURIComponent(JSON.stringify(r));\r\n    const url = new URL('https://upset.js.org/app/embed.html');\r\n    url.searchParams.set('p', arg);\r\n    if (url.toString().length < MAX_URL_LENGTH) {\r\n        window.open(url.toString(), '_blank');\r\n        return true;\r\n    }\r\n    // try other compression\r\n    const r2 = exportStaticDumpData(props, data, true, mode);\r\n    delete r2.$schema;\r\n    const arg2 = LZString.compressToEncodedURIComponent(JSON.stringify(r2));\r\n    url.searchParams.set('p', arg2);\r\n    if (url.toString().length < MAX_URL_LENGTH) {\r\n        window.open(url.toString(), '_blank');\r\n        return true;\r\n    }\r\n    // send via frame message\r\n    url.searchParams.delete('p');\r\n    const w = window.open(url.toString(), '_blank');\r\n    w === null || w === void 0 ? void 0 : w.addEventListener('load', () => {\r\n        w === null || w === void 0 ? void 0 : w.postMessage(r, url.origin);\r\n    });\r\n    return false;\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction clsx(...classNames) {\r\n    return classNames.filter(Boolean).join(' ');\r\n}\r\nfunction generateId(_args) {\r\n    return `upset-${Math.random().toString(36).slice(4)}`;\r\n}\r\nfunction isSetLike(s) {\r\n    return s != null && !Array.isArray(s);\r\n}\r\nfunction elemOverlapOf(query, toElemKey) {\r\n    const f = setOverlapFactory(query, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems).intersection;\r\n    };\r\n}\r\nfunction noGuessPossible() {\r\n    return -1;\r\n}\r\nfunction generateSelectionOverlap(selection, overlapGuesser, toElemKey) {\r\n    if (!selection) {\r\n        return noOverlap;\r\n    }\r\n    if (typeof selection === 'function') {\r\n        return selection;\r\n    }\r\n    if (Array.isArray(selection)) {\r\n        return elemOverlapOf(selection, toElemKey);\r\n    }\r\n    const ss = selection;\r\n    if (ss.overlap) {\r\n        return ss.overlap.bind(ss);\r\n    }\r\n    let f = null;\r\n    return (s) => {\r\n        if (s.overlap) {\r\n            return s.overlap(ss);\r\n        }\r\n        const guess = overlapGuesser(s, ss);\r\n        if (guess >= 0) {\r\n            return guess;\r\n        }\r\n        if (!f) {\r\n            f = elemOverlapOf(ss.elems, toElemKey);\r\n        }\r\n        return f(s);\r\n    };\r\n}\r\nfunction generateSelectionName(selection) {\r\n    var _a;\r\n    return Array.isArray(selection)\r\n        ? `Array(${selection.length})`\r\n        : typeof selection === 'function'\r\n            ? '?'\r\n            : (_a = selection) === null || _a === void 0 ? void 0 : _a.name;\r\n}\r\nfunction elemElemOverlapOf(query, toElemKey) {\r\n    const f = setElemOverlapFactory(query, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems).intersection;\r\n    };\r\n}\r\nfunction noOverlap() {\r\n    return 0;\r\n}\r\nfunction parseFontSize(v) {\r\n    if (v == null) {\r\n        return 10;\r\n    }\r\n    if (v.endsWith('pt')) {\r\n        return Math.floor((4 / 3) * Number.parseInt(v, 10));\r\n    }\r\n    return Number.parseInt(v, 10);\r\n}\r\nfunction toAnchor(alignment) {\r\n    var _a;\r\n    const alignments = {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end',\r\n    };\r\n    return (_a = alignments[alignment]) !== null && _a !== void 0 ? _a : 'middle';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction resolveNumericScale(factory) {\r\n    if (factory === 'linear') {\r\n        return linearScale;\r\n    }\r\n    if (factory === 'log') {\r\n        return logScale;\r\n    }\r\n    return factory;\r\n}\r\nfunction resolveBandScale(factory) {\r\n    return factory === 'band' ? bandScale$1 : factory;\r\n}\r\nfunction areCombinations(combinations) {\r\n    return Array.isArray(combinations);\r\n}\r\nfunction deriveDataDependent(sets, combinations, sizes, numericScale, bandScale, barLabelFontSize, dotPadding, barPadding, tickFontSize, combinationAddons, toKey, toElemKey, id, setMaxScale, combinationMaxScale) {\r\n    var _a;\r\n    const numericScaleFactory = resolveNumericScale(numericScale);\r\n    const bandScaleFactory = resolveBandScale(bandScale);\r\n    const cs = areCombinations(combinations)\r\n        ? combinations\r\n        : generateCombinations(sets, Object.assign({ toElemKey }, DEFAULT_COMBINATIONS, combinations));\r\n    const csKeys = cs.map(toKey);\r\n    const combinationX = bandScaleFactory(csKeys, sizes.cs.w, sizes.padding);\r\n    const dataCSCardinality = cs.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const maxCSCardinality = combinationMaxScale !== null && combinationMaxScale !== void 0 ? combinationMaxScale : dataCSCardinality;\r\n    const combinationYEnd = maxCSCardinality > dataCSCardinality ? 0 : barLabelFontSize;\r\n    const combinationY = numericScaleFactory(maxCSCardinality, [sizes.cs.h, combinationYEnd], {\r\n        orientation: 'vertical',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const labelSize = (text) => Math.floor((barLabelFontSize / 1.4) * 0.7 * text.length);\r\n    const guessLabelWidth = (v) => labelSize(combinationY.tickFormat()(v));\r\n    const dataSetCardinality = sets.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const maxSetCardinality = setMaxScale !== null && setMaxScale !== void 0 ? setMaxScale : dataSetCardinality;\r\n    const largestSetLabelWidth = guessLabelWidth(maxSetCardinality);\r\n    let largestCSLabelWidth = guessLabelWidth(maxCSCardinality);\r\n    for (const addon of combinationAddons) {\r\n        if (!addon.scale) {\r\n            continue;\r\n        }\r\n        const ticks = addon.scale.ticks(3);\r\n        const f = addon.scale.tickFormat();\r\n        for (const tick of ticks) {\r\n            const l = typeof tick === 'number' ? f(tick) : (_a = tick.label) !== null && _a !== void 0 ? _a : f(tick.value);\r\n            const size = labelSize(l);\r\n            if (size > largestCSLabelWidth) {\r\n                largestCSLabelWidth = size;\r\n            }\r\n        }\r\n    }\r\n    const setShift = maxSetCardinality > dataSetCardinality ? 0 : largestSetLabelWidth;\r\n    const setX = numericScaleFactory(maxSetCardinality, [sizes.sets.w, setShift], {\r\n        orientation: 'horizontal',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const setKeys = sets.map(toKey);\r\n    const setY = bandScaleFactory(setKeys.slice().reverse(), // reverse order\r\n    sizes.sets.h, sizes.padding);\r\n    const r = (Math.min(setY.bandwidth(), combinationX.bandwidth()) / 2) * dotPadding;\r\n    const triangleSize = Math.max(2, (Math.min(setY.bandwidth(), combinationX.bandwidth()) / 2) * barPadding);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        r,\r\n        triangleSize,\r\n        sets: {\r\n            v: sets,\r\n            keys: setKeys,\r\n            rv: sets.slice().reverse(),\r\n            x: setX,\r\n            xAxisWidth: sizes.sets.w - setShift,\r\n            y: (s) => setY(toKey(s)),\r\n            max: maxSetCardinality,\r\n            bandWidth: setY.bandwidth(),\r\n            cy: setY.bandwidth() / 2 + sizes.cs.h,\r\n            format: setX.tickFormat(),\r\n            labelOffset: barLabelFontSize + 9 + 2,\r\n        },\r\n        cs: {\r\n            v: cs,\r\n            keys: cs.map(toKey),\r\n            x: (s) => combinationX(toKey(s)),\r\n            max: maxCSCardinality,\r\n            y: combinationY,\r\n            yAxisWidth: sizes.cs.h - combinationYEnd,\r\n            cx: combinationX.bandwidth() / 2,\r\n            bandWidth: combinationX.bandwidth(),\r\n            format: combinationY.tickFormat(),\r\n            has: (v, s) => {\r\n                const sk = toKey(s);\r\n                return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n            },\r\n            labelOffset: largestCSLabelWidth + 9 + 6,\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveSizeDependent(width, height, margin, barPadding, widthRatios, heightRatios, setAddons, combinationAddons, id, setAddonPadding, combinationAddonPadding) {\r\n    const setAddonsBefore = setAddons.reduce((acc, a) => acc + (a.position === 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const setAddonsAfter = setAddons.reduce((acc, a) => acc + (a.position !== 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const combinationAddonsBefore = combinationAddons.reduce((acc, a) => acc + (a.position === 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const combinationAddonsAfter = combinationAddons.reduce((acc, a) => acc + (a.position !== 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const h = height - 2 * margin - 20 - combinationAddonsAfter - combinationAddonsBefore;\r\n    const w = width - 2 * margin - setAddonsBefore - setAddonsAfter;\r\n    const setWidth = widthRatios[0] > 1 ? widthRatios[0] : w * widthRatios[0];\r\n    const labelsWidth = widthRatios[1] > 1 ? widthRatios[1] : w * widthRatios[1];\r\n    const combinationHeight = heightRatios[0] > 1 ? heightRatios[0] : h * heightRatios[0];\r\n    return {\r\n        id: id ? id : generateId(),\r\n        cs: {\r\n            before: combinationAddonsBefore,\r\n            after: combinationAddonsAfter,\r\n            x: setAddonsBefore + setWidth + labelsWidth,\r\n            y: combinationAddonsBefore,\r\n            w: w - setWidth - labelsWidth,\r\n            h: combinationHeight,\r\n            addons: combinationAddons,\r\n            addonPadding: combinationAddonPadding,\r\n        },\r\n        labels: {\r\n            x: setAddonsBefore + setWidth,\r\n            y: combinationAddonsBefore + combinationHeight,\r\n            w: labelsWidth,\r\n            h: h - combinationHeight,\r\n        },\r\n        sets: {\r\n            before: setAddonsBefore,\r\n            after: setAddonsAfter,\r\n            x: setAddonsBefore,\r\n            y: combinationAddonsBefore + combinationHeight,\r\n            w: setWidth,\r\n            h: h - combinationHeight,\r\n            addons: setAddons,\r\n            addonPadding: setAddonPadding,\r\n        },\r\n        padding: barPadding,\r\n        legend: {\r\n            x: width / 2,\r\n        },\r\n        margin: margin,\r\n        w: width,\r\n        h: height,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveStyleDependent$1(theme, styles, classNames, combinationName, combinationNameAxisOffset, setName, setNameAxisOffset, styleId, barLabelOffset, selectionColor, emptySelection, title, description, tooltips, setLabelAlignment) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        cs: {\r\n            name: combinationName,\r\n            offset: combinationNameAxisOffset,\r\n        },\r\n        sets: {\r\n            name: setName,\r\n            offset: setNameAxisOffset,\r\n        },\r\n        emptySelection,\r\n        id: styleId,\r\n        barLabelOffset,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n        setLabelAlignment,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction ExportButtons({ transform, styleId, exportButtons, exportChart, }) {\r\n    if (!exportButtons) {\r\n        return null;\r\n    }\r\n    const svgWidth = 26;\r\n    const pngWidth = 26;\r\n    const vegaWidth = 34;\r\n    const dumpWidth = 34;\r\n    const shareWidth = 42;\r\n    const space = 2;\r\n    let acc = 0;\r\n    const buttons = [];\r\n    if (exportButtons === true || exportButtons.svg !== false) {\r\n        acc += svgWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"svg\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"svg\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download SVG Image\"),\r\n            React.createElement(\"rect\", { y: -9, width: svgWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: svgWidth / 2 }, \"SVG\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.png !== false) {\r\n        acc += pngWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"png\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"png\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download PNG Image\"),\r\n            React.createElement(\"rect\", { y: -9, width: pngWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: pngWidth / 2 }, \"PNG\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.vega !== false) {\r\n        acc += vegaWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"vega\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"vega\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download VEGA-Lite Specification\"),\r\n            React.createElement(\"rect\", { y: -9, width: vegaWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: vegaWidth / 2 }, \"VEGA\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.dump !== false) {\r\n        acc += dumpWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"dump\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"dump\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download UpSet.js JSON Dump\"),\r\n            React.createElement(\"rect\", { y: -9, width: dumpWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: dumpWidth / 2 }, \"DUMP\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.share !== false) {\r\n        acc += shareWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"share\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"share\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Open a shareable URL\"),\r\n            React.createElement(\"rect\", { y: -9, width: shareWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: shareWidth / 2 }, \"SHARE\")));\r\n        acc += space;\r\n    }\r\n    return (React.createElement(\"g\", { className: `exportButtons-${styleId}`, transform: transform }, buttons));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst QueryLegend = /*!#__PURE__*/ React.memo(function QueryLegend({ queries, x, style, data, }) {\r\n    return (React.createElement(\"text\", { transform: `translate(${x},4)`, style: style.styles.legend, className: clsx(`legendTextStyle-${style.id}`, style.classNames.legend) }, queries.map((q, i) => {\r\n        let count = null;\r\n        if (isSetQuery(q)) {\r\n            count = q.set.cardinality;\r\n        }\r\n        else if (isElemQuery(q)) {\r\n            count = q.elems instanceof Set ? q.elems.size : q.elems.length;\r\n        }\r\n        return (React.createElement(React.Fragment, { key: q.name },\r\n            React.createElement(\"tspan\", { className: `fillQ${i}-${data.id}` }, '  ⬤ '),\r\n            React.createElement(\"tspan\", null,\r\n                q.name,\r\n                count != null ? `: ${data.sets.format(count)}` : '')));\r\n    })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst HorizontalTick = /*!#__PURE__*/ React.memo(function HorizontalTick({ pos, spacing, tickSizeInner, orient, name, style, }) {\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    return (React.createElement(\"g\", { transform: `translate(0, ${pos + 0.5})` },\r\n        name && (React.createElement(\"text\", { x: k * spacing, dy: '0.32em', className: clsx(`axisTextStyle-${style.id}`, orient === 'right' ? `startText-${style.id}` : `endText-${style.id}`, style.classNames.axisTick), style: style.styles.axisTick }, name)),\r\n        React.createElement(\"line\", { x2: k * tickSizeInner, className: `axisLine-${style.id}` })));\r\n});\r\nconst VerticalTick = /*!#__PURE__*/ React.memo(function VerticalTick({ pos, name, spacing, orient, tickSizeInner, style, }) {\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    return (React.createElement(\"g\", { transform: `translate(${pos + 0.5}, 0)` },\r\n        name && (React.createElement(\"text\", { y: k * spacing, dy: orient === 'top' ? '0em' : '0.71em', className: clsx(`axisTextStyle-${style.id}`, style.classNames.axisTick), style: style.styles.axisTick }, name)),\r\n        React.createElement(\"line\", { y2: k * tickSizeInner, className: `axisLine-${style.id}` })));\r\n});\r\nfunction Axis({ scale, orient, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, size, start, style, transform, }) {\r\n    const spacing = Math.max(tickSizeInner, 0) + tickPadding;\r\n    const range0 = start;\r\n    const range1 = size;\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    const Tick = orient === 'left' || orient === 'right' ? HorizontalTick : VerticalTick;\r\n    const values = scale\r\n        .ticks()\r\n        .map((d) => (typeof d === 'number' ? { value: d, label: d.toLocaleString() } : d));\r\n    return (React.createElement(\"g\", { transform: transform },\r\n        values.map((d) => (React.createElement(Tick, { key: d.value, pos: scale(d.value), name: d.label, spacing: spacing, tickSizeInner: tickSizeInner, orient: orient, style: style }))),\r\n        React.createElement(\"path\", { className: `axisLine-${style.id}`, d: orient === 'left' || orient === 'right'\r\n                ? tickSizeOuter\r\n                    ? `M${k * tickSizeOuter},${range0}H0.5V${range1}H${k * tickSizeOuter}`\r\n                    : `M0.5,${range0}V${range1}`\r\n                : tickSizeOuter\r\n                    ? `M${range0},${k * tickSizeOuter}V0.5H${range1}V${k * tickSizeOuter}`\r\n                    : `M${range0},0.5H${range1}` })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst MultilineText = /*!#__PURE__*/ React.memo(function MultilineText({ width, text, dy, x, style, className, }) {\r\n    const ref = useRef(null);\r\n    const [lines, setLines] = useState(typeof text === 'string' ? [text] : []);\r\n    // update state upon text update\r\n    useLayoutEffect(() => {\r\n        if (typeof text === 'string') {\r\n            setLines([text]);\r\n        }\r\n        else {\r\n            setLines([]);\r\n        }\r\n    }, [text]);\r\n    useLayoutEffect(() => {\r\n        if (!ref.current ||\r\n            ref.current.childElementCount > 0 ||\r\n            typeof text !== 'string' ||\r\n            typeof ref.current.getComputedTextLength !== 'function') {\r\n            // already multi lines\r\n            return;\r\n        }\r\n        const len = ref.current.getComputedTextLength();\r\n        const lines = [];\r\n        let lineWidth = width;\r\n        let start = 0;\r\n        // compute line splits\r\n        const p = ref.current.getStartPositionOfChar(0);\r\n        while (len > lineWidth) {\r\n            p.x = lineWidth;\r\n            const num = ref.current.getCharNumAtPosition(p);\r\n            const space = text.lastIndexOf(' ', num);\r\n            if (space < start) {\r\n                break;\r\n            }\r\n            lines.push(text.slice(start, space + 1));\r\n            const used = ref.current.getEndPositionOfChar(space + 1).x;\r\n            start = space + 1;\r\n            // new line with in the used part + a new line\r\n            lineWidth = used + width;\r\n        }\r\n        lines.push(text.slice(start));\r\n        setLines(lines);\r\n    }, [ref, text, width]);\r\n    if (!text) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"tspan\", { ref: ref, dy: dy, style: style, x: x, className: className }, lines.length > 1\r\n        ? lines.map((l, i) => (React.createElement(\"tspan\", { key: l, x: 0, dy: i > 0 ? '1.2em' : dy }, l)))\r\n        : text));\r\n});\r\nvar UpSetTitle = /*!#__PURE__*/ React.memo(function UpSetTitle({ width, descriptionWidth = width, style, }) {\r\n    if (!style.title && !style.description) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"text\", null,\r\n        React.createElement(MultilineText, { text: style.title, width: width, dy: \"10px\", className: clsx(`titleTextStyle-${style.id}`, style.classNames.title), style: style.styles.title }),\r\n        React.createElement(MultilineText, { x: 0, width: descriptionWidth, dy: style.title ? '2em' : '10px', text: style.description, className: clsx(`descTextStyle-${style.id}`, style.classNames.description), style: style.styles.description })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction noop() {\r\n    return undefined;\r\n}\r\nfunction wrap(f) {\r\n    if (!f) {\r\n        return noop;\r\n    }\r\n    return (set, addons) => {\r\n        return function (evt) {\r\n            return f.call(this, set, evt.nativeEvent, addons.map((a) => (a.createOnHandlerData ? a.createOnHandlerData(set) : null)));\r\n        };\r\n    };\r\n}\r\nfunction addonPositionGenerator(total, padding) {\r\n    let beforeAcc = 0;\r\n    let afterAcc = 0;\r\n    return (addon) => {\r\n        let x = 0;\r\n        if (addon.position === 'before') {\r\n            beforeAcc += addon.size + padding;\r\n            x = -beforeAcc;\r\n        }\r\n        else {\r\n            x = total + afterAcc + padding;\r\n            afterAcc += addon.size + padding;\r\n        }\r\n        return x;\r\n    };\r\n}\r\nfunction mergeColor(style, color, prop = 'fill') {\r\n    if (!color) {\r\n        return style;\r\n    }\r\n    if (!style) {\r\n        return !color ? undefined : { [prop]: color };\r\n    }\r\n    return Object.assign({ [prop]: color }, style);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetAxis = /*!#__PURE__*/ React.memo(function UpSetAxis({ size, style, data }) {\r\n    const setPosGen = addonPositionGenerator(size.sets.w + size.labels.w + size.cs.w, size.sets.addonPadding);\r\n    const combinationPosGen = addonPositionGenerator(size.cs.h + size.sets.h, size.cs.addonPadding);\r\n    const csNameOffset = style.cs.offset === 'auto' ? data.cs.labelOffset : style.cs.offset;\r\n    const setNameOffset = style.sets.offset === 'auto' ? data.sets.labelOffset : style.sets.offset;\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(UpSetTitle, { style: style, width: size.cs.x - csNameOffset - 20 }),\r\n        size.cs.h > 0 && (React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})`, \"data-upset\": \"csaxis\" },\r\n            React.createElement(Axis, { scale: data.cs.y, orient: \"left\", size: size.cs.h, start: size.cs.h - data.cs.yAxisWidth, style: style }),\r\n            React.createElement(\"line\", { x1: 0, x2: size.cs.w, y1: size.cs.h + 1, y2: size.cs.h + 1, className: `axisLine-${style.id}` }),\r\n            React.createElement(\"text\", { className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${size.cs.h / 2})rotate(-90)` }, style.cs.name),\r\n            size.cs.addons.map((addon) => {\r\n                const pos = combinationPosGen(addon);\r\n                const title = (React.createElement(\"text\", { key: addon.name, className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${pos + addon.size / 2})rotate(-90)` }, addon.name));\r\n                if (!addon.scale) {\r\n                    return title;\r\n                }\r\n                return (React.createElement(React.Fragment, { key: addon.name },\r\n                    React.createElement(Axis, { scale: addon.scale, orient: \"left\", size: addon.size, start: 0, style: style, transform: `translate(0,${pos})` }),\r\n                    title));\r\n            }))),\r\n        size.sets.w > 0 && (React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})`, \"data-upset\": \"setaxis\" },\r\n            React.createElement(Axis, { scale: data.sets.x, orient: \"bottom\", size: size.sets.w, start: size.sets.w - data.sets.xAxisWidth, transform: `translate(0, ${size.sets.h})`, style: style }),\r\n            React.createElement(\"text\", { className: clsx(`sChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${size.sets.w / 2}, ${size.sets.h + setNameOffset})` }, style.sets.name),\r\n            size.sets.addons.map((addon) => {\r\n                const pos = setPosGen(addon);\r\n                const title = (React.createElement(\"text\", { key: addon.name, className: clsx(`sChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${pos + addon.size / 2}, ${size.sets.h + setNameOffset})` }, addon.name));\r\n                if (!addon.scale) {\r\n                    return title;\r\n                }\r\n                return (React.createElement(React.Fragment, { key: addon.name },\r\n                    React.createElement(Axis, { scale: addon.scale, orient: \"bottom\", size: addon.size, start: 0, transform: `translate(${pos}, ${size.sets.h})`, style: style }),\r\n                    title));\r\n            })))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetDot = /*!#__PURE__*/ React.memo(function UpSetDot({ cx, r, cy, name, className, style, fill, }) {\r\n    return (React.createElement(\"circle\", { r: r, cx: cx, cy: cy, className: className, style: mergeColor(style, fill) }, name && React.createElement(\"title\", null, name)));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction computeOverflowValues(value, max, scale) {\r\n    const scaled = [scale(value)];\r\n    for (let i = 0; i < OVERFLOW_PADDING_FACTOR.length && value > max; i++) {\r\n        value -= max;\r\n        scaled.push(scale(value));\r\n    }\r\n    return scaled;\r\n}\r\nconst CombinationChart = /*!#__PURE__*/ React.memo(function CombinationChart({ d, h, className, data, size, style, children, }) {\r\n    const yValues = computeOverflowValues(d.cardinality, data.cs.max, data.cs.y);\r\n    const genPosition = addonPositionGenerator(size.cs.h + size.sets.h, size.cs.addonPadding);\r\n    return (React.createElement(\"g\", { transform: `translate(${data.cs.x(d)}, 0)`, onMouseEnter: h.onMouseEnter(d, size.cs.addons), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, size.cs.addons), onContextMenu: h.onContextMenu(d, size.cs.addons), onMouseMove: h.onMouseMove(d, size.cs.addons), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.cs.format(d.cardinality))),\r\n        React.createElement(\"rect\", { y: -size.cs.before, width: data.cs.bandWidth, height: size.sets.h + size.cs.h + size.cs.before + size.cs.after, className: `hoverBar-${style.id}` }),\r\n        size.cs.h > 0 && (React.createElement(React.Fragment, null,\r\n            yValues.map((y, i) => {\r\n                const offset = i > 0 ? Math.floor(data.cs.bandWidth * OVERFLOW_PADDING_FACTOR[i - 1]) : 0;\r\n                return (React.createElement(\"rect\", { key: i, x: offset, y: y, height: size.cs.h - y, width: data.cs.bandWidth - offset * 2, className: clsx(`fillPrimary-${style.id}`, i < yValues.length - 1 && `fillOverflow${yValues.length - 1 - i}-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }));\r\n            }),\r\n            React.createElement(\"text\", { y: yValues[0] - style.barLabelOffset, x: data.cs.bandWidth / 2, style: style.styles.barLabel, className: clsx(`cBarTextStyle-${style.id}`, style.classNames.barLabel) }, data.cs.format(d.cardinality)))),\r\n        React.createElement(\"text\", { y: -style.barLabelOffset - size.cs.before, x: data.cs.bandWidth / 2, style: style.styles.barLabel, className: clsx(`hoverBarTextStyle-${style.id}`, style.classNames.barLabel) }, d.name),\r\n        data.sets.v.map((s, i) => {\r\n            if (data.cs.has(d, s)) {\r\n                // only not\r\n                return null;\r\n            }\r\n            return (React.createElement(UpSetDot, { key: data.sets.keys[i], r: data.r, cx: data.cs.cx, cy: data.sets.y(s) + data.sets.cy, name: style.tooltips ? d.name : '', style: style.styles.dot, fill: undefined, className: clsx(`fillNotMember-${style.id}`, style.classNames.dot) }));\r\n        }),\r\n        d.sets.size > 1 && (React.createElement(\"line\", { x1: data.cs.cx, y1: data.sets.y(data.sets.v.find((p) => data.cs.has(d, p))) + data.sets.cy - (data.r - 1), x2: data.cs.cx, y2: data.sets.y(data.sets.rv.find((p) => data.cs.has(d, p))) + data.sets.cy + (data.r - 1), style: d.color ? { stroke: d.color } : undefined, className: `upsetLine-${data.id}` })),\r\n        data.sets.v.map((s, i) => {\r\n            var _a;\r\n            if (!data.cs.has(d, s)) {\r\n                // only has\r\n                return null;\r\n            }\r\n            return (React.createElement(UpSetDot, { key: data.sets.keys[i], r: data.r, cx: data.cs.cx, cy: data.sets.y(s) + data.sets.cy, name: style.tooltips ? s.name : '', style: style.styles.dot, fill: (_a = s.color) !== null && _a !== void 0 ? _a : d.color, className: clsx(`fillPrimary-${style.id}`, style.classNames.dot) }));\r\n        }),\r\n        size.cs.addons.map((addon) => (React.createElement(\"g\", { key: addon.name, transform: `translate(0,${genPosition(addon)})` }, addon.render({ set: d, width: data.cs.bandWidth, height: addon.size, theme: style.theme })))),\r\n        children));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst SetChart = /*!#__PURE__*/ React.memo(function SetChart({ d, i, h, className, size, data, style, children, }) {\r\n    const xValues = computeOverflowValues(d.cardinality, data.sets.max, data.sets.x);\r\n    const genPosition = addonPositionGenerator(size.sets.w + size.labels.w + size.cs.w, size.sets.addonPadding);\r\n    const anchorOffset = style.setLabelAlignment === 'center'\r\n        ? size.labels.w / 2\r\n        : style.setLabelAlignment === 'left'\r\n            ? 2\r\n            : size.labels.w - 2;\r\n    return (React.createElement(\"g\", { transform: `translate(0, ${data.sets.y(d)})`, onMouseEnter: h.onMouseEnter(d, size.sets.addons), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, size.sets.addons), onContextMenu: h.onContextMenu(d, size.sets.addons), onMouseMove: h.onMouseMove(d, size.sets.addons), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.sets.format(d.cardinality))),\r\n        React.createElement(\"rect\", { x: -size.sets.before, width: size.sets.w + size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `hoverBar-${style.id}` }),\r\n        i % 2 === 1 && (React.createElement(\"rect\", { x: size.sets.w, width: size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `fillAlternating-${style.id}` })),\r\n        size.sets.w > 0 && (React.createElement(React.Fragment, null,\r\n            xValues.map((x, i) => {\r\n                const offset = i > 0 ? Math.floor(data.sets.bandWidth * OVERFLOW_PADDING_FACTOR[i - 1]) : 0;\r\n                return (React.createElement(\"rect\", { key: i, x: x, y: offset, width: size.sets.w - x, height: data.sets.bandWidth - offset * 2, className: clsx(`fillPrimary-${style.id}`, i < xValues.length - 1 && `fillOverflow${xValues.length - 1 - i}-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }));\r\n            }),\r\n            React.createElement(\"text\", { x: xValues[0], dx: -style.barLabelOffset, y: data.sets.bandWidth / 2, style: style.styles.barLabel, className: clsx(`sBarTextStyle-${style.id}`, style.classNames.barLabel) }, data.sets.format(d.cardinality)))),\r\n        React.createElement(\"text\", { x: size.sets.w + anchorOffset, y: data.sets.bandWidth / 2, className: clsx(`setTextStyle-${style.id}`, style.classNames.setLabel), style: style.styles.setLabel, clipPath: `url(#clip-${size.id})` }, d.name),\r\n        size.sets.addons.map((addon) => (React.createElement(\"g\", { key: addon.name, transform: `translate(${genPosition(addon)},0)` }, addon.render({ set: d, width: addon.size, height: data.sets.bandWidth, theme: style.theme })))),\r\n        children));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetChart = /*!#__PURE__*/ React.memo(function UpSetChart({ data, size, style, h, setChildrenFactory, combinationChildrenFactory, }) {\r\n    return (React.createElement(\"g\", { className: h.hasClick ? `clickAble-${style.id}` : undefined },\r\n        React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})`, \"data-upset\": \"sets\" }, data.sets.v.map((d, i) => (React.createElement(SetChart, { key: data.sets.keys[i], d: d, i: i, h: h, className: h.hasClick || h.hasHover ? `interactive-${style.id}` : undefined, data: data, style: style, size: size }, setChildrenFactory && setChildrenFactory(d))))),\r\n        React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})`, \"data-upset\": \"cs\" }, data.cs.v.map((d, i) => (React.createElement(CombinationChart, { key: data.cs.keys[i], d: d, h: h, className: h.hasClick || h.hasHover ? `interactive-${style.id}` : undefined, data: data, style: style, size: size }, combinationChildrenFactory && combinationChildrenFactory(d)))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction CombinationSelectionChart({ data, size, style, elemOverlap, secondary, tooltip, suffix, transform, empty, combinationAddons, }) {\r\n    const width = data.cs.bandWidth;\r\n    const totalHeight = size.cs.h + size.sets.h;\r\n    const height = size.cs.h;\r\n    const className = clsx(`fill${suffix}`, !tooltip && `pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { transform: transform, \"data-upset\": secondary ? 'cs-q' : 'cs-s' }, data.cs.v.map((d, i) => {\r\n        const x = data.cs.x(d);\r\n        const key = data.cs.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: x, y: height, height: 0, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const yValues = computeOverflowValues(o, data.cs.max, data.cs.y);\r\n        const title = tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        const content = secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${x}, ${yValues[0]})`, d: `M0,-1 l${width},0 l0,2 l${-width},0 L-${data.triangleSize},-${data.triangleSize} L-${data.triangleSize},${data.triangleSize} Z`, className: className, \"data-i\": i, \"data-cardinality\": o, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (yValues.map((y, j) => {\r\n            const offset = j > 0 ? Math.floor(data.cs.bandWidth * OVERFLOW_PADDING_FACTOR[j - 1]) : 0;\r\n            return (React.createElement(\"rect\", { key: j, x: x + offset, y: y, height: height - y, width: width - offset * 2, \"data-i\": j > 0 ? null : i, \"data-cardinality\": j > 0 ? null : o, className: clsx(className, j < yValues.length - 1 && `fillOverflow${yValues.length - 1 - j}-${style.id}`), style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n        }));\r\n        const genPosition = addonPositionGenerator(totalHeight, size.cs.addonPadding);\r\n        const addons = combinationAddons\r\n            .map((addon) => {\r\n            const v = genPosition(addon);\r\n            const content = addon.render({ set: d, width, height: addon.size, theme: style.theme });\r\n            if (!content) {\r\n                return null;\r\n            }\r\n            return (React.createElement(\"g\", { key: addon.name, transform: `translate(${x},${v})` }, content));\r\n        })\r\n            .filter(Boolean);\r\n        if (addons.length === 0) {\r\n            return content;\r\n        }\r\n        return (React.createElement(\"g\", { key: key },\r\n            content,\r\n            addons));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction SetSelectionChart({ data, size, style, elemOverlap, suffix, secondary, empty, tooltip, setAddons, transform, }) {\r\n    const width = size.sets.w;\r\n    const totalWidth = size.sets.w + size.labels.w + size.cs.w;\r\n    const height = data.sets.bandWidth;\r\n    const className = clsx(`fill${suffix}`, !tooltip && ` pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { transform: transform, \"data-upset\": secondary ? 'sets-q' : 'sets-s' }, data.sets.v.map((d, i) => {\r\n        const y = data.sets.y(d);\r\n        const key = data.sets.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: width, y: y, width: 0, height: height, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, style.tooltips && tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const xValues = computeOverflowValues(o, data.sets.max, data.sets.x);\r\n        const title = style.tooltips && tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        const content = secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${xValues[0]}, ${y + height})`, d: `M1,0 l0,${-height} l-2,0 l0,${height} L-${data.triangleSize},${data.triangleSize} L${data.triangleSize},${data.triangleSize} Z`, \"data-i\": i, \"data-cardinality\": o, className: className, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (xValues.map((x, j) => {\r\n            const offset = j > 0 ? Math.floor(data.sets.bandWidth * OVERFLOW_PADDING_FACTOR[j - 1]) : 0;\r\n            return (React.createElement(\"rect\", { key: j, \"data-i\": j > 0 ? null : i, \"data-cardinality\": j > 0 ? null : o, x: x, y: y + offset, width: width - x, height: height - offset * 2, className: clsx(className, j < xValues.length - 1 && `fillOverflow${xValues.length - 1 - j}-${style.id}`), style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n        }));\r\n        const genPosition = addonPositionGenerator(totalWidth, size.sets.addonPadding);\r\n        const addons = setAddons\r\n            .map((addon) => {\r\n            const v = genPosition(addon);\r\n            const content = addon.render({ set: d, width: addon.size, height, theme: style.theme });\r\n            if (!content) {\r\n                return null;\r\n            }\r\n            return (React.createElement(\"g\", { key: addon.name, transform: `translate(${v},${y})` }, content));\r\n        })\r\n            .filter(Boolean);\r\n        if (addons.length === 0) {\r\n            return content;\r\n        }\r\n        return (React.createElement(\"g\", { key: key },\r\n            content,\r\n            addons));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_ARRAY$1 = [];\r\nconst UpSetQueries = /*!#__PURE__*/ React.memo(function UpSetQueries({ size, data, style, hasHover, secondary, queries, }) {\r\n    const someAddon = size.sets.addons.some((s) => s.renderQuery != null) || size.cs.addons.some((s) => s.renderQuery != null);\r\n    const qs = useMemo(() => queries.map((q) => (Object.assign(Object.assign({}, q), { overlap: queryOverlap(q, 'intersection', data.toElemKey), elemOverlap: someAddon ? queryElemOverlap(q, 'intersection', data.toElemKey) : null }))), [queries, someAddon, data.toElemKey]);\r\n    function wrapAddon(addon, query, index, overlapper, secondary) {\r\n        return Object.assign(Object.assign({}, addon), { render: (props) => {\r\n                const overlap = overlapper(props.set);\r\n                return addon.renderQuery ? addon.renderQuery(Object.assign({ query, overlap, index, secondary }, props)) : null;\r\n            } });\r\n    }\r\n    return (React.createElement(\"g\", { className: hasHover && !secondary ? `pnone-${style.id}` : undefined },\r\n        React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})` }, qs.map((q, i) => (React.createElement(SetSelectionChart, { key: q.name, data: data, size: size, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name, setAddons: size.sets.addons.length === 0\r\n                ? EMPTY_ARRAY$1\r\n                : size.sets.addons.map((a, i) => wrapAddon(a, q, i, q.elemOverlap, secondary || i > 0)) })))),\r\n        React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})` }, qs.map((q, i) => (React.createElement(CombinationSelectionChart, { key: q.name, data: data, size: size, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name, combinationAddons: size.cs.addons.length === 0\r\n                ? EMPTY_ARRAY$1\r\n                : size.cs.addons.map((a, i) => wrapAddon(a, q, i, q.elemOverlap, secondary || i > 0)) }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction LabelsSelection({ data, size, style, selection, }) {\r\n    if (!selection || selection.type !== 'set' || !data.sets.keys.includes(data.toKey(selection))) {\r\n        return null;\r\n    }\r\n    const d = selection;\r\n    return (React.createElement(\"rect\", { y: data.sets.y(d), width: size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `selectionHint-${style.id}` }));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction UpSetSelectionChart({ data, size, style, selection, }) {\r\n    const cy = data.sets.bandWidth / 2;\r\n    const cx = data.cs.cx;\r\n    const r = data.r;\r\n    const height = size.sets.h + size.sets.after;\r\n    const width = data.cs.bandWidth;\r\n    if (!selection || selection.type === 'set' || !data.cs) {\r\n        return null;\r\n    }\r\n    const d = selection;\r\n    const index = data.cs.keys.indexOf(data.toKey(d));\r\n    if (index < 0) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"g\", { transform: `translate(${size.labels.w + data.cs.x(d)}, 0)`, \"data-upset\": \"cs-ss\", \"data-i\": index },\r\n        React.createElement(\"rect\", { width: width, height: height, className: `selectionHint-${style.id}` }),\r\n        d.sets.size > 1 && (React.createElement(\"line\", { x1: cx, y1: data.sets.y(data.sets.v.find((p) => data.cs.has(d, p))) + cy - (data.r - 1), x2: cx, y2: data.sets.y(data.sets.rv.find((p) => data.cs.has(d, p))) + cy + (data.r - 1), className: `upsetSelectionLine-${data.id}`, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined, 'stroke') })),\r\n        data.sets.v\r\n            .filter((s) => data.cs.has(d, s))\r\n            .map((s) => (React.createElement(UpSetDot, { key: data.toKey(s), r: r * 1.1, cx: cx, cy: data.sets.y(s) + cy, name: style.tooltips ? s.name : '', className: clsx(`fillSelection-${style.id}`, `pnone-${style.id}`, style.classNames.dot), style: mergeColor(style.styles.dot, !style.selectionColor ? s.color : undefined) })))));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_ARRAY = [];\r\nfunction UpSetSelection({ size, data, style, selection, hasHover, }) {\r\n    const empty = style.emptySelection;\r\n    const selectionOverlap = generateSelectionOverlap(selection, data.overlapGuesser, data.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    const someAddon = size.sets.addons.some((s) => s.renderSelection != null) || size.cs.addons.some((s) => s.renderSelection != null);\r\n    const selectionElemOverlap = selection && typeof selection !== 'function' && someAddon\r\n        ? elemElemOverlapOf(Array.isArray(selection) ? selection : selection.elems, data.toElemKey)\r\n        : null;\r\n    function wrapAddon(addon) {\r\n        return Object.assign(Object.assign({}, addon), { render: (props) => {\r\n                const overlap = selectionElemOverlap ? selectionElemOverlap(props.set) : null;\r\n                return addon.renderSelection\r\n                    ? addon.renderSelection(Object.assign({ selection, selectionColor: style.selectionColor || props.set.color || 'orange', overlap }, props))\r\n                    : null;\r\n            } });\r\n    }\r\n    return (React.createElement(\"g\", { className: hasHover ? `pnone-${style.id}` : undefined },\r\n        (selection || empty) && (React.createElement(CombinationSelectionChart, { data: data, size: size, style: style, transform: `translate(${size.cs.x},${size.cs.y})`, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName, combinationAddons: size.cs.addons.length === 0 ? EMPTY_ARRAY : size.cs.addons.map(wrapAddon) })),\r\n        (selection || empty) && (React.createElement(SetSelectionChart, { data: data, size: size, style: style, transform: `translate(${size.sets.x},${size.sets.y})`, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName, setAddons: size.sets.addons.length === 0 ? EMPTY_ARRAY : size.sets.addons.map(wrapAddon) })),\r\n        React.createElement(\"g\", { transform: `translate(${size.labels.x},${size.labels.y})` },\r\n            isSetLike(selection) && React.createElement(LabelsSelection, { data: data, size: size, style: style, selection: selection }),\r\n            isSetLike(selection) && React.createElement(UpSetSelectionChart, { data: data, size: size, style: style, selection: selection }))));\r\n}\n\nfunction propRule(value, prop = 'font-size') {\r\n    return value ? `${prop}: ${value};` : '';\r\n}\r\nfunction baseRules(styleId, theme, fontFamily, fontSizes) {\r\n    const hasS = [];\r\n    if (theme.hasSelectionColor) {\r\n        hasS.push(`fill: ${theme.hasSelectionColor};`);\r\n    }\r\n    const hasSelectionOpacity = theme.hasSelectionOpacity != null && theme.hasSelectionOpacity >= 0;\r\n    if (hasSelectionOpacity) {\r\n        hasS.push(`fill-opacity: ${theme.hasSelectionOpacity};`);\r\n    }\r\n    return {\r\n        p: propRule,\r\n        root: `\n  .root-${styleId} {\n    ${propRule(fontFamily, 'font-family')}\n  }\n  `,\r\n        text: `\n  .titleTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.title)}\n  }\n  .descTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.description)}\n  }\n\n  .legendTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.legend)}\n    text-anchor: middle;\n    dominant-baseline: hanging;\n    pointer-events: none;\n  }\n  `,\r\n        hasSFill: hasS.join(' '),\r\n        hasSStroke: hasS.join(' ').replace('fill:', 'stroke:').replace('fill-', 'stroke-'),\r\n        fill: `\n  .fillPrimary-${styleId} { fill: ${theme.color}; fill-opacity: ${theme.opacity}; }\n  .fillOverflow1-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[0]}; }\n  .fillOverflow2-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[1]}; }\n  ${hasS.length > 0 ? `.root-${styleId}[data-selection] .fillPrimary-${styleId} { ${hasS.join(' ')} }` : ''}\n  ${hasSelectionOpacity\r\n            ? `\n      .root-${styleId}[data-selection] .fillOverflow1-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[0]}; }\n      .root-${styleId}[data-selection] .fillOverflow2-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[1]}; }`\r\n            : ''}\n  ${theme.selectionColor ? `.fillSelection-${styleId} { fill: ${theme.selectionColor}; }` : ''}\n  .fillTransparent-${styleId} { fill: transparent; }\n\n  .selectionHint-${styleId} {\n    fill: transparent;\n    pointer-events: none;\n    ${propRule(theme.selectionColor, 'stroke')}\n  }\n  .clickAble-${styleId} {\n    cursor: pointer;\n  }\n\n  .startText-${styleId} {\n    text-anchor: start;\n  }\n  .endText-${styleId} {\n    text-anchor: end;\n  }\n  .pnone-${styleId} {\n    pointer-events: none;\n  }`,\r\n        export: `\n  .exportTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.exportLabel)}\n  }\n  .exportButtons-${styleId} {\n    text-anchor: middle;\n  }\n  .exportButton-${styleId} {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .exportButton-${styleId}:hover {\n    opacity: 1;\n  }\n  .exportButton-${styleId} > rect {\n    fill: none;\n    stroke: ${theme.textColor};\n  }\n  `,\r\n    };\r\n}\n\nfunction useHandler(p) {\r\n    const onClick = p.onClick;\r\n    return useMemo(() => ({\r\n        hasClick: onClick != null,\r\n        hasHover: p.onHover != null,\r\n        onClick: wrap(onClick),\r\n        onMouseEnter: wrap(p.onHover),\r\n        onContextMenu: wrap(p.onContextMenu),\r\n        onMouseLeave: p.onHover ? (evt) => p.onHover(null, evt.nativeEvent, []) : undefined,\r\n        onMouseMove: wrap(p.onMouseMove),\r\n        reset: (evt) => (onClick ? onClick(null, evt.nativeEvent, []) : null),\r\n    }), [onClick, p.onHover, p.onContextMenu, p.onMouseMove]);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * UpSetJS main pure functional stateless React component, the generic argument T refers to the type of the elements\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst UpSetJS = /*!#__PURE__*/ React.forwardRef(function UpSetJS(props, ref) {\r\n    var _a;\r\n    const p = fillDefaults(props);\r\n    const { selection = null, queries = [], fontSizes } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.axisTick,\r\n            fontSizes.barLabel,\r\n            fontSizes.chartLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.hoverHintColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.selectionColor,\r\n            p.notMemberColor,\r\n            p.alternatingBackgroundColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.axisTick,\r\n        fontSizes.barLabel,\r\n        fontSizes.chartLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.hoverHintColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.selectionColor,\r\n        p.notMemberColor,\r\n        p.alternatingBackgroundColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const styleInfo = useMemo(() => deriveStyleDependent$1(p.theme, p.styles, p.classNames, p.combinationName, p.combinationNameAxisOffset, p.setName, p.setNameAxisOffset, styleId, p.barLabelOffset, p.selectionColor, p.emptySelection, p.title, p.description, p.tooltips, p.setLabelAlignment), [\r\n        p.theme,\r\n        p.styles,\r\n        p.classNames,\r\n        p.barLabelOffset,\r\n        p.combinationName,\r\n        p.combinationNameAxisOffset,\r\n        p.setName,\r\n        p.setNameAxisOffset,\r\n        styleId,\r\n        p.selectionColor,\r\n        p.emptySelection,\r\n        p.title,\r\n        p.description,\r\n        p.tooltips,\r\n        p.setLabelAlignment,\r\n    ]);\r\n    const sizeInfo = useMemo(() => deriveSizeDependent(p.width, p.height, p.padding, p.barPadding, p.widthRatios, p.heightRatios, p.setAddons, p.combinationAddons, p.id, p.setAddonPadding, p.combinationAddonPadding), [\r\n        p.width,\r\n        p.height,\r\n        p.padding,\r\n        p.barPadding,\r\n        p.widthRatios,\r\n        p.heightRatios,\r\n        p.setAddons,\r\n        p.combinationAddons,\r\n        p.id,\r\n        p.setAddonPadding,\r\n        p.combinationAddonPadding,\r\n    ]);\r\n    const dataInfo = useMemo(() => deriveDataDependent(p.sets, p.combinations, sizeInfo, p.numericScale, p.bandScale, p.barLabelOffset + parseFontSize(fontSizes.barLabel), p.dotPadding, p.barPadding, parseFontSize(fontSizes.axisTick), p.combinationAddons, p.toKey, p.toElemKey, p.id, p.setMaxScale, p.combinationMaxScale), [\r\n        p.sets,\r\n        p.combinations,\r\n        sizeInfo,\r\n        p.numericScale,\r\n        p.bandScale,\r\n        p.barLabelOffset,\r\n        fontSizes.barLabel,\r\n        p.dotPadding,\r\n        p.barPadding,\r\n        fontSizes.axisTick,\r\n        p.combinationAddons,\r\n        p.toKey,\r\n        p.toElemKey,\r\n        p.id,\r\n        p.setMaxScale,\r\n        p.combinationMaxScale,\r\n    ]);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    const h = useHandler(p);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .axisTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.axisTick)}\n    text-anchor: middle;\n  }\n  .barTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n  }\n  .cBarTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: middle;\n  }\n  .sBarTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: end;\n    dominant-baseline: central;\n  }\n  .hoverBarTextStyle-${styleId} {\n    ${rulesHelper.p(fontSizes.barLabel)}\n    fill: ${p.hoverHintColor};\n    display: none;\n    text-anchor: middle;\n  }\n  .setTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: ${toAnchor(p.setLabelAlignment)};\n    dominant-baseline: central;\n  }\n  .cChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n    text-anchor: middle;\n  }\n  .sChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n    text-anchor: middle;\n    dominant-baseline: hanging;\n  }\n\n  ${rulesHelper.fill}\n  .fillNotMember-${styleId} { fill: ${p.notMemberColor}; }\n  .fillAlternating-${styleId} { fill: ${p.alternatingBackgroundColor || 'transparent'}; }\n\n  .axisLine-${styleId} {\n    fill: none;\n    stroke: ${p.textColor};\n  }\n  .hoverBar-${styleId} {\n    fill: transparent;\n  }\n\n  .interactive-${styleId}:hover > .hoverBar-${styleId} {\n    stroke: ${p.hoverHintColor};\n  }\n  .interactive-${styleId}:hover > .hoverBarTextStyle-${styleId} {\n    display: unset;\n  }\n\n  ${rulesHelper.export}\n\n  .upsetLine-${dataInfo.id} {\n    stroke-width: ${dataInfo.r * 0.6};\n    stroke: ${p.color};\n    stroke-opacity: ${p.opacity};\n  }\n  ${rulesHelper.hasSStroke\r\n        ? `.root-${styleId}[data-selection] .upsetLine-${dataInfo.id} { ${rulesHelper.hasSStroke} }`\r\n        : ''}\n\n  .upsetSelectionLine-${dataInfo.id} {\n    stroke-width: ${dataInfo.r * 0.6 * 1.1};\n    ${rulesHelper.p(p.selectionColor, 'stroke')}\n    pointer-events: none;\n  }\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${dataInfo.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useCallback((evt) => {\r\n        const svg = evt.currentTarget.closest('svg');\r\n        const type = (evt.currentTarget.dataset.type || 'png');\r\n        switch (type) {\r\n            case 'vega':\r\n                exportVegaLite(svg);\r\n                break;\r\n            case 'dump':\r\n                exportDump(svg, props, dataInfo);\r\n                break;\r\n            case 'share':\r\n                exportSharedLink(props, dataInfo);\r\n                break;\r\n            case 'svg':\r\n            case 'png':\r\n                exportSVG(svg, {\r\n                    type,\r\n                    toRemove: `.${evt.currentTarget.getAttribute('class')}`,\r\n                });\r\n        }\r\n    }, [dataInfo, props]);\r\n    const selectionName = generateSelectionName(selection);\r\n    return (React.createElement(\"svg\", { id: p.id, className: clsx(`root-${styleId}`, p.className), style: p.style, width: p.width, height: p.height, ref: ref, viewBox: `0 0 ${p.width} ${p.height}`, \"data-theme\": (_a = p.theme) !== null && _a !== void 0 ? _a : 'light', \"data-selection\": selectionName ? selectionName : undefined },\r\n        p.styleFactory(rules),\r\n        React.createElement(\"defs\", null,\r\n            React.createElement(\"clipPath\", { id: `clip-${sizeInfo.id}` },\r\n                React.createElement(\"rect\", { x: sizeInfo.sets.w, y: 0, width: sizeInfo.labels.w, height: sizeInfo.sets.h }))),\r\n        p.queryLegend && React.createElement(QueryLegend, { queries: queries, x: sizeInfo.legend.x, style: styleInfo, data: dataInfo }),\r\n        React.createElement(ExportButtons, { transform: `translate(${sizeInfo.w - 2},${sizeInfo.h - 3})`, styleId: styleId, exportButtons: p.exportButtons, exportChart: exportChart }),\r\n        React.createElement(\"g\", { transform: `translate(${p.padding},${p.padding})`, \"data-upset\": \"base\" },\r\n            p.onClick && (React.createElement(\"rect\", { width: sizeInfo.cs.x, height: sizeInfo.sets.y, onClick: h.reset, className: `fillTransparent-${styleId}` })),\r\n            React.createElement(UpSetAxis, { size: sizeInfo, style: styleInfo, data: dataInfo }),\r\n            React.createElement(UpSetChart, { size: sizeInfo, style: styleInfo, data: dataInfo, h: h, setChildrenFactory: p.setChildrenFactory, combinationChildrenFactory: p.combinationChildrenFactory }),\r\n            React.createElement(UpSetSelection, { size: sizeInfo, style: styleInfo, data: dataInfo, hasHover: h.hasHover, selection: selection }),\r\n            React.createElement(UpSetQueries, { size: sizeInfo, style: styleInfo, data: dataInfo, hasHover: h.hasHover, queries: queries, secondary: p.onHover != null || selection != null })),\r\n        props.children));\r\n});\n\nfunction SVGWrapper({ rules, style, size, p, data, tRef, children, exportChart, selectionName, h, }) {\r\n    var _a, _b;\r\n    return (React.createElement(\"svg\", { id: p.id, className: clsx(`root-${style.id}`, p.className), style: p.style, width: p.width, height: p.height, ref: tRef, viewBox: `0 0 ${p.width} ${p.height}`, \"data-theme\": (_a = p.theme) !== null && _a !== void 0 ? _a : 'light', \"data-selection\": selectionName ? selectionName : undefined },\r\n        p.styleFactory(rules),\r\n        p.onClick && React.createElement(\"rect\", { width: size.w, height: size.h, onClick: h.reset, className: `fillTransparent-${style.id}` }),\r\n        p.queryLegend && React.createElement(QueryLegend, { queries: (_b = p.queries) !== null && _b !== void 0 ? _b : [], x: size.legend.x, style: style, data: data }),\r\n        React.createElement(ExportButtons, { transform: `translate(${size.w - 2},${size.h - 3})`, styleId: style.id, exportButtons: p.exportButtons, exportChart: exportChart }),\r\n        React.createElement(\"g\", { transform: `translate(${p.padding},${p.padding})`, \"data-upset\": \"base\" }, children),\r\n        p.children));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction generateArcSlicePath(s, refs, p = 0) {\r\n    if (s.path) {\r\n        return s.path;\r\n    }\r\n    return `M ${s.x1 - p},${s.y1 - p} ${s.arcs\r\n        .map((arc) => {\r\n        const ref = refs[arc.ref].l;\r\n        const rx = isEllipse(ref) ? ref.rx : ref.r;\r\n        const ry = isEllipse(ref) ? ref.ry : ref.r;\r\n        const rot = isEllipse(ref) ? ref.rotation : 0;\r\n        return `A ${rx - p} ${ry - p} ${rot} ${arc.large ? 1 : 0} ${arc.sweep ? 1 : 0} ${arc.x2 - p} ${arc.y2 - p}`;\r\n    })\r\n        .join(' ')}`;\r\n}\n\nfunction SelectionPattern(p) {\r\n    var _a;\r\n    if (p.v >= 1 || p.v <= 0) {\r\n        return null;\r\n    }\r\n    const ratio = Math.round(p.v * 10.0) / 100;\r\n    return (React.createElement(\"defs\", null,\r\n        React.createElement(\"pattern\", { id: p.id, width: \"1\", height: \"0.1\", patternContentUnits: \"objectBoundingBox\", patternTransform: `rotate(${(_a = p.rotate) !== null && _a !== void 0 ? _a : 0})` },\r\n            p.bgFilled && (React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"1\", height: \"0.1\", style: { fill: p.bgFill }, className: `fillPrimary-${p.styleId}` })),\r\n            React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"1\", height: ratio, className: `fill${p.suffix}`, style: p.fill ? { fill: p.fill } : undefined }))));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction sliceRotate(slice, center) {\r\n    if (slice.text.x === center.cx) {\r\n        return 0;\r\n    }\r\n    if (slice.text.x > center.cx) {\r\n        return slice.text.y <= center.cy ? 60 : -60;\r\n    }\r\n    return slice.text.y <= center.cy ? -60 : 60;\r\n}\r\nfunction generateTitle(d, s, sName, secondary, qs, queries, data, cx) {\r\n    const dc = data.format(d.cardinality);\r\n    const baseName = !sName ? d.name : `${d.name} ∩ ${sName}`;\r\n    const baseCardinality = !sName ? dc : `${data.format(s)}/${dc}`;\r\n    if (qs.length === 0) {\r\n        return {\r\n            tooltip: `${baseName}: ${baseCardinality}`,\r\n            title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n                React.createElement(\"tspan\", { dy: \"-0.6em\" }, d.name),\r\n                React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, baseCardinality))) : (baseCardinality),\r\n        };\r\n    }\r\n    if (qs.length === 1 && !secondary && !sName) {\r\n        return {\r\n            tooltip: `${d.name} ∩ ${queries[0].name}: ${data.format(qs[0])}/${dc}`,\r\n            title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n                React.createElement(\"tspan\", { dy: \"-0.6em\" }, d.name),\r\n                React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, `${data.format(qs[0])}/${dc}`))) : (`${data.format(qs[0])}/${dc}`),\r\n        };\r\n    }\r\n    const queryLine = (React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, queries.map((q, i) => (React.createElement(React.Fragment, { key: q.name },\r\n        React.createElement(\"tspan\", { className: `fillQ${i}-${data.id}` }, '⬤'),\r\n        React.createElement(\"tspan\", null, ` ${data.format(qs[i])}/${dc}${i < queries.length - 1 ? ' ' : ''}`))))));\r\n    return {\r\n        tooltip: `${baseName}: ${baseCardinality}\\n${queries\r\n            .map((q, i) => `${d.name} ∩ ${q.name}: ${data.format(qs[i])}/${dc}`)\r\n            .join('\\n')}`,\r\n        title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n            React.createElement(\"tspan\", { dy: \"-1.2em\" }, d.name),\r\n            React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, baseCardinality),\r\n            queryLine)) : (React.createElement(React.Fragment, null,\r\n            React.createElement(\"tspan\", { dy: \"-0.6em\" }, baseCardinality),\r\n            queryLine)),\r\n    };\r\n}\r\nfunction VennArcSliceSelection({ slice, d, i, data, style, elemOverlap, selected, selectionName, h, queries, size, fill, qs, }) {\r\n    const p = generateArcSlicePath(slice, data.sets.d);\r\n    const rotate = sliceRotate(slice, size.area);\r\n    const o = elemOverlap ? elemOverlap(d) : 0;\r\n    const fillFullSelection = (o === d.cardinality && d.cardinality > 0) || selected;\r\n    const className = clsx(`arc-${style.id}`, o === 0 && !selected && `${fill ? 'fillPrimary' : 'arcP'}-${style.id}`, fillFullSelection && `fillSelection-${style.id}`, style.classNames.set);\r\n    const id = `upset-${style.id}-${i}`;\r\n    const secondary = elemOverlap != null || h.onMouseLeave != null;\r\n    const qsOverlaps = qs.map((q) => q(d));\r\n    const { title, tooltip } = generateTitle(d, o, selectionName, secondary, qsOverlaps, queries, data, slice.text.x);\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(SelectionPattern, { id: id, v: o === 0 ? 0 : o / d.cardinality, suffix: `Selection-${style.id}`, rotate: rotate, bgFill: d.color, bgFilled: d.color != null || fill, fill: !style.selectionColor ? d.color : undefined, styleId: style.id }),\r\n        React.createElement(\"path\", { onMouseEnter: h.onMouseEnter(d, []), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, []), onContextMenu: h.onContextMenu(d, []), onMouseMove: h.onMouseMove(d, []), d: p, className: className, style: mergeColor(style.styles.set, o > 0 && o < d.cardinality ? `url(#${id})` : !fillFullSelection || !style.selectionColor ? d.color : undefined) }, style.tooltips && React.createElement(\"title\", null, tooltip)),\r\n        React.createElement(\"text\", { x: slice.text.x, y: slice.text.y, className: clsx(`${d.type === 'set' ? 'set' : 'value'}TextStyle-${style.id}`, `pnone-${style.id}`, d.type === 'set' ? style.classNames.setLabel : style.classNames.valueLabel\r\n            // circle.align === 'left' && `startText-${style.id}`,\r\n            // circle.align === 'right' && `endText-${style.id}`\r\n            ) }, title)));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennDataDependent(sets, combinations, size, layout, format, toKey, toElemKey, id, setLabelOffsets) {\r\n    const ss = sets.length > layout.maxSets ? sets.slice(0, layout.maxSets) : sets;\r\n    const { cs, setKeys, csKeys } = calculateCombinations(ss, toKey, combinations);\r\n    const l = layout.compute(ss, cs, size.area.w, size.area.h);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        sets: {\r\n            d: l.sets.map((l, i) => ({\r\n                v: ss[i],\r\n                l,\r\n                key: setKeys[i],\r\n                offset: setLabelOffsets != null && i < setLabelOffsets.length ? setLabelOffsets[i] : { x: 0, y: 0 },\r\n            })),\r\n            v: ss,\r\n            format,\r\n        },\r\n        format,\r\n        cs: {\r\n            d: l.intersections.map((l, i) => ({ v: cs[i], l, key: csKeys[i] })),\r\n            v: cs,\r\n            has: (v, s) => {\r\n                const sk = toKey(s);\r\n                return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n            },\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateDistinctOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\r\nfunction calculateCombinations(ss, toKey, combinations, options = { min: 1 }) {\r\n    const setKeys = ss.map(toKey);\r\n    let cs = [];\r\n    if (areCombinations(combinations)) {\r\n        const given = new Map(combinations.map((c) => [Array.from(c.sets).map(toKey).sort().join('#'), c]));\r\n        const helperSets = ss.map((s) => ({\r\n            type: 'set',\r\n            cardinality: 0,\r\n            elems: [],\r\n            name: s.name,\r\n            s,\r\n        }));\r\n        // generate dummy ones and map to given data\r\n        cs = generateCombinations(helperSets, Object.assign({\r\n            type: 'distinctIntersection',\r\n            empty: true,\r\n            order: ['degree:asc', 'group:asc'],\r\n        }, options)).map((c) => {\r\n            const key = Array.from(c.sets)\r\n                .map((s) => toKey(s.s))\r\n                .sort()\r\n                .join('#');\r\n            if (given.has(key)) {\r\n                return given.get(key);\r\n            }\r\n            // generate a dummy one\r\n            return {\r\n                name: c.name,\r\n                cardinality: 0,\r\n                degree: c.degree,\r\n                elems: [],\r\n                sets: new Set(Array.from(c.sets).map((s) => s.s)),\r\n                type: 'distinctIntersection',\r\n            };\r\n        });\r\n    }\r\n    else {\r\n        cs = generateCombinations(ss, Object.assign({\r\n            type: 'distinctIntersection',\r\n            empty: true,\r\n            order: ['degree:asc', 'group:asc'],\r\n        }, options, combinations !== null && combinations !== void 0 ? combinations : {}));\r\n    }\r\n    const csKeys = cs.map(toKey);\r\n    return { cs, setKeys, csKeys };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennSizeDependent(width, height, margin, id) {\r\n    const h = height - 2 * margin;\r\n    const w = width - 2 * margin;\r\n    const r = Math.min(w, h) / 2;\r\n    return {\r\n        id: id ? id : generateId(),\r\n        legend: {\r\n            x: width / 2,\r\n        },\r\n        area: {\r\n            w,\r\n            h,\r\n            cx: w / 2,\r\n            cy: h / 2,\r\n            r,\r\n        },\r\n        margin: margin,\r\n        w: width,\r\n        h: height,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennStyleDependent(theme, styles, classNames, styleId, selectionColor, title, description, tooltips) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        id: styleId,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction useCreateCommon(p) {\r\n    const { queries = [], fontSizes } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.valueLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.strokeColor,\r\n            p.valueTextColor,\r\n            p.selectionColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.valueLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.strokeColor,\r\n        p.valueTextColor,\r\n        p.selectionColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const styleInfo = useMemo(() => deriveVennStyleDependent(p.theme, p.styles, p.classNames, styleId, p.selectionColor, p.title, p.description, p.tooltips), [p.theme, p.styles, p.classNames, styleId, p.selectionColor, p.title, p.description, p.tooltips]);\r\n    const sizeInfo = useMemo(() => deriveVennSizeDependent(p.width, p.height, p.padding, p.id), [p.width, p.height, p.padding, p.id]);\r\n    const h = useHandler(p);\r\n    const qs = React.useMemo(() => queries.map((q) => queryOverlap(q, 'intersection', p.toElemKey)), [queries, p.toElemKey]);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    return {\r\n        styleId,\r\n        size: sizeInfo,\r\n        style: styleInfo,\r\n        h,\r\n        qs,\r\n        rulesHelper,\r\n    };\r\n}\r\nfunction useExportChart(dataInfo, props, mode) {\r\n    return useCallback((evt) => {\r\n        const svg = evt.currentTarget.closest('svg');\r\n        const type = (evt.currentTarget.dataset.type || 'png');\r\n        switch (type) {\r\n            case 'dump':\r\n                exportDump(svg, props, dataInfo, mode);\r\n                break;\r\n            case 'share':\r\n                exportSharedLink(props, dataInfo, mode);\r\n                break;\r\n            case 'svg':\r\n            case 'png':\r\n                exportSVG(svg, {\r\n                    type,\r\n                    toRemove: `.${evt.currentTarget.getAttribute('class')}`,\r\n                });\r\n        }\r\n    }, [dataInfo, props, mode]);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst VennDiagram = /*!#__PURE__*/ React.forwardRef(function VennDiagram(props, ref) {\r\n    const p = fillVennDiagramDefaults(props);\r\n    const { selection = null, queries = [], fontSizes } = p;\r\n    const v = useCreateCommon(p);\r\n    const { size, style, rulesHelper } = v;\r\n    const dataInfo = useMemo(() => deriveVennDataDependent(p.sets, p.combinations, size, p.layout, p.valueFormat, p.toKey, p.toElemKey, p.id, p.setLabelOffsets), [p.sets, p.combinations, size, p.valueFormat, p.toKey, p.toElemKey, p.id, p.layout, p.setLabelOffsets]);\r\n    const selectionKey = selection != null && isSetLike$1(selection) ? p.toKey(selection) : null;\r\n    const selectionOverlap = selection == null ? null : generateSelectionOverlap(selection, dataInfo.overlapGuesser, dataInfo.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .valueTextStyle-${style.id} {\n    fill: ${p.valueTextColor};\n    ${rulesHelper.p(fontSizes.valueLabel)}\n    text-anchor: middle;\n    dominant-baseline: central;\n  }\n  .setTextStyle-${style.id} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: middle;\n  }\n\n  .topText-${style.id} {\n    dominant-baseline: hanging;\n  }\n\n  .stroke-circle-${style.id} {\n    fill: none;\n    stroke: ${p.strokeColor};\n  }\n\n  .arc-${style.id} {\n    fill-rule: evenodd;\n  }\n  .arcP-${style.id} {\n    fill: transparent;\n    fill-opacity: ${p.opacity};\n  }\n  ${rulesHelper.fill}\n  ${rulesHelper.export}\n\n  ${rulesHelper.hasSFill ? `.root-${style.id}[data-selection] .arcP-${style.id} { ${rulesHelper.hasSFill} }` : ''}\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${dataInfo.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useExportChart(dataInfo, p, 'venn');\r\n    const maxWidth = dataInfo.sets.d.reduce((acc, d) => Math.min(acc, d.l.cx - (isEllipse(d.l) ? d.l.rx : d.l.r)), size.area.w);\r\n    return (React.createElement(SVGWrapper, { rules: rules, style: style, selectionName: selectionName, size: size, p: p, data: dataInfo, tRef: ref, h: v.h, exportChart: exportChart },\r\n        React.createElement(UpSetTitle, { style: style, width: maxWidth }),\r\n        React.createElement(\"g\", { className: clsx(p.onClick && `clickAble-${style.id}`) }, dataInfo.sets.d.map((d, i) => (React.createElement(\"text\", { key: d.key, x: d.l.text.x + d.offset.x, y: d.l.text.y + d.offset.y, onClick: v.h.onClick(dataInfo.sets.v[i], []), onMouseEnter: v.h.onMouseEnter(dataInfo.sets.v[i], []), onMouseLeave: v.h.onMouseLeave, onContextMenu: v.h.onContextMenu(dataInfo.sets.v[i], []), onMouseMove: v.h.onMouseMove(dataInfo.sets.v[i], []), className: clsx(`setTextStyle-${style.id}`, `${d.l.align}Text-${style.id}`, `${d.l.verticalAlign}Text-${style.id}`, style.classNames.setLabel) },\r\n            style.tooltips && (React.createElement(\"title\", null,\r\n                dataInfo.sets.v[i].name,\r\n                \": \",\r\n                dataInfo.format(dataInfo.sets.v[i].cardinality))),\r\n            dataInfo.sets.v[i].name)))),\r\n        React.createElement(\"g\", { className: clsx(p.onClick && `clickAble-${style.id}`) }, dataInfo.cs.d.map((l, i) => (React.createElement(VennArcSliceSelection, { key: l.key, d: l.v, i: i, slice: l.l, size: size, style: style, data: dataInfo, fill: p.filled, h: v.h, selectionName: selectionName, selected: selectionKey === l.key || (isSet(selection) && dataInfo.cs.has(l.v, selection)), elemOverlap: selectionOverlap, queries: queries, qs: v.qs })))),\r\n        React.createElement(\"g\", null, dataInfo.sets.d.map((l) => isEllipse(l.l) ? (React.createElement(\"ellipse\", { key: l.key, rx: l.l.rx, ry: l.l.ry, transform: `translate(${l.l.cx},${l.l.cy})rotate(${l.l.rotation})`, className: clsx(`stroke-circle-${style.id}`, style.classNames.set), style: style.styles.set })) : (React.createElement(\"circle\", { key: l.key, cx: l.l.cx, cy: l.l.cy, r: l.l.r, className: clsx(`stroke-circle-${style.id}`, style.classNames.set), style: style.styles.set }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KMapCell = /*!#__PURE__*/ React.memo(function KMapCell({ d, i, h, className, data, style }) {\r\n    const l = data.cs.l[i];\r\n    const y = data.cs.scale(d.cardinality);\r\n    const x = (data.cell - data.cs.bandWidth) / 2;\r\n    return (React.createElement(\"g\", { transform: `translate(${l.x}, ${l.y})`, onMouseEnter: h.onMouseEnter(d, []), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, []), onContextMenu: h.onContextMenu(d, []), onMouseMove: h.onMouseMove(d, []), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.sets.format(d.cardinality))),\r\n        React.createElement(\"rect\", { width: data.cell, height: data.cell, className: `fillTransparent-${style.id}` }),\r\n        React.createElement(\"rect\", { x: x, y: y, height: data.cell - y, width: data.cs.bandWidth, className: clsx(`fillPrimary-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }),\r\n        React.createElement(\"text\", { y: y - style.barLabelOffset, x: data.cell / 2, style: style.styles.barLabel, className: clsx(`barTextStyle-${style.id}`, style.classNames.barLabel) }, data.sets.format(d.cardinality))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction generateGridPath(cell, vCells, hCells, level) {\r\n    const h = cell * vCells;\r\n    const w = cell * hCells;\r\n    return [level.x.map((x) => `M ${x * cell},0 l0,${h}`), level.y.map((y) => `M 0,${y * cell} l${w},0`)]\r\n        .flat()\r\n        .join(' ');\r\n}\r\nconst KMapChart = /*!#__PURE__*/ React.memo(function KMapChart({ data, style, size, h }) {\r\n    const csNameOffset = style.cs.offset === 'auto' ? data.cs.labelOffset : style.cs.offset;\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(\"g\", { transform: `translate(${size.w - csNameOffset - 2}, ${size.h - data.cell - 50})` },\r\n            React.createElement(Axis, { scale: data.cs.scale, orient: \"left\", size: data.cell, start: data.cs.barLabelFontSize, style: style }),\r\n            React.createElement(\"text\", { className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${data.cell})rotate(-90)` }, style.cs.name)),\r\n        React.createElement(\"g\", null,\r\n            data.sets.l.map((l, i) => {\r\n                const s = data.sets.v[i];\r\n                const name = s.name;\r\n                return (React.createElement(\"g\", { key: name, onClick: h.onClick(s, []), onMouseEnter: h.onMouseEnter(s, []), onMouseLeave: h.onMouseLeave, onContextMenu: h.onContextMenu(s, []), onMouseMove: h.onMouseMove(s, []), className: clsx(h.hasClick && `clickAble-${style.id}`) }, l.text.map((p, i) => (React.createElement(\"text\", { key: i, transform: `translate(${p.x},${p.y})${!l.hor ? 'rotate(-90)' : ''}`, className: clsx(`setTextStyle-${style.id}`) }, name)))));\r\n            }),\r\n            data.sets.l.map((l, i) => {\r\n                const name = data.sets.v[i].name;\r\n                return (React.createElement(React.Fragment, { key: name }, l.notText.map((p, i) => (React.createElement(\"text\", { key: i, transform: `translate(${p.x},${p.y})${!l.hor ? 'rotate(-90)' : ''}`, className: clsx(`setTextStyle-${style.id}`, `not-${style.id}`) }, name)))));\r\n            })),\r\n        React.createElement(\"g\", { className: clsx(h.hasClick && `clickAble-${style.id}`) }, data.cs.v.map((c, i) => {\r\n            return React.createElement(KMapCell, { key: data.cs.keys[i], d: c, i: i, h: h, style: style, data: data });\r\n        })),\r\n        React.createElement(\"g\", { transform: `translate(${data.grid.x}, ${data.grid.y})` }, data.grid.levels.map((l, i) => (React.createElement(\"path\", { key: i, d: generateGridPath(data.cell, data.grid.vCells, data.grid.hCells, l), className: `gridStyle-${style.id} gridStyle-${style.id}-${i}` }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction KMapQueries$1({ data, style, elemOverlap, secondary, tooltip, suffix, empty, }) {\r\n    const width = data.cs.bandWidth;\r\n    const offset = (data.cell - width) / 2;\r\n    const className = clsx(`fill${suffix}`, !tooltip && `pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { \"data-upset\": secondary ? 'cs-q' : 'cs-s' }, data.cs.v.map((d, i) => {\r\n        const l = data.cs.l[i];\r\n        const key = data.cs.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: l.x + offset, y: l.y + data.cell, height: 0, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const y = data.cs.scale(o);\r\n        const title = tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        return secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${l.x + offset}, ${l.y + y})`, d: `M0,-1 l${width},0 l0,2 l${-width},0 L-${data.triangleSize},-${data.triangleSize} L-${data.triangleSize},${data.triangleSize} Z`, className: className, \"data-i\": i, \"data-cardinality\": o, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (React.createElement(\"rect\", { key: key, x: l.x + offset, y: l.y + y, height: data.cell - y, \"data-i\": i, \"data-cardinality\": o, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KMapQueries = /*!#__PURE__*/ React.memo(function KMapQueries({ data, style, hasHover, secondary, queries, }) {\r\n    const qs = useMemo(() => queries.map((q) => (Object.assign(Object.assign({}, q), { overlap: queryOverlap(q, 'intersection', data.toElemKey) }))), [queries, data.toElemKey]);\r\n    return (React.createElement(\"g\", { className: hasHover && !secondary ? `pnone-${style.id}` : undefined }, qs.map((q, i) => (React.createElement(KMapQueries$1, { key: q.name, data: data, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name })))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction KMapSelection({ data, style, selection, hasHover, }) {\r\n    const empty = style.emptySelection;\r\n    const selectionOverlap = generateSelectionOverlap(selection, data.overlapGuesser, data.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    return (React.createElement(\"g\", { className: hasHover ? `pnone-${style.id}` : undefined }, (selection || empty) && (React.createElement(KMapQueries$1, { data: data, style: style, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName }))));\r\n}\n\nfunction ranged(count, cb) {\r\n    return Array(count)\r\n        .fill(0)\r\n        .map((_, i) => cb(i));\r\n}\r\nfunction generateLevels(numSets) {\r\n    // all lines and the value is the thickness\r\n    const lines = Array(Math.pow(2, numSets)).fill(0);\r\n    ranged(numSets, (i) => {\r\n        const shift = Math.pow(2, i);\r\n        for (let i = 0; i < lines.length; i += shift) {\r\n            lines[i]++;\r\n        }\r\n    });\r\n    const levels = ranged(Math.max(numSets, 1), () => []);\r\n    lines.forEach((l, i) => {\r\n        const level = Math.max(0, l - 1);\r\n        // l -1 cause l is at least 1\r\n        levels[level].push(i);\r\n    });\r\n    // push the last index to the last level\r\n    levels[levels.length - 1].push(lines.length);\r\n    return levels;\r\n}\r\nfunction generate(sets, cs, has, options) {\r\n    const { xBefore, yBefore, cell, hCells, vCells, horizontalSets, verticalSets } = bounds(sets.length, options);\r\n    const s = setLabels(sets.length, options);\r\n    const shifts = generateShiftLookup(sets, hCells, vCells, has);\r\n    const c = cs.map((c) => {\r\n        const [i, j] = shifts.reduceRight((acc, s) => s(c, acc), [0, 0]);\r\n        return {\r\n            x: xBefore + i * cell,\r\n            y: yBefore + j * cell,\r\n        };\r\n    });\r\n    const hLevels = generateLevels(horizontalSets);\r\n    const vLevels = generateLevels(verticalSets);\r\n    return {\r\n        s,\r\n        c,\r\n        cell,\r\n        grid: {\r\n            x: xBefore,\r\n            y: yBefore,\r\n            hCells,\r\n            vCells,\r\n            levels: hLevels.map((l, i) => ({\r\n                x: l,\r\n                y: i < vLevels.length ? vLevels[i] : [],\r\n            })),\r\n        },\r\n    };\r\n}\r\nfunction generateShiftLookup(sets, hCells, vCells, has) {\r\n    return sets.map((s, k) => {\r\n        const index = Math.floor(k / 2);\r\n        const hor = k % 2 === 0;\r\n        const numLabels = Math.pow(2, index);\r\n        const span = (hor ? hCells : vCells) / numLabels / 2;\r\n        return (cs, [i, j]) => {\r\n            if (has(cs, s)) {\r\n                return [i, j];\r\n            }\r\n            if (span > 1) {\r\n                // flip previous and shift\r\n                if (hor) {\r\n                    return [span - 1 - i + span, j];\r\n                }\r\n                return [i, span - 1 - j + span];\r\n            }\r\n            // shift only\r\n            if (hor) {\r\n                return [i + span, j];\r\n            }\r\n            return [i, j + span];\r\n        };\r\n    });\r\n}\r\nfunction setLabels(sets, options) {\r\n    const { xOffset, yOffset, cell, xBefore, yBefore, hCells, vCells } = bounds(sets, options);\r\n    const xAfterEnd = options.width - xOffset;\r\n    const yAfterEnd = options.height - yOffset;\r\n    return ranged(sets, (k) => {\r\n        const index = Math.floor(k / 2);\r\n        const hor = k % 2 === 0;\r\n        const numLabels = Math.pow(2, index);\r\n        const span = (hor ? hCells : vCells) / numLabels / 2;\r\n        const xPos = hor ? xBefore : yBefore;\r\n        const labels = [\r\n            {\r\n                v: true,\r\n                x: xPos + span * cell * 0.5,\r\n            },\r\n            {\r\n                v: false,\r\n                x: xPos + span * cell * 1.5,\r\n            },\r\n        ];\r\n        for (let i = 1; i <= index; i++) {\r\n            // duplicate and mirror\r\n            const offset = span * Math.pow(2, i) * cell;\r\n            const l = labels.length - 1;\r\n            labels.push(...labels.map((li, i) => ({\r\n                v: labels[l - i].v,\r\n                x: li.x + offset,\r\n            })));\r\n        }\r\n        const inAfterGroup = index % 2 === 1;\r\n        const withinGroupIndex = Math.floor(index / 2);\r\n        let yPos = 0;\r\n        if (inAfterGroup) {\r\n            const end = hor ? yAfterEnd : xAfterEnd;\r\n            yPos = end - options.labelHeight * (0.5 + withinGroupIndex);\r\n        }\r\n        else {\r\n            const start = hor ? yOffset : xOffset;\r\n            yPos = start + options.labelHeight * (0.5 + withinGroupIndex);\r\n        }\r\n        if (hor) {\r\n            return {\r\n                hor: true,\r\n                span,\r\n                text: labels.filter((d) => d.v).map((l) => ({ x: l.x, y: yPos })),\r\n                notText: labels.filter((d) => !d.v).map((l) => ({ x: l.x, y: yPos })),\r\n            };\r\n        }\r\n        return {\r\n            hor: false,\r\n            span,\r\n            text: labels.filter((d) => d.v).map((l) => ({ x: yPos, y: l.x })),\r\n            notText: labels.filter((d) => !d.v).map((l) => ({ x: yPos, y: l.x })),\r\n        };\r\n    });\r\n}\r\nfunction bounds(sets, options) {\r\n    const horizontalSets = Math.ceil(sets / 2);\r\n    const verticalSets = Math.floor(sets / 2);\r\n    const hCells = Math.pow(2, horizontalSets);\r\n    const vCells = Math.pow(2, verticalSets);\r\n    const cell = Math.floor(Math.min((options.width - options.labelHeight * verticalSets) / hCells, (options.height - options.labelHeight * horizontalSets) / vCells));\r\n    const xOffset = (options.width - hCells * cell - options.labelHeight * verticalSets) / 2;\r\n    const yOffset = (options.height - vCells * cell - options.labelHeight * horizontalSets) / 2;\r\n    const xBefore = xOffset + Math.ceil(verticalSets / 2) * options.labelHeight;\r\n    const yBefore = yOffset + Math.ceil(horizontalSets / 2) * options.labelHeight;\r\n    return { xOffset, horizontalSets, yOffset, verticalSets, cell, xBefore, yBefore, hCells, vCells };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveKarnaughDataDependent(sets, combinations, size, numericScale, barLabelFontSize, barPadding, setLabelFontSize, tickFontSize, toKey, toElemKey, id, combinationMaxScale) {\r\n    const numericScaleFactory = resolveNumericScale(numericScale);\r\n    const setKeys = sets.map(toKey);\r\n    const cs = areCombinations(combinations)\r\n        ? combinations\r\n        : generateCombinations(sets, Object.assign({\r\n            type: 'distinctIntersection',\r\n        }, combinations !== null && combinations !== void 0 ? combinations : {}));\r\n    const csKeys = cs.map(toKey);\r\n    const has = (v, s) => {\r\n        const sk = toKey(s);\r\n        return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n    };\r\n    const labelHeight = Math.ceil(setLabelFontSize * 1.2);\r\n    const l = generate(sets, cs, has, {\r\n        width: size.area.w,\r\n        height: size.area.h,\r\n        labelHeight,\r\n    });\r\n    const maxCSCardinality = combinationMaxScale !== null && combinationMaxScale !== void 0 ? combinationMaxScale : cs.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const scale = numericScaleFactory(maxCSCardinality, [l.cell, barLabelFontSize], {\r\n        orientation: 'vertical',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const bandWidth = Math.round(l.cell * (1 - barPadding));\r\n    const triangleSize = Math.min(Math.max(2, (bandWidth / 2) * barPadding), 5);\r\n    const guessLabelWidth = (v) => Math.floor((barLabelFontSize / 1.4) * 0.7 * scale.tickFormat()(v).length);\r\n    const largestCSLabelWidth = guessLabelWidth(maxCSCardinality);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        grid: l.grid,\r\n        sets: {\r\n            keys: setKeys,\r\n            l: l.s,\r\n            v: sets,\r\n            labelHeight,\r\n            format: scale.tickFormat(),\r\n        },\r\n        triangleSize,\r\n        cell: l.cell,\r\n        cs: {\r\n            keys: csKeys,\r\n            l: l.c,\r\n            v: cs,\r\n            barLabelFontSize,\r\n            has,\r\n            scale,\r\n            bandWidth,\r\n            labelOffset: largestCSLabelWidth + 9 + 6,\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveStyleDependent(theme, styles, classNames, combinationName, combinationNameAxisOffset, styleId, barLabelOffset, selectionColor, emptySelection, title, description, tooltips) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        emptySelection,\r\n        id: styleId,\r\n        barLabelOffset,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n        cs: {\r\n            name: combinationName,\r\n            offset: combinationNameAxisOffset,\r\n        },\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KarnaughMap = /*!#__PURE__*/ React.forwardRef(function KarnaughMap(props, ref) {\r\n    const p = fillKarnaughMapDefaults(props);\r\n    const { queries = [], fontSizes, selection = null } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.axisTick,\r\n            fontSizes.barLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.strokeColor,\r\n            p.selectionColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.axisTick,\r\n        fontSizes.barLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.strokeColor,\r\n        p.selectionColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const style = useMemo(() => deriveStyleDependent(p.theme, p.styles, p.classNames, p.combinationName, p.combinationNameAxisOffset, styleId, p.barLabelOffset, p.selectionColor, p.emptySelection, p.title, p.description, p.tooltips), [\r\n        p.theme,\r\n        p.styles,\r\n        p.classNames,\r\n        p.combinationName,\r\n        p.combinationNameAxisOffset,\r\n        styleId,\r\n        p.barLabelOffset,\r\n        p.selectionColor,\r\n        p.emptySelection,\r\n        p.title,\r\n        p.description,\r\n        p.tooltips,\r\n    ]);\r\n    const size = useMemo(() => deriveVennSizeDependent(p.width, p.height, p.padding, p.id), [p.width, p.height, p.padding, p.id]);\r\n    const data = useMemo(() => deriveKarnaughDataDependent(p.sets, p.combinations, size, p.numericScale, p.barLabelOffset + parseFontSize(fontSizes.barLabel), p.barPadding, parseFontSize(fontSizes.setLabel), parseFontSize(fontSizes.axisTick), p.toKey, p.toElemKey, p.id, p.combinationMaxScale), [\r\n        p.sets,\r\n        p.combinations,\r\n        size,\r\n        p.numericScale,\r\n        p.barLabelOffset,\r\n        fontSizes.barLabel,\r\n        p.barPadding,\r\n        fontSizes.axisTick,\r\n        fontSizes.setLabel,\r\n        p.toKey,\r\n        p.toElemKey,\r\n        p.id,\r\n        p.combinationMaxScale,\r\n    ]);\r\n    const h = useHandler(p);\r\n    const selectionName = generateSelectionName(selection);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .axisTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.axisTick)}\n    text-anchor: end;\n  }\n  .barTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: middle;\n  }\n  .setTextStyle-${style.id} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: middle;\n    dominant-baseline: central;\n  }\n  .cChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n  }\n\n  .not-${style.id} {\n    text-decoration: overline;\n  }\n\n  .axisLine-${styleId} {\n    fill: none;\n    stroke: ${p.textColor};\n  }\n\n  .gridStyle-${style.id} {\n    fill: none;\n    stroke: ${p.strokeColor};\n    stroke-linecap: round;\n  }\n  .gridStyle-${style.id}-1 {\n    stroke-width: 2;\n  }\n  .gridStyle-${style.id}-2 {\n    stroke-width: 3;\n  }\n\n  ${rulesHelper.fill}\n  ${rulesHelper.export}\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${data.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useExportChart(data, p, 'kmap');\r\n    const maxWidth = data.sets.l.reduce((acc, d) => Math.min(acc, d.text[0].x - data.sets.labelHeight), size.area.w);\r\n    return (React.createElement(SVGWrapper, { rules: rules, style: style, size: size, p: p, data: data, tRef: ref, selectionName: selectionName, h: h, exportChart: exportChart },\r\n        React.createElement(UpSetTitle, { style: style, width: maxWidth }),\r\n        React.createElement(KMapChart, { style: style, data: data, h: h, size: size }),\r\n        React.createElement(KMapSelection, { style: style, data: data, hasHover: h.hasHover, selection: selection }),\r\n        React.createElement(KMapQueries, { style: style, data: data, hasHover: h.hasHover, queries: queries, secondary: h.hasHover || selection != null })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst defaults = {\r\n    background: '#F4F4F4',\r\n    color: '#A6A8AB',\r\n    secondaryColor: '#E1E2E3',\r\n};\r\nfunction prepare(props) {\r\n    var _a, _b, _c, _d;\r\n    const color = (_a = props.color) !== null && _a !== void 0 ? _a : defaults.color;\r\n    const secondary = (_b = props.secondaryColor) !== null && _b !== void 0 ? _b : defaults.secondaryColor;\r\n    const rest = Object.assign({}, props);\r\n    const background = (_c = props.background) !== null && _c !== void 0 ? _c : defaults.background;\r\n    delete rest.color;\r\n    delete rest.secondaryColor;\r\n    delete rest.background;\r\n    if (background) {\r\n        rest.style = Object.assign({ background }, (_d = rest.style) !== null && _d !== void 0 ? _d : {});\r\n    }\r\n    return { color, secondary, rest };\r\n}\r\n/**\r\n * UpSetJS Skeleton a simple UpSetJS skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst UpSetJSSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function UpSetJSSkeleton(props, ref) {\r\n    const { color, secondary, rest } = prepare(props);\r\n    const wi = 20;\r\n    const padding = 10;\r\n    const sWidth = 75;\r\n    const sY = 110;\r\n    const cHeight = 100;\r\n    const csX = 85;\r\n    const cOffsets = [10, 20, 35, 60, 65, 80, 90];\r\n    const sOffsets = [50, 30, 15];\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref }, rest),\r\n        cOffsets.map((offset, i) => (React.createElement(\"rect\", { key: i, x: csX + i * (wi + padding), y: offset, width: wi, height: cHeight - offset, fill: color }))),\r\n        sOffsets.map((offset, i) => (React.createElement(\"rect\", { key: i, x: offset, y: sY + i * (wi + padding), width: sWidth - offset, height: wi, fill: color }))),\r\n        cOffsets.map((_, i) => sOffsets.map((_, j) => {\r\n            const filled = j === 2 - i || (i === 3 && j > 0) || (i === 4 && j !== 1) || (i === 5 && j < 2) || i === 6;\r\n            return (React.createElement(\"circle\", { key: `${i}x${j}`, cx: csX + i * (wi + padding) + wi / 2, cy: sY + j * (wi + padding) + wi / 2, r: wi / 2, fill: filled ? color : secondary }));\r\n        })),\r\n        React.createElement(\"rect\", { x: \"182\", y: \"150\", width: \"6\", height: \"30\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"212\", y: \"120\", width: \"6\", height: \"60\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"242\", y: \"120\", width: \"6\", height: \"30\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"272\", y: \"120\", width: \"6\", height: \"60\", fill: color })));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * VennDiagram Skeleton a simple VennDiagram skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst VennDiagramSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function VennDiagramSkeleton(props, ref) {\r\n    const { color, secondary, rest } = prepare(props);\r\n    const padding = 10;\r\n    const l = layoutImpl(3, 300 - padding * 2, 3200 - padding * 2);\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref }, rest),\r\n        l.sets.map((set, i) => (React.createElement(\"circle\", { key: i, cx: set.cx, cy: set.cy + padding, r: set.r, fill: secondary }))),\r\n        l.sets.map((set, i) => (React.createElement(\"circle\", { key: i, cx: set.cx, cy: set.cy + padding, r: set.r, stroke: color, fill: \"none\" })))));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * KV Diagram Skeleton a simple KarnaughMap skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst KarnaughMapSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function KarnaughMapSkeleton(props, ref) {\r\n    const { rest, color, secondary } = prepare(props);\r\n    // const padding = 10;\r\n    const { xBefore, yBefore, cell, hCells, vCells } = bounds(2, {\r\n        width: 270,\r\n        height: 170,\r\n        labelHeight: 20,\r\n    });\r\n    const gw = hCells * cell;\r\n    const gh = vCells * cell;\r\n    const v1 = 0.9;\r\n    const v2 = 0.5;\r\n    const v3 = 0.26;\r\n    const v4 = 0.75;\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref, fontFamily: \"sans-serif\" }, rest),\r\n        React.createElement(\"g\", { transform: `translate(${xBefore + 10},${yBefore + 10})` },\r\n            React.createElement(\"text\", { x: cell * 0.5, y: -3, fill: color, textAnchor: \"middle\" }, \"A\"),\r\n            React.createElement(\"text\", { x: cell * 1.5, y: -3, fill: color, textAnchor: \"middle\", style: { textDecoration: 'overline' } }, \"A\"),\r\n            React.createElement(\"text\", { x: -3, y: cell * 0.5, fill: color, textAnchor: \"end\", dominantBaseline: \"central\" }, \"B\"),\r\n            React.createElement(\"text\", { x: -3, y: cell * 1.5, fill: color, textAnchor: \"end\", dominantBaseline: \"central\", style: { textDecoration: 'overline' } }, \"B\"),\r\n            React.createElement(\"rect\", { x: cell * 0.1, y: cell * (1 - v1), height: cell * v1, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 1.1, y: cell * (1 - v2), height: cell * v2, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 0.1, y: cell * (1 - v3 + 1), height: cell * v3, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 1.1, y: cell * (1 - v4 + 1), height: cell * v4, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"path\", { d: `M0,0 l${gw},0 l0,${gh} l${-gw},0 l0,${-gh} M${gw / 2},0 l0,${gh} M0,${gh / 2} l${gw},0`, fill: \"none\", stroke: color }))));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst DEG2RAD = (1 / 180) * Math.PI;\r\nfunction pointAtCircle(cx, cy, radius, angle) {\r\n    return {\r\n        x: cx + Math.cos(angle * DEG2RAD) * radius,\r\n        y: cy + Math.sin(angle * DEG2RAD) * radius,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction center(circles) {\r\n    const sumX = circles.reduce((acc, a) => acc + a.x, 0);\r\n    const sumY = circles.reduce((acc, a) => acc + a.y, 0);\r\n    return {\r\n        x: sumX / circles.length,\r\n        y: sumY / circles.length,\r\n    };\r\n}\r\nfunction angleAtCircle(p, c) {\r\n    const x = p.x - c.x;\r\n    const y = p.y - c.y;\r\n    return Math.atan2(y, x) / DEG2RAD;\r\n}\r\nfunction createVennJSAdapter(layout, options) {\r\n    return {\r\n        maxSets: Infinity,\r\n        compute(sets, combinations, width, height) {\r\n            const overlaps = combinations.map((c) => ({ sets: Array.from(c.sets).map((s) => s.name), size: c.cardinality }));\r\n            const r = layout(overlaps, Object.assign({}, {\r\n                width,\r\n                height,\r\n                distinct: true,\r\n            }, options !== null && options !== void 0 ? options : {}));\r\n            const singleSets = r.filter((d) => d.data.sets.length === 1);\r\n            const setNames = new Map(sets.map((d, i) => [d.name, i]));\r\n            const setCircles = singleSets.map((d) => d.circles[0]);\r\n            const eulerCenter = center(setCircles);\r\n            const asArc = (a) => ({\r\n                x2: a.p1.x,\r\n                y2: a.p1.y,\r\n                cx: a.circle.x,\r\n                cy: a.circle.y,\r\n                sweep: true,\r\n                large: a.width > a.circle.radius,\r\n                ref: setCircles.findIndex((d) => Math.abs(d.x - a.circle.x) < 0.05 && Math.abs(d.y - a.circle.y) < 0.05),\r\n                mode: 'i',\r\n            });\r\n            return {\r\n                sets: singleSets.map((d) => {\r\n                    const c = d.circles[0];\r\n                    const angle = angleAtCircle(c, eulerCenter);\r\n                    return {\r\n                        cx: c.x,\r\n                        cy: c.y,\r\n                        r: c.radius,\r\n                        align: angle > 90 ? 'end' : 'start',\r\n                        verticalAlign: 'bottom',\r\n                        text: pointAtCircle(c.x, c.y, c.radius * 1.1, angle),\r\n                    };\r\n                }),\r\n                intersections: r.map((d) => {\r\n                    const arcs = d.arcs;\r\n                    const text = {\r\n                        x: d.text.x,\r\n                        y: d.text.y,\r\n                    };\r\n                    if (arcs.length === 0) {\r\n                        return {\r\n                            sets: d.data.sets.map((s) => setNames.get(s)),\r\n                            text,\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            arcs: [],\r\n                        };\r\n                    }\r\n                    if (arcs.length === 1) {\r\n                        const c = d.arcs[0].circle;\r\n                        return {\r\n                            sets: d.data.sets.map((s) => setNames.get(s)),\r\n                            text,\r\n                            x1: d.arcs[0].p2.x,\r\n                            y1: c.y - c.radius,\r\n                            arcs: [asArc(d.arcs[0]), Object.assign(asArc(d.arcs[0]), { y2: c.y - c.radius })],\r\n                            path: d.distinctPath || d.path,\r\n                        };\r\n                    }\r\n                    return {\r\n                        sets: d.data.sets.map((s) => setNames.get(s)),\r\n                        text,\r\n                        x1: d.arcs[0].p2.x,\r\n                        y1: d.arcs[0].p2.y,\r\n                        arcs: d.arcs.map((e) => asArc(e)),\r\n                        path: d.distinctPath || d.path,\r\n                    };\r\n                }),\r\n            };\r\n        },\r\n    };\r\n}\n\n/**\r\n * @upsetjs/bundle\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction widthRatios(value) {\r\n    return value == null || (Array.isArray(value) && value.length >= 2 && value.every((v) => typeof v === 'number'));\r\n}\r\nfunction heightRatios(value) {\r\n    return value == null || (Array.isArray(value) && value.length >= 1 && value.every((v) => typeof v === 'number'));\r\n}\r\nfunction setLabelAlignment(value) {\r\n    return value == null || value === 'left' || value === 'center' || value === 'right';\r\n}\r\nfunction sets(value) {\r\n    return Array.isArray(value) && value.every(isSet);\r\n}\r\nfunction combinations(value) {\r\n    return (value == null || (Array.isArray(value) && value.every(isSetCombination)) || isGenerateSetCombinationOptions(value));\r\n}\r\nfunction selection(value) {\r\n    return value == null || Array.isArray(value) || isSetLike$1(value);\r\n}\r\nfunction onHover(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onClick(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onContextMenu(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onMouseMove(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction queries(value) {\r\n    return !value || (Array.isArray(value) && value.every(isUpSetQuery));\r\n}\r\nfunction stringOrFalse(value) {\r\n    return value == null || typeof value === 'string' || value === false;\r\n}\r\nfunction setLabelOffsets(value) {\r\n    return (value == null ||\r\n        (Array.isArray(value) && value.every((v) => (null  ))));\r\n}\r\nfunction theme(value) {\r\n    return value == null || value === 'light' || value === 'dark' || value === 'vega';\r\n}\r\nfunction classNames(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => MULTI_STYLE_KEYS.includes(k) && typeof value[k] === 'string'));\r\n}\r\nfunction fontSizes(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => FONT_SIZES_KEYS.includes(k) && typeof value[k] === 'string'));\r\n}\r\nfunction numericScale(value) {\r\n    return value == null || value === 'linear' || value === 'log' || typeof value === 'function';\r\n}\r\nfunction bandScale(value) {\r\n    return value == null || value === 'band' || typeof value === 'function';\r\n}\r\nfunction axisOffset(value) {\r\n    return value == null || value === 'auto' || typeof value === 'number';\r\n}\r\nfunction style(value) {\r\n    return value == null || typeof value === 'object';\r\n}\r\nfunction styles(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => MULTI_STYLE_KEYS.includes(k)));\r\n}\r\nfunction exportButtons(value) {\r\n    return (value == null ||\r\n        typeof value === 'boolean' ||\r\n        Object.keys(value).every((k) => EXPORT_OPTION_KEYS.includes(k) && typeof value[k] === 'boolean'));\r\n}\n\nvar validators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    widthRatios: widthRatios,\n    heightRatios: heightRatios,\n    setLabelAlignment: setLabelAlignment,\n    sets: sets,\n    combinations: combinations,\n    selection: selection,\n    onHover: onHover,\n    onClick: onClick,\n    onContextMenu: onContextMenu,\n    onMouseMove: onMouseMove,\n    queries: queries,\n    stringOrFalse: stringOrFalse,\n    setLabelOffsets: setLabelOffsets,\n    theme: theme,\n    classNames: classNames,\n    fontSizes: fontSizes,\n    numericScale: numericScale,\n    bandScale: bandScale,\n    axisOffset: axisOffset,\n    style: style,\n    styles: styles,\n    exportButtons: exportButtons\n});\n\nexport { KarnaughMap, KarnaughMapSkeleton, UpSetJS, UpSetJSSkeleton, VennDiagram, VennDiagramSkeleton, createVennJSAdapter, UpSetJS as default, downloadUrl, exportSVG, exportVegaLite, fillDefaults, fillDefaultsG, fillKarnaughMapDefaults, fillKarnaughMapDefaultsG, fillVennDiagramDefaults, fillVennDiagramDefaultsG, getDefaultTheme, isEllipse, validators as propValidators, toUpSetJSDump, toUpSetJSStaticDump };\n//# sourceMappingURL=index.js.map\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { useEffect, useState } from 'react'\nimport UpSetJS, {\n  extractSets,\n  generateCombinations,\n  ISet,\n  ISetCombinations,\n  ISetLike,\n  ISets,\n  UpSetFontSizes,\n} from '@upsetjs/react'\nimport { QueryBundleRequest } from '@sage-bionetworks/synapse-types'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseConstants } from '../../utils'\nimport { SizeMe } from 'react-sizeme'\nimport getColorPalette from '../ColorGradient/ColorGradient'\nimport { parseEntityIdFromSqlStatement } from '../../utils/functions/SqlFunctions'\nimport { ErrorBanner } from '../error/ErrorBanner'\nimport loadingScreen from '../LoadingScreen/LoadingScreen'\nimport LargeButton from '../../components/styled/LargeButton'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\n\nexport type UpsetPlotProps = {\n  sql: string // first column should contain values, second column should contain a single set value.  ie. SELECT distinct individualID, assay FROM syn20821313\n  rgbIndex: number // color plot based on portal\n  maxBarCount?: number // will show all if not set\n  setName?: string // instead of \"Set Size\"\n  combinationName?: string // instead of \"Intersection Size\"\n  height?: number\n  summaryLinkText?: string // text for home page link below chart\n  summaryLink?: string // url for home page link below chart\n}\n\nexport type UpsetPlotData = {\n  sets: ISets<any>\n  combinations: ISetCombinations<any>\n}\n/**\n * Upset plot.  See https://medium.com/@sgratzl/upset-js-javascript-tutorial-1b84bfd6896d\n * Currently this is driven by a Synapse Table/View, but we may want to alter it to read in the data from a flat file instead.\n */\nexport const UpsetPlot: React.FunctionComponent<UpsetPlotProps> = ({\n  sql,\n  rgbIndex,\n  maxBarCount,\n  setName,\n  combinationName,\n  height = 700,\n  summaryLinkText,\n  summaryLink,\n}) => {\n  const { accessToken } = useSynapseContext()\n  const [isLoading, setIsLoading] = useState<boolean>()\n  const [data, setData] = useState<UpsetPlotData>()\n  const [error, setError] = useState<string>()\n  const [selection, setSelection] = useState(null as ISetLike<any> | null)\n\n  const { colorPalette } = getColorPalette(rgbIndex, 2)\n  const updateFontSizes: UpSetFontSizes = {\n    setLabel: '14px',\n  }\n\n  useEffect(() => {\n    let isCancelled: boolean = false\n    const getPlotData = async () => {\n      setIsLoading(true)\n      try {\n        const entityId = parseEntityIdFromSqlStatement(sql)\n        const partMask = SynapseConstants.BUNDLE_MASK_QUERY_RESULTS\n        const queryRequest: QueryBundleRequest = {\n          partMask,\n          concreteType:\n            'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n          entityId,\n          query: {\n            sql,\n          },\n        }\n        const { queryResult } = await SynapseClient.getFullQueryTableResults(\n          queryRequest,\n          accessToken,\n        )\n        // transform query data into plot data, and store.\n        // collect all values for each key\n        const keyValuesMap: Record<string, { name: string; sets: string[] }> =\n          {}\n        // keyValuesMap looks like { 'A': {name: 'A', sets: ['S1', 'S2'] }, 'B': { name: 'B', sets: ['S1'] }, ... }\n        // It's a little redundant, but makes the next step much easier.\n\n        const caseInsensitiveSetNames: Record<string, string> = {}\n        // caseInsensitiveSetNames looks like { 'RNASEQ': 'rnaSeq', 'NOMe-SEQ': 'NOMe-seq'}.\n\n        for (const row of queryResult?.queryResults.rows ?? []) {\n          for (let j = 1; j < row.values.length; j += 1) {\n            const rowValues: string[] = row.values as string[]\n            if (rowValues.some(value => value === null)) {\n              console.warn('Row has null value(s) when no nulls expected')\n            }\n\n            const key = rowValues[0]\n            let newValue = rowValues[j]\n            keyValuesMap[key] = keyValuesMap[key] || {}\n            keyValuesMap[key].name = key\n\n            keyValuesMap[key].sets = keyValuesMap[key].sets || []\n            const found = keyValuesMap[key].sets.find((v: any) => v == newValue)\n            if (!found && newValue) {\n              if (caseInsensitiveSetNames[newValue.toUpperCase()]) {\n                newValue = caseInsensitiveSetNames[newValue.toUpperCase()]\n              } else {\n                caseInsensitiveSetNames[newValue.toUpperCase()] = newValue\n              }\n              keyValuesMap[key].sets.push(newValue)\n            }\n          }\n        }\n        // now create the expected elems set\n        const elems = Object.values(keyValuesMap)\n        // elems looks like [{ name: 'A', sets: ['S1', 'S2'] }, { name: 'B', sets: ['S1'] }, ...]\n        const sets = extractSets(elems)\n        // PORTALS-1673: sort by assay name\n        const sortedSets = (sets as ISet[]).sort((a, b) => {\n          return ('' + b.name).localeCompare(a.name)\n        })\n\n        const combinations = generateCombinations(sortedSets, {\n          type: 'intersection',\n          min: 1,\n          limit: maxBarCount,\n          order: 'cardinality:desc',\n        })\n        if (!isCancelled) {\n          setData({ sets, combinations })\n          setIsLoading(false)\n        }\n      } catch (err) {\n        if (!isCancelled) {\n          setIsLoading(false)\n          let errorMessage = err['reason']\n          if (!errorMessage) {\n            console.error(err)\n            errorMessage = 'Error retrieving data'\n          }\n          setError(errorMessage)\n        }\n      }\n    }\n    getPlotData()\n    return () => {\n      isCancelled = true\n    }\n  }, [sql, accessToken])\n\n  return (\n    <>\n      {isLoading && loadingScreen}\n      {!isLoading && data && (\n        <SizeMe>\n          {({ size }) => (\n            <div className=\"UpsetPlot\">\n              <UpSetJS\n                sets={data.sets}\n                combinations={data.combinations}\n                width={size.width!}\n                height={height}\n                onHover={setSelection}\n                // onClick={setSelection}\n                selection={selection}\n                color={colorPalette[0]}\n                selectionColor={colorPalette[0]}\n                hasSelectionOpacity={0.3}\n                // alternatingBackgroundColor={false}\n                setName={setName?.toUpperCase()}\n                combinationName={combinationName?.toUpperCase()}\n                fontFamily=\"Lato, sans-serif\"\n                fontSizes={updateFontSizes}\n                exportButtons={false}\n                notMemberColor=\"transparent\"\n              />\n              {summaryLink && summaryLinkText && (\n                <div className=\"UpsetPlot__summary\">\n                  <LargeButton\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    href={summaryLink}\n                  >\n                    {summaryLinkText}\n                  </LargeButton>\n                </div>\n              )}\n            </div>\n          )}\n        </SizeMe>\n      )}\n      <ErrorBanner error={error} />\n    </>\n  )\n}\n\nexport default UpsetPlot\n"],"names":["len","a","setOverlapFactory","toElemKey","elems","setA","same","b","intersection","e","setB","setElemOverlapFactory","union","setElemIntersectionFactory","arr","isElemQuery","q","isCalcQuery","isSetQuery","queryOverlap","query","what","f","s","queryElemOverlap","isBaseSet","v","vt","isSet","isSetCombination","isSetLike","byName","byCardinality","byDegree","byComposite","func","acc","negate","byGroup","sets","fixNotFound","aIndex","bIndex","toOrder$1","order","o","postprocessCombinations","combinations","options","r","SET_JOINERS","parseColor","color","hex","rgb","mergeColors","colors","d","g","generateName$1","combo","setIndex","joiner","sorted","generateSet","type","name","mergeIntersection","lookup","toKey","merged","small","big","keySet","bigLookup","l","i","key","mergeUnion","generateEmptySet","notPartOfAnySet","allElements","lookupArr","k","generateCombinations","min","max","empty","mergeColors$1","setElems","setDirectElems","setKeyElems","calc","push","others","othersSets","sDistinct","generateLevel","degree","sub","j","ab","degree1","toOrder","postprocessSets","extractSets","elements","accOrOptions","_a","elem","set","isUniverse","common","toKey$1","aInB","bInA","keyedCombinations","c","combinedKey","generateDistinctOverlapFunction","fallback","combinationsBySet","hasA","hasB","generateIntersectionOverlapFunction","combinationsByKey","generateUnionOverlapFunction","generateOverlapFunction","firstType","compressLine","line","start","compressMatrix","matrix","rows","flat","generateOverlapLookup","compress","data","overlapF","overlap","compressed","encodedLength","bandScale","domain","size","padding","blocks","step","bandwidth","scale","index","hasOverlap","positions","heights","stride","pos_i","pos_n","right","left","ensureLast","ticks","heightPerTick","toStr","last","pos_l","pos_max","genTicks","values","checkValues","toStr$1","niceFactors","maxCount","digits","factor","factors","lower","range$1","inc","distributeTicks$1","linearScale","range","n","count","widthPerChar","orders","generateInnerTicks","vv","distributeTicks","logScale","cv","compressIndicesArray","encoded","startIndex","expected","toIndicesArray","toIndex","sortAble","base","baseLength","withColor","toDump","config","indicesOptions","bySetKey","byCombinationKey","toSetRef","setLookup","setKeys","generateName","toStaticDump","toSelectionSetRef","overlaps","shortNames","compressCombination","partOf","ref","extractStyleId","node","extractTitle","styleId","_b","extractDescription","EMPTY_OBJECT","EMPTY_ARRAY$2","DEFAULT_FONT_SIZES","DEFAULT_WIDTH_RATIO","DEFAULT_HEIGHT_RATIO","DEFAULT_COMBINATIONS","FONT_SIZES_KEYS","OVERFLOW_OPACITY_FACTOR","OVERFLOW_PADDING_FACTOR","lightTheme","darkTheme","vegaTheme","getDefaultTheme","theme","areCombinations$1","styleFactory","rules","React","fillGeneric","props","fillDefaultsG","fillDefaults","createSVG","toRemove","clone","exportSVG","title","chartTitle","url","downloadUrl","toPNG","purl","canvas","bb","ctx","img","resolve","png","doc","createVegaSpec","svg","_c","_d","_e","resolveStyle","barLabelOffset","fillNotMember","textColor","csName","setName","translateX","translateY","setWidth","csWidth","csHeight","labelWidth","setHeight","radius","hasPrimarySelection","hasQuery","hasSelection","selectionColor","highlightedCombination","filter","exportVegaLite","spec","THEME_KEYS","LAYOUT_KEYS","STYLE_KEYS","DUMP_KEYS","toDumpProps","full","value","defaultValue","fKey","fValue","fDefaultValue","toUpSetJSDump","dump","author","mode","toUpSetJSStaticDump","exportDumpData","toElemIndex","isSetLike$1","exportStaticDumpData","exportDump","MAX_URL_LENGTH","exportSharedLink","arg","LZString","r2","arg2","w","clsx","classNames","generateId","_args","elemOverlapOf","noGuessPossible","generateSelectionOverlap","selection","overlapGuesser","noOverlap","ss","guess","generateSelectionName","elemElemOverlapOf","parseFontSize","toAnchor","alignment","resolveNumericScale","factory","resolveBandScale","bandScale$1","areCombinations","deriveDataDependent","sizes","numericScale","barLabelFontSize","dotPadding","barPadding","tickFontSize","combinationAddons","id","setMaxScale","combinationMaxScale","numericScaleFactory","bandScaleFactory","cs","csKeys","combinationX","dataCSCardinality","maxCSCardinality","combinationYEnd","combinationY","labelSize","text","guessLabelWidth","dataSetCardinality","maxSetCardinality","largestSetLabelWidth","largestCSLabelWidth","addon","tick","setShift","setX","setY","triangleSize","sk","deriveSizeDependent","width","height","margin","widthRatios","heightRatios","setAddons","setAddonPadding","combinationAddonPadding","setAddonsBefore","setAddonsAfter","combinationAddonsBefore","combinationAddonsAfter","h","labelsWidth","combinationHeight","deriveStyleDependent$1","styles","combinationName","combinationNameAxisOffset","setNameAxisOffset","emptySelection","description","tooltips","setLabelAlignment","ExportButtons","transform","exportButtons","exportChart","svgWidth","pngWidth","vegaWidth","dumpWidth","shareWidth","space","buttons","QueryLegend","queries","x","style","HorizontalTick","pos","spacing","tickSizeInner","orient","VerticalTick","Axis","tickSizeOuter","tickPadding","range0","range1","Tick","MultilineText","dy","className","useRef","lines","setLines","useState","useLayoutEffect","lineWidth","p","num","used","UpSetTitle","descriptionWidth","noop","wrap","addons","evt","addonPositionGenerator","total","beforeAcc","afterAcc","mergeColor","prop","UpSetAxis","setPosGen","combinationPosGen","csNameOffset","setNameOffset","UpSetDot","cx","cy","fill","computeOverflowValues","scaled","CombinationChart","children","yValues","genPosition","y","offset","SetChart","xValues","anchorOffset","UpSetChart","setChildrenFactory","combinationChildrenFactory","CombinationSelectionChart","elemOverlap","secondary","tooltip","suffix","totalHeight","content","SetSelectionChart","totalWidth","EMPTY_ARRAY$1","UpSetQueries","hasHover","someAddon","qs","useMemo","wrapAddon","overlapper","LabelsSelection","UpSetSelectionChart","EMPTY_ARRAY","UpSetSelection","selectionOverlap","selectionName","selectionElemOverlap","propRule","baseRules","fontFamily","fontSizes","hasS","hasSelectionOpacity","useHandler","onClick","UpSetJS","styleInfo","sizeInfo","dataInfo","rulesHelper","useCallback","UpsetPlot","sql","rgbIndex","maxBarCount","summaryLinkText","summaryLink","accessToken","useSynapseContext","isLoading","setIsLoading","setData","error","setError","setSelection","colorPalette","getColorPalette","updateFontSizes","useEffect","isCancelled","entityId","parseEntityIdFromSqlStatement","queryRequest","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","queryResult","SynapseClient","keyValuesMap","caseInsensitiveSetNames","row","rowValues","newValue","sortedSets","err","errorMessage","jsxs","Fragment","loadingScreen","jsx","SizeMe","LargeButton","ErrorBanner"],"mappings":"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","x_google_ignoreList":[0,1]}