import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-BZQkX1dI.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-QrmKiVVJ.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DAhKcxRH.js";import"./SynapseConstants-CllGbX7S.js";import"./OrientationBanner-BHKPAHO-.js";import"./index-icPz55-X.js";import"./index-bqo5TgK4.js";import"./iframe-BWhMz8_p.js";import"./spreadSx-CwcO6WA9.js";import"./react--tzJNvOD.js";import"./FullWidthAlert-COW_t_J5.js";import"./Alert-B5eONfD9.js";import"./createTheme-DafKpa7R.js";import"./DefaultPropsProvider-D5B1AITN.js";import"./useSlot-Bf19Xh20.js";import"./useForkRef-DBPyDf3S.js";import"./createSimplePaletteValueFilter-sGs_ku48.js";import"./createSvgIcon-aLr9nUbl.js";import"./Close-CPe9-B-_.js";import"./IconButton-BFO5f6ua.js";import"./useTimeout-BRiyRUpE.js";import"./ButtonBase-BIKkVoec.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C5IYZviS.js";import"./Paper-B113B_DA.js";import"./useTheme-CNSIRb32.js";import"./useTheme-DpXojDgV.js";import"./Stack-Cw4rnpPd.js";import"./extendSxProp-Cph9rC05.js";import"./getThemeProps-D8p_Hs8v.js";import"./Box-DQNN0Wyh.js";import"./AlertTitle-DN1AtXzx.js";import"./Typography-bPn8uOYp.js";import"./index-BfprNM_h.js";import"./ClickAwayListener-CT2CFK1B.js";import"./getReactElementRef-C8P0G6nS.js";import"./index-B7iH1pIn.js";import"./index-BzeBLNAY.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DBGKzkJE.js";import"./Tooltip-CDH_CeG3.js";import"./index-DxZ0auih.js";import"./useControlled-Dgt9tsee.js";import"./Popper-BC3eKN7L.js";import"./Button-BBNinPG5.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-B9K678_k.js";import"./QueryClientProvider-U8qNJQn1.js";import"./Link-B1XQuswW.js";import"./Collapse-PsOCgvT3.js";import"./_baseUniq-BMskdysw.js";import"./_Uint8Array-Cy3P2JvP.js";import"./isArray-CgWF71ud.js";import"./_getTag-0OUQPZLe.js";import"./isEqual-BZJfvA5d.js";import"./merge-BufnmKa6.js";import"./_initCloneObject-BLOZowN2.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CA57bcmY.js";import"./inputBaseClasses-BneXfZmT.js";import"./calculateFriendlyFileSize-BU-OHEIH.js";import"./CheckCircleTwoTone-BSWQP55r.js";import"./InfoTwoTone-B_9ZJfKP.js";import"./useMutation-qZdexzOi.js";import"./dayjs.min-BSEUi5J-.js";import"./chunk-AYJ5UCUI-CEjdLjLk.js";import"./cloneDeep-DOM1lfBU.js";import"./Skeleton-DnCTojLF.js";import"./SkeletonButton-mvGXkjK0.js";import"./SkeletonInlineBlock-CKEpyr_O.js";import"./SkeletonTable-40xKCFJl.js";import"./times-D9ImHEw3.js";import"./toInteger-Gu2MRNS5.js";import"./isSymbol-IbNxRAH2.js";import"./SkeletonParagraph-DeRnjt0A.js";import"./MarkdownSynapse-BEZuFlUx.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
