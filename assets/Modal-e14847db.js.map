{"version":3,"file":"Modal-e14847db.js","sources":["../../../../node_modules/.pnpm/@mui+base@5.0.0-beta.23_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/FocusTrap/FocusTrap.js","../../../../node_modules/.pnpm/@mui+base@5.0.0-beta.23_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/unstable_useModal/ModalManager.js","../../../../node_modules/.pnpm/@mui+base@5.0.0-beta.23_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/unstable_useModal/useModal.js","../../../../node_modules/.pnpm/@mui+material@5.14.17_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Modal/modalClasses.js","../../../../node_modules/.pnpm/@mui+material@5.14.17_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Modal/Modal.js"],"sourcesContent":["'use client';\n\n/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, elementAcceptingRef, unstable_useForkRef as useForkRef, unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n// Inspired by https://github.com/focus-trap/tabbable\nconst candidatesSelector = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'].join(',');\nfunction getTabIndex(node) {\n  const tabindexAttr = parseInt(node.getAttribute('tabindex') || '', 10);\n  if (!Number.isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n  if (node.contentEditable === 'true' || (node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n  return node.tabIndex;\n}\nfunction isNonTabbableRadio(node) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio') {\n    return false;\n  }\n  if (!node.name) {\n    return false;\n  }\n  const getRadio = selector => node.ownerDocument.querySelector(`input[type=\"radio\"]${selector}`);\n  let roving = getRadio(`[name=\"${node.name}\"]:checked`);\n  if (!roving) {\n    roving = getRadio(`[name=\"${node.name}\"]`);\n  }\n  return roving !== node;\n}\nfunction isNodeMatchingSelectorFocusable(node) {\n  if (node.disabled || node.tagName === 'INPUT' && node.type === 'hidden' || isNonTabbableRadio(node)) {\n    return false;\n  }\n  return true;\n}\nfunction defaultGetTabbable(root) {\n  const regularTabNodes = [];\n  const orderedTabNodes = [];\n  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {\n    const nodeTabIndex = getTabIndex(node);\n    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {\n      return;\n    }\n    if (nodeTabIndex === 0) {\n      regularTabNodes.push(node);\n    } else {\n      orderedTabNodes.push({\n        documentOrder: i,\n        tabIndex: nodeTabIndex,\n        node: node\n      });\n    }\n  });\n  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map(a => a.node).concat(regularTabNodes);\n}\nfunction defaultIsEnabled() {\n  return true;\n}\n\n/**\n * Utility component that locks focus inside the component.\n *\n * Demos:\n *\n * - [Focus Trap](https://mui.com/base-ui/react-focus-trap/)\n *\n * API:\n *\n * - [FocusTrap API](https://mui.com/base-ui/react-focus-trap/components-api/#focus-trap)\n */\nfunction FocusTrap(props) {\n  const {\n    children,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    getTabbable = defaultGetTabbable,\n    isEnabled = defaultIsEnabled,\n    open\n  } = props;\n  const ignoreNextEnforceFocus = React.useRef(false);\n  const sentinelStart = React.useRef(null);\n  const sentinelEnd = React.useRef(null);\n  const nodeToRestore = React.useRef(null);\n  const reactFocusEventTarget = React.useRef(null);\n  // This variable is useful when disableAutoFocus is true.\n  // It waits for the active element to move into the component to activate.\n  const activated = React.useRef(false);\n  const rootRef = React.useRef(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef(children.ref, rootRef);\n  const lastKeydown = React.useRef(null);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    activated.current = !disableAutoFocus;\n  }, [disableAutoFocus, open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    if (!rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['MUI: The modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n        rootRef.current.setAttribute('tabIndex', '-1');\n      }\n      if (activated.current) {\n        rootRef.current.focus();\n      }\n    }\n    return () => {\n      // restoreLastFocus()\n      if (!disableRestoreFocus) {\n        // In IE11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE11 have a focus method.\n        // Once IE11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          ignoreNextEnforceFocus.current = true;\n          nodeToRestore.current.focus();\n        }\n        nodeToRestore.current = null;\n      }\n    };\n    // Missing `disableRestoreFocus` which is fine.\n    // We don't support changing that prop on an open FocusTrap\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open]);\n  React.useEffect(() => {\n    // We might render an empty child.\n    if (!open || !rootRef.current) {\n      return;\n    }\n    const doc = ownerDocument(rootRef.current);\n    const loopFocus = nativeEvent => {\n      lastKeydown.current = nativeEvent;\n      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== 'Tab') {\n        return;\n      }\n\n      // Make sure the next tab starts from the right place.\n      // doc.activeElement refers to the origin.\n      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n        if (sentinelEnd.current) {\n          sentinelEnd.current.focus();\n        }\n      }\n    };\n    const contain = () => {\n      const rootElement = rootRef.current;\n\n      // Cleanup functions are executed lazily in React 17.\n      // Contain can be called between the component being unmounted and its cleanup function being run.\n      if (rootElement === null) {\n        return;\n      }\n      if (!doc.hasFocus() || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      // The focus is already inside\n      if (rootElement.contains(doc.activeElement)) {\n        return;\n      }\n\n      // The disableEnforceFocus is set and the focus is outside of the focus trap (and sentinel nodes)\n      if (disableEnforceFocus && doc.activeElement !== sentinelStart.current && doc.activeElement !== sentinelEnd.current) {\n        return;\n      }\n\n      // if the focus event is not coming from inside the children's react tree, reset the refs\n      if (doc.activeElement !== reactFocusEventTarget.current) {\n        reactFocusEventTarget.current = null;\n      } else if (reactFocusEventTarget.current !== null) {\n        return;\n      }\n      if (!activated.current) {\n        return;\n      }\n      let tabbable = [];\n      if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {\n        tabbable = getTabbable(rootRef.current);\n      }\n\n      // one of the sentinel nodes was focused, so move the focus\n      // to the first/last tabbable element inside the focus trap\n      if (tabbable.length > 0) {\n        var _lastKeydown$current, _lastKeydown$current2;\n        const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === 'Tab');\n        const focusNext = tabbable[0];\n        const focusPrevious = tabbable[tabbable.length - 1];\n        if (typeof focusNext !== 'string' && typeof focusPrevious !== 'string') {\n          if (isShiftTab) {\n            focusPrevious.focus();\n          } else {\n            focusNext.focus();\n          }\n        }\n        // no tabbable elements in the trap focus or the focus was outside of the focus trap\n      } else {\n        rootElement.focus();\n      }\n    };\n    doc.addEventListener('focusin', contain);\n    doc.addEventListener('keydown', loopFocus, true);\n\n    // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    // Instead, we can look if the active element was restored on the BODY element.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n    const interval = setInterval(() => {\n      if (doc.activeElement && doc.activeElement.tagName === 'BODY') {\n        contain();\n      }\n    }, 50);\n    return () => {\n      clearInterval(interval);\n      doc.removeEventListener('focusin', contain);\n      doc.removeEventListener('keydown', loopFocus, true);\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);\n  const onFocus = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n    reactFocusEventTarget.current = event.target;\n    const childrenPropsHandler = children.props.onFocus;\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const handleFocusSentinel = event => {\n    if (nodeToRestore.current === null) {\n      nodeToRestore.current = event.relatedTarget;\n    }\n    activated.current = true;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelStart,\n      \"data-testid\": \"sentinelStart\"\n    }), /*#__PURE__*/React.cloneElement(children, {\n      ref: handleRef,\n      onFocus\n    }), /*#__PURE__*/_jsx(\"div\", {\n      tabIndex: open ? 0 : -1,\n      onFocus: handleFocusSentinel,\n      ref: sentinelEnd,\n      \"data-testid\": \"sentinelEnd\"\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? FocusTrap.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n  /**\n   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.\n   *\n   * Generally this should never be set to `true` as it makes the focus trap less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, the focus trap will not restore focus to previously focused element once\n   * focus trap is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.\n   * For instance, you can provide the \"tabbable\" npm dependency.\n   * @param {HTMLElement} root\n   */\n  getTabbable: PropTypes.func,\n  /**\n   * This prop extends the `open` prop.\n   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.\n   * This prop should be memoized.\n   * It can be used to support multiple focus trap mounted at the same time.\n   * @default function defaultIsEnabled(): boolean {\n   *   return true;\n   * }\n   */\n  isEnabled: PropTypes.func,\n  /**\n   * If `true`, focus is locked.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  FocusTrap['propTypes' + ''] = exactProp(FocusTrap.propTypes);\n}\nexport { FocusTrap };","import { unstable_ownerWindow as ownerWindow, unstable_ownerDocument as ownerDocument, unstable_getScrollbarSize as getScrollbarSize } from '@mui/utils';\n// Is a vertical scrollbar displayed?\nfunction isOverflowing(container) {\n  const doc = ownerDocument(container);\n  if (doc.body === container) {\n    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;\n  }\n  return container.scrollHeight > container.clientHeight;\n}\nexport function ariaHidden(element, show) {\n  if (show) {\n    element.setAttribute('aria-hidden', 'true');\n  } else {\n    element.removeAttribute('aria-hidden');\n  }\n}\nfunction getPaddingRight(element) {\n  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;\n}\nfunction isAriaHiddenForbiddenOnElement(element) {\n  // The forbidden HTML tags are the ones from ARIA specification that\n  // can be children of body and can't have aria-hidden attribute.\n  // cf. https://www.w3.org/TR/html-aria/#docconformance\n  const forbiddenTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE', 'LINK', 'MAP', 'META', 'NOSCRIPT', 'PICTURE', 'COL', 'COLGROUP', 'PARAM', 'SLOT', 'SOURCE', 'TRACK'];\n  const isForbiddenTagName = forbiddenTagNames.indexOf(element.tagName) !== -1;\n  const isInputHidden = element.tagName === 'INPUT' && element.getAttribute('type') === 'hidden';\n  return isForbiddenTagName || isInputHidden;\n}\nfunction ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude, show) {\n  const blacklist = [mountElement, currentElement, ...elementsToExclude];\n  [].forEach.call(container.children, element => {\n    const isNotExcludedElement = blacklist.indexOf(element) === -1;\n    const isNotForbiddenElement = !isAriaHiddenForbiddenOnElement(element);\n    if (isNotExcludedElement && isNotForbiddenElement) {\n      ariaHidden(element, show);\n    }\n  });\n}\nfunction findIndexOf(items, callback) {\n  let idx = -1;\n  items.some((item, index) => {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n    return false;\n  });\n  return idx;\n}\nfunction handleContainer(containerInfo, props) {\n  const restoreStyle = [];\n  const container = containerInfo.container;\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      const scrollbarSize = getScrollbarSize(ownerDocument(container));\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        property: 'padding-right',\n        el: container\n      });\n      // Use computed style, here to get the real padding to add our scrollbar width.\n      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;\n\n      // .mui-fixed is a global helper.\n      const fixedElements = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedElements, element => {\n        restoreStyle.push({\n          value: element.style.paddingRight,\n          property: 'padding-right',\n          el: element\n        });\n        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;\n      });\n    }\n    let scrollContainer;\n    if (container.parentNode instanceof DocumentFragment) {\n      scrollContainer = ownerDocument(container).body;\n    } else {\n      // Support html overflow-y: auto for scroll stability between pages\n      // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n      const parent = container.parentElement;\n      const containerWindow = ownerWindow(container);\n      scrollContainer = (parent == null ? void 0 : parent.nodeName) === 'HTML' && containerWindow.getComputedStyle(parent).overflowY === 'scroll' ? parent : container;\n    }\n\n    // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      property: 'overflow',\n      el: scrollContainer\n    }, {\n      value: scrollContainer.style.overflowX,\n      property: 'overflow-x',\n      el: scrollContainer\n    }, {\n      value: scrollContainer.style.overflowY,\n      property: 'overflow-y',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n  const restore = () => {\n    restoreStyle.forEach(({\n      value,\n      el,\n      property\n    }) => {\n      if (value) {\n        el.style.setProperty(property, value);\n      } else {\n        el.style.removeProperty(property);\n      }\n    });\n  };\n  return restore;\n}\nfunction getHiddenSiblings(container) {\n  const hiddenSiblings = [];\n  [].forEach.call(container.children, element => {\n    if (element.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(element);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\nexport class ModalManager {\n  constructor() {\n    this.containers = void 0;\n    this.modals = void 0;\n    this.modals = [];\n    this.containers = [];\n  }\n  add(modal, container) {\n    let modalIndex = this.modals.indexOf(modal);\n    if (modalIndex !== -1) {\n      return modalIndex;\n    }\n    modalIndex = this.modals.length;\n    this.modals.push(modal);\n\n    // If the modal we are adding is already in the DOM.\n    if (modal.modalRef) {\n      ariaHidden(modal.modalRef, false);\n    }\n    const hiddenSiblings = getHiddenSiblings(container);\n    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);\n    const containerIndex = findIndexOf(this.containers, item => item.container === container);\n    if (containerIndex !== -1) {\n      this.containers[containerIndex].modals.push(modal);\n      return modalIndex;\n    }\n    this.containers.push({\n      modals: [modal],\n      container,\n      restore: null,\n      hiddenSiblings\n    });\n    return modalIndex;\n  }\n  mount(modal, props) {\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    if (!containerInfo.restore) {\n      containerInfo.restore = handleContainer(containerInfo, props);\n    }\n  }\n  remove(modal, ariaHiddenState = true) {\n    const modalIndex = this.modals.indexOf(modal);\n    if (modalIndex === -1) {\n      return modalIndex;\n    }\n    const containerIndex = findIndexOf(this.containers, item => item.modals.indexOf(modal) !== -1);\n    const containerInfo = this.containers[containerIndex];\n    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n    this.modals.splice(modalIndex, 1);\n\n    // If that was the last modal in a container, clean up the container.\n    if (containerInfo.modals.length === 0) {\n      // The modal might be closed before it had the chance to be mounted in the DOM.\n      if (containerInfo.restore) {\n        containerInfo.restore();\n      }\n      if (modal.modalRef) {\n        // In case the modal wasn't in the DOM yet.\n        ariaHidden(modal.modalRef, ariaHiddenState);\n      }\n      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);\n      this.containers.splice(containerIndex, 1);\n    } else {\n      // Otherwise make sure the next top modal is visible to a screen reader.\n      const nextTop = containerInfo.modals[containerInfo.modals.length - 1];\n      // as soon as a modal is adding its modalRef is undefined. it can't set\n      // aria-hidden because the dom element doesn't exist either\n      // when modal was unmounted before modalRef gets null\n      if (nextTop.modalRef) {\n        ariaHidden(nextTop.modalRef, false);\n      }\n    }\n    return modalIndex;\n  }\n  isTopModal(modal) {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nimport { extractEventHandlers } from '../utils';\nimport { ModalManager, ariaHidden } from './ModalManager';\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst defaultManager = new ModalManager();\n/**\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/#hook)\n *\n * API:\n *\n * - [useModal API](https://mui.com/base-ui/react-modal/hooks-api/#use-modal)\n */\nexport function useModal(parameters) {\n  const {\n    container,\n    disableEscapeKeyDown = false,\n    disableScrollLock = false,\n    // @ts-ignore internal logic - Base UI supports the manager as a prop too\n    manager = defaultManager,\n    closeAfterTransition = false,\n    onTransitionEnter,\n    onTransitionExited,\n    children,\n    onClose,\n    open,\n    rootRef\n  } = parameters;\n\n  // @ts-ignore internal logic\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, rootRef);\n  const [exited, setExited] = React.useState(!open);\n  const hasTransition = getHasTransition(children);\n  let ariaHiddenProp = true;\n  if (parameters['aria-hidden'] === 'false' || parameters['aria-hidden'] === false) {\n    ariaHiddenProp = false;\n  }\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mount = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else if (modalRef.current) {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [ariaHiddenProp, manager]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || event.which === 229 ||\n    // Wait until IME is settled.\n    !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const createHandleBackdropClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n\n    // The custom event handlers shouldn't be spread on the root element\n    delete propsEventHandlers.onTransitionEnter;\n    delete propsEventHandlers.onTransitionExited;\n    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);\n    return _extends({\n      role: 'presentation'\n    }, externalEventHandlers, {\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      ref: handleRef\n    });\n  };\n  const getBackdropProps = (otherHandlers = {}) => {\n    const externalEventHandlers = otherHandlers;\n    return _extends({\n      'aria-hidden': true\n    }, externalEventHandlers, {\n      onClick: createHandleBackdropClick(externalEventHandlers),\n      open\n    });\n  };\n  const getTransitionProps = () => {\n    const handleEnter = () => {\n      setExited(false);\n      if (onTransitionEnter) {\n        onTransitionEnter();\n      }\n    };\n    const handleExited = () => {\n      setExited(true);\n      if (onTransitionExited) {\n        onTransitionExited();\n      }\n      if (closeAfterTransition) {\n        handleClose();\n      }\n    };\n    return {\n      onEnter: createChainedFunction(handleEnter, children == null ? void 0 : children.props.onEnter),\n      onExited: createChainedFunction(handleExited, children == null ? void 0 : children.props.onExited)\n    };\n  };\n  return {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    rootRef: handleRef,\n    portalRef: handlePortalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getModalUtilityClass(slot) {\n  return generateUtilityClass('MuiModal', slot);\n}\nconst modalClasses = generateUtilityClasses('MuiModal', ['root', 'hidden', 'backdrop']);\nexport default modalClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropComponent\", \"BackdropProps\", \"classes\", \"className\", \"closeAfterTransition\", \"children\", \"container\", \"component\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"onBackdropClick\", \"onClose\", \"onTransitionEnter\", \"onTransitionExited\", \"open\", \"slotProps\", \"slots\", \"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport { useSlotProps } from '@mui/base';\nimport { unstable_useModal as useModal } from '@mui/base/unstable_useModal';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport FocusTrap from '../Unstable_TrapFocus';\nimport Portal from '../Portal';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { getModalUtilityClass } from './modalClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && ownerState.exited && {\n  visibility: 'hidden'\n}));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$backdrop, _slotProps$root, _slotProps$backdrop;\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n      BackdropComponent = ModalBackdrop,\n      BackdropProps,\n      className,\n      closeAfterTransition = false,\n      children,\n      container,\n      component,\n      components = {},\n      componentsProps = {},\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      onBackdropClick,\n      open,\n      slotProps,\n      slots\n      // eslint-disable-next-line react/prop-types\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const propsWithDefaults = _extends({}, props, {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  });\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal(_extends({}, propsWithDefaults, {\n    rootRef: ref\n  }));\n  const ownerState = _extends({}, propsWithDefaults, {\n    exited\n  });\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : ModalRoot;\n  const BackdropSlot = (_ref2 = (_slots$backdrop = slots == null ? void 0 : slots.backdrop) != null ? _slots$backdrop : components.Backdrop) != null ? _ref2 : BackdropComponent;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const backdropSlotProps = (_slotProps$backdrop = slotProps == null ? void 0 : slotProps.backdrop) != null ? _slotProps$backdrop : componentsProps.backdrop;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    getSlotProps: getRootProps,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(className, rootSlotProps == null ? void 0 : rootSlotProps.className, classes == null ? void 0 : classes.root, !ownerState.open && ownerState.exited && (classes == null ? void 0 : classes.hidden))\n  });\n  const backdropProps = useSlotProps({\n    elementType: BackdropSlot,\n    externalSlotProps: backdropSlotProps,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps(_extends({}, otherHandlers, {\n        onClick: e => {\n          if (onBackdropClick) {\n            onBackdropClick(e);\n          }\n          if (otherHandlers != null && otherHandlers.onClick) {\n            otherHandlers.onClick(e);\n          }\n        }\n      }));\n    },\n    className: clsx(backdropSlotProps == null ? void 0 : backdropSlotProps.className, BackdropProps == null ? void 0 : BackdropProps.className, classes == null ? void 0 : classes.backdrop),\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;"],"names":["candidatesSelector","getTabIndex","node","tabindexAttr","isNonTabbableRadio","getRadio","selector","roving","isNodeMatchingSelectorFocusable","defaultGetTabbable","root","regularTabNodes","orderedTabNodes","i","nodeTabIndex","a","b","defaultIsEnabled","FocusTrap","props","children","disableAutoFocus","disableEnforceFocus","disableRestoreFocus","getTabbable","isEnabled","open","ignoreNextEnforceFocus","React.useRef","sentinelStart","sentinelEnd","nodeToRestore","reactFocusEventTarget","activated","rootRef","handleRef","useForkRef","lastKeydown","React.useEffect","doc","ownerDocument","loopFocus","nativeEvent","contain","rootElement","tabbable","_lastKeydown$current","_lastKeydown$current2","isShiftTab","focusNext","focusPrevious","interval","onFocus","event","childrenPropsHandler","handleFocusSentinel","_jsxs","React.Fragment","_jsx","React.cloneElement","isOverflowing","container","ownerWindow","ariaHidden","element","show","getPaddingRight","isAriaHiddenForbiddenOnElement","isForbiddenTagName","isInputHidden","ariaHiddenSiblings","mountElement","currentElement","elementsToExclude","blacklist","isNotExcludedElement","isNotForbiddenElement","findIndexOf","items","callback","idx","item","index","handleContainer","containerInfo","restoreStyle","scrollbarSize","getScrollbarSize","fixedElements","scrollContainer","parent","containerWindow","value","el","property","getHiddenSiblings","hiddenSiblings","ModalManager","modal","modalIndex","containerIndex","ariaHiddenState","nextTop","getContainer","getHasTransition","defaultManager","useModal","parameters","disableEscapeKeyDown","disableScrollLock","manager","closeAfterTransition","onTransitionEnter","onTransitionExited","onClose","mountNodeRef","modalRef","exited","setExited","React.useState","hasTransition","ariaHiddenProp","getDoc","getModal","handleMounted","handleOpen","useEventCallback","resolvedContainer","isTopModal","React.useCallback","handlePortalRef","handleClose","createHandleKeyDown","otherHandlers","_otherHandlers$onKeyD","createHandleBackdropClick","_otherHandlers$onClic","propsEventHandlers","extractEventHandlers","externalEventHandlers","_extends","handleEnter","handleExited","createChainedFunction","getModalUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","ModalRoot","styled","styles","theme","ModalBackdrop","Backdrop","Modal","React.forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$backdrop","_slotProps$root","_slotProps$backdrop","useThemeProps","BackdropComponent","BackdropProps","className","component","components","componentsProps","disablePortal","hideBackdrop","keepMounted","onBackdropClick","slotProps","slots","other","_objectWithoutPropertiesLoose","propsWithDefaults","getRootProps","getBackdropProps","getTransitionProps","portalRef","childProps","onEnter","onExited","RootSlot","BackdropSlot","rootSlotProps","backdropSlotProps","rootProps","useSlotProps","clsx","backdropProps","e","Portal","Modal$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}