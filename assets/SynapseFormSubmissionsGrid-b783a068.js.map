{"version":3,"file":"SynapseFormSubmissionsGrid-b783a068.js","sources":["../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/PhoneTwoTone.js","../../../../node_modules/.pnpm/dayjs@1.11.7/node_modules/dayjs/plugin/calendar.js","../../src/assets/icons/json-form-tool-no-submissions.svg","../../src/components/SynapseForm/SynapseFormSubmissionsGrid.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 17.47c-.88-.07-1.75-.22-2.6-.45l-1.19 1.19c1.2.41 2.48.67 3.8.75v-1.49zM5.03 5c.09 1.32.35 2.59.75 3.8l1.2-1.2c-.23-.84-.38-1.71-.44-2.6H5.03z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9.07 7.57C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02zm7.33 9.45c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19zM5.79 8.8c-.41-1.21-.67-2.48-.76-3.8h1.5c.07.89.22 1.76.46 2.59L5.79 8.8z\"\n}, \"1\")], 'PhoneTwoTone');\nexports.default = _default;","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_calendar=t()}(this,(function(){\"use strict\";return function(e,t,a){var n=\"h:mm A\",d={lastDay:\"[Yesterday at] \"+n,sameDay:\"[Today at] \"+n,nextDay:\"[Tomorrow at] \"+n,nextWeek:\"dddd [at] \"+n,lastWeek:\"[Last] dddd [at] \"+n,sameElse:\"MM/DD/YYYY\"};t.prototype.calendar=function(e,t){var n=t||this.$locale().calendar||d,o=a(e||void 0).startOf(\"d\"),s=this.diff(o,\"d\",!0),i=\"sameElse\",f=s<-6?i:s<-1?\"lastWeek\":s<0?\"lastDay\":s<1?\"sameDay\":s<2?\"nextDay\":s<7?\"nextWeek\":i,l=n[f]||d[f];return\"function\"==typeof l?l.call(this,a()):this.format(l)}}}));","export default \"__VITE_ASSET__40dca14f__\"","import React from 'react'\n\nimport SynapseClient from '../../synapse-client'\nimport {\n  FormData,\n  ListRequest,\n  StatusEnum,\n  ListResponse,\n} from '@sage-bionetworks/synapse-types'\nimport WarningDialog from './WarningDialog'\nimport { ConfirmationDialog } from '../ConfirmationDialog/ConfirmationDialog'\nimport WideButton from '../styled/WideButton'\nimport { Box, Button, IconButton, Link, Typography } from '@mui/material'\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone'\nimport PhoneTwoToneIcon from '@mui/icons-material/PhoneTwoTone'\nimport dayjs from 'dayjs'\nimport calendar from 'dayjs/plugin/calendar'\nimport { SRC_SIGN_IN_CLASS } from '../../utils/SynapseConstants'\nimport { ReactComponent as NoSubmissionsIcon } from '../../assets/icons/json-form-tool-no-submissions.svg'\n\ndayjs.extend(calendar)\n/**\n * TODO: SWC-5612 - Replace token prop with SynapseContext.accessToken\n *\n * This wasn't done because Enzyme's shallow renderer is not currently\n * compatible with the `contextType` field in the React 16+ context API.\n *\n * This can be fixed by rewriting tests to not rely on the shallow renderer.\n *\n * See here: https://github.com/enzymejs/enzyme/issues/1553\n */\n\nexport type SynapseFormSubmissionGridProps = {\n  token?: string\n  formGroupId: string\n  pathpart: string\n  formClass?: string\n  itemNoun: string\n}\n\ntype FileListType = 'IN_PROGRESS' | 'SUBMITTED'\n\ntype SynapseFormSubmissionGridState = {\n  inProgress: {\n    fileList: FormData[]\n    nextPageToken?: string\n  }\n  submitted: {\n    fileList: FormData[]\n    nextPageToken?: string\n  }\n  isLoading: boolean\n  isShowInfoModal: boolean\n  modalContext?: { action: (...args: any[]) => void; arguments: any[] }\n}\n\nexport class SynapseFormSubmissionGrid extends React.Component<\n  SynapseFormSubmissionGridProps,\n  SynapseFormSubmissionGridState\n> {\n  modalTitle = 'Trash Submission?'\n  listingText = {\n    inProgress: {\n      subhead: 'In Progress',\n      noRecords: `You don't have submissions in progress`,\n    },\n    submitted: {\n      subhead: 'Submitted',\n      noRecords: `You don't have anything submitted`,\n    },\n  }\n  modalCopy = (\n    <>\n      <p>\n        This submission is currently incomplete and has not been submitted. If\n        you trash this submission, you won&apos;t be able to recover the data.\n      </p>\n      <p>Are you sure you want to trash this submission?</p>\n    </>\n  )\n  static requestFilter = {\n    IN_PROGRESS: [StatusEnum.WAITING_FOR_SUBMISSION],\n    SUBMITTED: [\n      StatusEnum.SUBMITTED_WAITING_FOR_REVIEW,\n      StatusEnum.ACCEPTED,\n      StatusEnum.REJECTED,\n    ],\n  }\n\n  constructor(props: SynapseFormSubmissionGridProps) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      isShowInfoModal: false,\n      inProgress: {\n        fileList: [],\n      },\n      submitted: {\n        fileList: [],\n      },\n    }\n  }\n\n  async componentDidMount() {\n    await this.refresh(this.props.token)\n  }\n\n  async componentDidUpdate(prevProps: SynapseFormSubmissionGridProps) {\n    const shouldUpdate = this.props.token !== prevProps.token\n    if (shouldUpdate) {\n      await this.refresh(this.props.token)\n    }\n  }\n\n  async refresh(token?: string) {\n    if (token) {\n      await this.getUserFileListing().catch(error => {\n        this.onError(error)\n      })\n    }\n  }\n\n  getTypeFileListing = async (\n    filter: StatusEnum[],\n    nextPageToken?: string,\n  ): Promise<{ fileList: FormData[]; nextPageToken?: string }> => {\n    this.setState({\n      isLoading: true,\n    })\n    const token = this.props.token\n    const groupId = this.props.formGroupId\n    try {\n      const cleanUpName = (item: FormData): FormData => {\n        item = { ...item, ...{ name: item.name.replace('.json', '') } }\n        return item\n      }\n      const request: ListRequest = {\n        filterByState: filter,\n        groupId,\n        nextPageToken: nextPageToken,\n      }\n\n      const response: ListResponse = await SynapseClient.listFormData(\n        request,\n        token,\n      )\n      const fileList = response.page\n        ? response.page.map(item => cleanUpName(item))\n        : []\n\n      return {\n        fileList,\n        nextPageToken: response.nextPageToken,\n      }\n    } catch (error) {\n      this.onError(error)\n      return Promise.reject(error)\n    } finally {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  getMore = async (fileListType: FileListType, nextPageToken: string) => {\n    const statusList =\n      fileListType === 'SUBMITTED'\n        ? SynapseFormSubmissionGrid.requestFilter.SUBMITTED\n        : SynapseFormSubmissionGrid.requestFilter.IN_PROGRESS\n    const result = await this.getTypeFileListing(statusList, nextPageToken)\n    if (fileListType === 'SUBMITTED') {\n      this.setState(prevState => ({\n        submitted: {\n          fileList: [...prevState.submitted.fileList, ...result.fileList],\n          nextPageToken: result.nextPageToken,\n        },\n      }))\n    } else {\n      this.setState(prevState => ({\n        inProgress: {\n          fileList: [...prevState.inProgress.fileList, ...result.fileList],\n          nextPageToken: result.nextPageToken,\n        },\n      }))\n    }\n  }\n\n  getUserFileListing = async (): Promise<void> => {\n    const inProgress = await this.getTypeFileListing(\n      SynapseFormSubmissionGrid.requestFilter.IN_PROGRESS,\n      this.state.inProgress.nextPageToken,\n    )\n    const submitted = await this.getTypeFileListing(\n      SynapseFormSubmissionGrid.requestFilter.SUBMITTED,\n      this.state.submitted.nextPageToken,\n    )\n\n    this.setState({\n      inProgress: inProgress,\n      submitted: submitted,\n    })\n\n    return\n  }\n  onError = (args: any) => {\n    console.log(args)\n  }\n\n  deleteFile = async (token: string, formDataId: string): Promise<any> => {\n    this.setState({\n      isLoading: true,\n      modalContext: undefined,\n    })\n    try {\n      await SynapseClient.deleteFormData(formDataId, token)\n      //await this.getUserFileListing(token, this.props.formGroupId)\n      this.setState((prevState, props) => ({\n        inProgress: {\n          fileList: prevState.inProgress.fileList.filter(\n            item => item.formDataId !== formDataId,\n          ),\n          nextPageToken: prevState.inProgress.nextPageToken,\n        },\n      }))\n    } catch (error) {\n      this.onError(error)\n      return []\n    } finally {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  setModalConfirmationState = (token: string, formDataId: string) => {\n    this.setState({\n      modalContext: {\n        action: (...args) => {\n          this.deleteFile(args[0], args[1])\n        },\n        arguments: [token, formDataId],\n      },\n    })\n  }\n  /* ------------------------------------------   rendering fns  ------------------------------------------------*/\n\n  renderLoading = (\n    token: string | undefined,\n    isLoading: boolean,\n  ): JSX.Element => {\n    if (token && isLoading) {\n      return (\n        <div className=\"text-center\">\n          <span>Loading&hellip;</span>\n          <span style={{ marginLeft: '2px' }} className={'spinner'} />\n        </div>\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  renderUnauthenticatedView = (token: string | undefined) => {\n    if (token) {\n      return <></>\n    } else {\n      return (\n        <div className=\"file-grid\">\n          <Typography variant=\"h3\">Your Submissions</Typography>\n          <div className=\"panel padding-full unauthenticated text-center\">\n            <p className=\"padding-full\">\n              Please sign in or register to initiate or continue your submission\n            </p>\n            <WideButton\n              className={`${SRC_SIGN_IN_CLASS}`}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Sign In\n            </WideButton>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderSubmissionsTable = (\n    fileList: FormData[],\n    pathpart: string,\n    formGroupId: string,\n    fileListType: FileListType,\n    nextPageToken?: string,\n  ): JSX.Element => {\n    if (!formGroupId) {\n      this.onError('Form Group ID is undefined')\n      return <></>\n    }\n    const isInProgress = fileListType === 'IN_PROGRESS'\n    const textSource = isInProgress\n      ? this.listingText.inProgress\n      : this.listingText.submitted\n\n    const subhead = <h4>{textSource.subhead}</h4>\n    const tableTitleRow = isInProgress ? (\n      <tr>\n        <th>Submission Name</th>\n        <th>Edited On</th>\n        <th></th>\n        <th></th>\n      </tr>\n    ) : (\n      <tr>\n        <th>Submission Name</th>\n        <th>Submitted On</th>\n        <th>Status</th>\n        <th></th>\n      </tr>\n    )\n\n    let content = (\n      <h5 className=\"text-center no-submissions padding-full\">\n        {textSource.noRecords}\n      </h5>\n    )\n    const viewMore = nextPageToken ? (\n      <Box sx={{ textAlign: 'right', paddingTop: '5px' }}>\n        <Button\n          variant=\"text\"\n          onClick={() => {\n            this.getMore(fileListType, nextPageToken)\n          }}\n        >\n          More...\n        </Button>\n      </Box>\n    ) : (\n      <></>\n    )\n    if (fileList.length > 0) {\n      content = (\n        <div className=\"file-table\" key={`table${fileListType}`}>\n          <table className=\"table\">\n            <thead>{tableTitleRow}</thead>\n            <tbody>\n              {fileList.map((dataFileRecord, key) => {\n                if (isInProgress) {\n                  return (\n                    <tr\n                      key={`${dataFileRecord.formDataId}-${key}-${fileListType}`}\n                    >\n                      <td>\n                        <Link\n                          href={`${pathpart}?formGroupId=${formGroupId}&formDataId=${dataFileRecord.formDataId}&dataFileHandleId=${dataFileRecord.dataFileHandleId}`}\n                        >\n                          {dataFileRecord.name}\n                        </Link>\n                      </td>\n                      <td>{dayjs(dataFileRecord.modifiedOn).calendar()}</td>\n                      <td>&nbsp;</td>\n                      <td className=\"text-right\">\n                        <IconButton\n                          aria-label=\"delete\"\n                          color=\"primary\"\n                          onClick={() =>\n                            this.setModalConfirmationState(\n                              this.props.token!,\n                              dataFileRecord.formDataId,\n                            )\n                          }\n                        >\n                          <DeleteTwoToneIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  )\n                } else {\n                  return (\n                    <tr key={`${dataFileRecord.formDataId}-${key}`}>\n                      <td>\n                        <Link\n                          href={`${pathpart}?formGroupId=${formGroupId}&formDataId=${dataFileRecord.formDataId}&dataFileHandleId=${dataFileRecord.dataFileHandleId}&submitted=1`}\n                        >\n                          {dataFileRecord.name}\n                        </Link>\n                      </td>\n                      <td>{dayjs(dataFileRecord.modifiedOn).calendar()}</td>\n                      <td>{dataFileRecord.submissionStatus.state}</td>\n                      <td className=\"text-right\">\n                        <IconButton\n                          color=\"primary\"\n                          aria-label=\"information\"\n                          onClick={() =>\n                            this.setState({ isShowInfoModal: true })\n                          }\n                        >\n                          <PhoneTwoToneIcon />\n                        </IconButton>\n                      </td>\n                    </tr>\n                  )\n                }\n              })}\n            </tbody>\n          </table>\n          {viewMore}\n        </div>\n      )\n    }\n    return (\n      <div key={`grid-${fileListType}`}>\n        {subhead} {content}\n      </div>\n    )\n  }\n\n  renderSubmissionsTables = (\n    inProgress: { fileList: FormData[]; nextPageToken?: string },\n    submitted: { fileList: FormData[]; nextPageToken?: string },\n    pathpart: string,\n    formGroupId: string,\n  ): JSX.Element[] | JSX.Element => {\n    if (inProgress.fileList.length === 0 && submitted.fileList.length === 0) {\n      return (\n        <div className=\"text-center\">\n          <NoSubmissionsIcon title=\"no submissions\" />\n          <p className=\"padding-full\">You have no submissions</p>\n        </div>\n      )\n    } else {\n      return [\n        this.renderSubmissionsTable(\n          inProgress.fileList,\n          pathpart,\n          formGroupId,\n          'IN_PROGRESS',\n          inProgress.nextPageToken,\n        ),\n\n        this.renderSubmissionsTable(\n          submitted.fileList,\n          pathpart,\n          formGroupId,\n          'SUBMITTED',\n          submitted.nextPageToken,\n        ),\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div className={`theme-${this.props.formClass}`}>\n        <div className=\"SRC-ReactJsonForm\">\n          {this.renderLoading(this.props.token, this.state.isLoading)}\n          {this.renderUnauthenticatedView(this.props.token)}\n\n          {this.props.token && !this.state.isLoading && (\n            <div className=\"file-grid \">\n              <Typography variant=\"h3\">Your Submissions</Typography>\n              <div className=\"panel panel-default padding-full\">\n                {this.renderSubmissionsTables(\n                  this.state.inProgress,\n                  this.state.submitted,\n                  this.props.pathpart,\n                  this.props.formGroupId,\n                )}\n\n                <Box textAlign={'center'}>\n                  <WideButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{\n                      padding: '0.75rem 1.5rem',\n                    }}\n                    href={`${this.props.pathpart}?formGroupId=${this.props.formGroupId}`}\n                  >\n                    Add new {this.props.itemNoun}\n                  </WideButton>\n                </Box>\n              </div>\n            </div>\n          )}\n          {this.state.modalContext && (\n            <WarningDialog\n              className={`theme-${this.props.formClass}`}\n              open={typeof this.state.modalContext !== 'undefined'}\n              title={this.modalTitle}\n              content={this.modalCopy}\n              onConfirmCallbackArgs={this.state.modalContext.arguments}\n              onCancel={() => this.setState({ modalContext: undefined })}\n              onConfirm={(token: string, formDataId: string) =>\n                this.deleteFile(token, formDataId)\n              }\n            />\n          )}\n          <ConfirmationDialog\n            open={this.state.isShowInfoModal}\n            title=\"More Information\"\n            content={\n              <>\n                Please <Link href=\"mailto:ModelAD@iupui.edu\">contact us</Link>{' '}\n                for more information about your submission\n              </>\n            }\n            className={`theme-${this.props.formClass}`}\n            hasCloseButton={false}\n            hasCancelButton={false}\n            confirmButtonColor=\"success\"\n            onCancel={() => this.setState({ isShowInfoModal: false })}\n            onConfirm={() => this.setState({ isShowInfoModal: false })}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SynapseFormSubmissionGrid\n"],"names":["_interopRequireDefault","require$$0","PhoneTwoTone","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","e","module","this","a","n","d","t","o","s","i","f","l","SvgJsonFormToolNoSubmissions","props","React.createElement","dayjs","calendar","_SynapseFormSubmissionGrid","React","__publicField","jsxs","Fragment","jsx","filter","nextPageToken","token","groupId","cleanUpName","item","request","response","SynapseClient","error","fileListType","statusList","result","prevState","inProgress","submitted","args","formDataId","isLoading","Typography","WideButton","SRC_SIGN_IN_CLASS","fileList","pathpart","formGroupId","isInProgress","textSource","subhead","tableTitleRow","content","viewMore","Box","Button","dataFileRecord","key","Link","IconButton","DeleteTwoToneIcon","PhoneTwoToneIcon","NoSubmissionsIcon","prevProps","WarningDialog","ConfirmationDialog","SynapseFormSubmissionGrid","StatusEnum"],"mappings":"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","x_google_ignoreList":[0,1]}