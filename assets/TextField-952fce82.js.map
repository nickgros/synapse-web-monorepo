{"version":3,"file":"TextField-952fce82.js","sources":["../../src/lib/components/styled/StyledFormControl.tsx","../../src/lib/containers/TextField.tsx"],"sourcesContent":["import {\n  FormControl,\n  FormControlProps,\n  formHelperTextClasses,\n  inputBaseClasses,\n  styled,\n} from '@mui/material'\nimport { StyledComponent } from '@emotion/styled'\n\n/* bootstrap-like label/text inputs\n usage:\n        <StyledFormControl fullWidth variant=\"standard\" margin=\"normal\">\n          <InputLabel shrink htmlFor=\"someinput\">\n            labelText\n          </InputLabel>\n          <InputBase id=\"someinput\"/>\n        </StyledFormControl>\n*/\nexport const StyledFormControl: StyledComponent<FormControlProps> = styled(\n  FormControl,\n  {\n    label: 'StyledFormControl',\n  },\n)(({ theme }) => ({\n  '& label': {\n    fontSize: '14px',\n    transform: 'none',\n  },\n  [`& .${formHelperTextClasses.root}`]: {\n    marginLeft: '0',\n    [`&.Mui-error`]: {\n      color: '#c13415',\n    },\n  },\n\n  [`& .${inputBaseClasses.root}`]: {\n    marginTop: theme.spacing(3),\n  },\n  '& .MuiInputBase-multiline': {\n    padding: '0px',\n  },\n  '& fieldset': {\n    border: 'none',\n  },\n}))\n\nexport default StyledFormControl\n","import React, { useId, useMemo } from 'react'\nimport {\n  Box,\n  InputBase,\n  InputLabel,\n  TextFieldProps as MuiTextFieldProps,\n} from '@mui/material'\nimport StyledFormControl from '../components/styled/StyledFormControl'\n\ntype TextFieldProps = Pick<\n  MuiTextFieldProps,\n  | 'autoComplete'\n  | 'autoFocus'\n  | 'disabled'\n  | 'error'\n  | 'fullWidth'\n  | 'id'\n  | 'inputProps'\n  | 'label'\n  | 'maxRows'\n  | 'minRows'\n  | 'multiline'\n  | 'onBlur'\n  | 'onChange'\n  | 'placeholder'\n  | 'required'\n  | 'rows'\n  | 'sx'\n  | 'type'\n  | 'value'\n> & { noWrapInFormControl?: boolean }\n\n/**\n * A styled text field built using MUI components and designed to match the Sage Design System (SDS) input fields.\n */\nexport default function TextField(props: TextFieldProps) {\n  const id = useId()\n  const { noWrapInFormControl, label, ...rest } = props\n  const Wrapper = useMemo(\n    () =>\n      noWrapInFormControl\n        ? (props: React.PropsWithChildren<object>) => (\n            <React.Fragment>{props.children}</React.Fragment>\n          )\n        : (props: React.PropsWithChildren<object>) => (\n            <StyledFormControl fullWidth sx={{ my: 1 }}>\n              {props.children}\n            </StyledFormControl>\n          ),\n    [noWrapInFormControl],\n  )\n  return (\n    <Wrapper>\n      {props.label && (\n        <InputLabel\n          htmlFor={props.id || id}\n          sx={{ fontWeight: 700, mb: '4px', pointerEvents: 'unset' }}\n        >\n          {props.label}\n          {props.required ? (\n            <Box component={'span'} sx={{ ml: '3px', color: 'secondary.main' }}>\n              {'*'}\n            </Box>\n          ) : (\n            <></>\n          )}\n        </InputLabel>\n      )}\n      <InputBase id={id} {...rest}></InputBase>\n    </Wrapper>\n  )\n}\n"],"names":["StyledFormControl","styled","FormControl","theme","formHelperTextClasses","inputBaseClasses","TextField","props","id","useId","noWrapInFormControl","label","rest","Wrapper","useMemo","props2","jsx","React","jsxs","InputLabel","Box","Fragment","InputBase"],"mappings":"mQAkBO,MAAAA,EAAAC,EAA6DC,EAClE,CACA,MAAA,mBACS,CAEX,EAAA,CAAA,CAAA,MAAAC,MAAA,CAAkB,UAAA,CACL,SAAA,OACC,UAAA,MACC,EACb,CAAA,MAAAC,EAAA,MAAA,EAAA,CACsC,WAAA,IACxB,CAAA,aAAA,EAAA,CACK,MAAA,SACR,CACT,EACF,CAAA,MAAAC,EAAA,MAAA,EAAA,CAEiC,UAAAF,EAAA,QAAA,CAAA,CACL,EAC5B,4BAAA,CAC6B,QAAA,KAClB,EACX,aAAA,CACc,OAAA,MACJ,CAEZ,EAAA;;+vECTA,SAAAG,EAAAC,EAAA,CACE,MAAAC,EAAAC,EAAAA,QACA,CAAA,oBAAAC,EAAA,MAAAC,EAAA,GAAAC,CAAA,EAAAL,EACAM,EAAAC,EAAA,QAAgB,IAAAJ,EAAAK,GAAAC,EAAAC,EAAA,SAAA,CAAA,SAAAF,EAAA,QAAA,CAAA,EAAAA,GAAAC,EAAAhB,EAAA,CAAA,UAAA,GAAA,GAAA,CAAA,GAAA,GAAA,SAAAe,EAAA,QAAA,CAAA,EASN,CAAAL,CAAA,CAEY,EAEtB,OAAAQ,EAAAL,EAAA,CAAA,SAAA,CAEKN,EAAA,OAAAW,EACCC,EAAC,CAAA,QAAAZ,EAAA,IAAAC,EACsB,GAAA,CAAA,WAAA,IAAA,GAAA,MAAA,cAAA,OAAA,EACoC,SAAA,CAExDD,EAAA,MAAMA,EAAA,SAAAS,EAAAI,EAAA,CAAA,UAAA,OAAA,GAAA,CAAA,GAAA,MAAA,MAAA,gBAAA,EAAA,SAAA,GAAA,CAAA,EAAAJ,EAAAK,EAAA,EAAA,CAMH,CAAA,CAAA,EAENL,EAAAM,EAAA,CAAA,GAAAd,EAAA,GAAAI,CAAA,CAAA,CAE2B,CAAA,CAAA,CAGnC"}