{"version":3,"file":"EntityFinderModal-e8b4287f.js","sources":["../../src/lib/containers/entity_finder/EntityFinderModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Reference } from '../../utils/synapseTypes'\nimport { Typography } from '@mui/material'\nimport { FluidModal } from '../FluidModal'\nimport { HelpPopoverProps } from '../HelpPopover'\nimport WarningModal from '../synapse_form_wrapper/WarningModal'\nimport EntityFinder, { EntityFinderProps } from './EntityFinder'\n\nexport const UNSAVED_CHANGES = 'Unsaved Changes'\n\nexport type EntityFinderModalProps = {\n  configuration: Omit<EntityFinderProps, 'onSelectedChange'>\n  show: boolean\n  onClose: () => void\n  title: string\n  titlePopoverProps?: HelpPopoverProps\n  onConfirm: (selected: Reference[]) => void\n  confirmButtonCopy: string\n  onCancel: () => void\n  promptCopy?: string\n}\n\nexport const EntityFinderModal = (props: EntityFinderModalProps) => {\n  const [selected, setSelected] = useState<Reference[]>([])\n  const [showUnsavedChangesWarning, setShowUnsavedChangesWarning] =\n    useState(false)\n  return (\n    <>\n      <WarningModal\n        title={UNSAVED_CHANGES}\n        modalBody=\"Any unsaved changes will be lost. Are you sure you want to close the finder?\"\n        show={showUnsavedChangesWarning}\n        confirmButtonText=\"Close Finder\"\n        onConfirm={() => {\n          setShowUnsavedChangesWarning(false)\n          props.onCancel()\n        }}\n        onCancel={() => {\n          setShowUnsavedChangesWarning(false)\n        }}\n      />\n      <FluidModal\n        className={showUnsavedChangesWarning ? 'SRC-hidden' : undefined}\n        show={props.show}\n        title={props.title}\n        titlePopoverProps={props.titlePopoverProps}\n        onClose={props.onClose}\n        primaryAction={{\n          copy: props.confirmButtonCopy,\n          onClick: () => {\n            props.onConfirm(selected)\n          },\n        }}\n        secondaryActions={[\n          {\n            copy: 'Cancel',\n            onClick: () => {\n              if (selected.length > 0) {\n                setShowUnsavedChangesWarning(true)\n              } else {\n                props.onCancel()\n              }\n            },\n          },\n        ]}\n      >\n        <>\n          <Typography variant={'body1'}>{props.promptCopy}</Typography>\n          <EntityFinder\n            {...props.configuration}\n            onSelectedChange={setSelected}\n          />\n        </>\n      </FluidModal>\n    </>\n  )\n}\n"],"names":["UNSAVED_CHANGES","EntityFinderModal","props","selected","setSelected","useState","showUnsavedChangesWarning","setShowUnsavedChangesWarning","jsxs","Fragment","jsx","WarningModal","FluidModal","Typography","EntityFinder"],"mappings":"qSAQO,MAAAA,EAAA,kBAcAC,EAAAC,GAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEA,OAAAG,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,MAAAX,EACQ,UAAA,+EACG,KAAAM,EACJ,kBAAA,eACY,UAAA,IAAA,CAEhBC,EAAA,EAAA,EACAL,EAAA,SAAA,CAAe,EACjB,SAAA,IAAA,CAEEK,EAAA,EAAA,CAAkC,CACpC,CAAA,EACFG,EACAE,EAAC,CAAA,UAAAN,EAAA,aAAA,OACuD,KAAAJ,EAAA,KAC1C,MAAAA,EAAA,MACC,kBAAAA,EAAA,kBACY,QAAAA,EAAA,QACV,cAAA,CACA,KAAAA,EAAA,kBACD,QAAA,IAAA,CAEVA,EAAA,UAAAC,CAAA,CAAwB,CAC1B,EACF,iBAAA,CACkB,CAChB,KAAA,SACQ,QAAA,IAAA,CAEJA,EAAA,OAAA,EACEI,EAAA,EAAA,EAEAL,EAAA,SAAA,CACF,CACF,CACF,EACF,SAAAM,EAAAC,EAAA,CAAA,SAAA,CAGEC,EAAAG,EAAA,CAAA,QAAA,QAAA,SAAAX,EAAA,WAAA,EAAgDQ,EAChDI,EAAC,CAAA,GAAAZ,EAAA,cACW,iBAAAE,CACQ,CAAA,CACpB,EAAA,CACF,CAAA,CACF,CAAA,CAAA,CAGN"}