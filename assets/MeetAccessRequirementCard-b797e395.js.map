{"version":3,"file":"MeetAccessRequirementCard-b797e395.js","sources":["../../src/lib/containers/download_list_v2/MeetAccessRequirementCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useErrorHandler } from 'react-error-boundary'\nimport { useGetAccessRequirements } from '../../utils/hooks/SynapseAPI/dataaccess/useAccessRequirements'\nimport { SelfSignAccessRequirement } from '../../utils/synapseTypes'\nimport { Button } from 'react-bootstrap'\nimport { Icon } from '../row_renderers/utils'\nimport {\n  EASY_DIFFICULTY,\n  MEDIUM_DIFFICULTY,\n  VARIABLE_DIFFICULTY,\n} from '../../utils/SynapseConstants'\nimport AccessRequirementList, {\n  SUPPORTED_ACCESS_REQUIREMENTS,\n} from '../access_requirement_list/AccessRequirementList'\nimport { Skeleton } from '@mui/material'\nimport { Typography } from '@mui/material'\n\nexport type MeetAccessRequirementCardProps = {\n  accessRequirementId: number\n  count: number\n}\nexport const TERMS_OF_USE_TITLE =\n  'Requires Acceptance of Data-Specific Terms of Use'\nexport const SELF_SIGN_TITLE =\n  'Requires Acceptance of Data-Specific Terms of Use'\nexport const ACT_TITLE =\n  'Requires Approval of Data-Specific Access Requirements'\nexport const LOCK_TITLE = 'Access Restricted'\n\nexport const MeetAccessRequirementCard: React.FunctionComponent<\n  MeetAccessRequirementCardProps\n> = ({ accessRequirementId, count }: MeetAccessRequirementCardProps) => {\n  const handleError = useErrorHandler()\n  const {\n    data: ar,\n    isFetching,\n    isError,\n    error: newError,\n  } = useGetAccessRequirements(accessRequirementId)\n  useEffect(() => {\n    if (isError && newError) {\n      handleError(newError)\n    }\n  }, [isError, newError, handleError])\n  const [isShowingAccessRequirement, setIsShowingAccessRequirement] =\n    useState<boolean>(false)\n  let content = <></>\n  if (!isError && !isFetching && ar) {\n    let title: string | undefined = undefined\n    let iconType = ''\n    let description = ''\n    switch (ar.concreteType) {\n      case SUPPORTED_ACCESS_REQUIREMENTS.TermsOfUseAccessRequirement:\n        title = TERMS_OF_USE_TITLE\n        iconType = EASY_DIFFICULTY\n        description = ar.name ?? ''\n        break\n      case SUPPORTED_ACCESS_REQUIREMENTS.SelfSignAccessRequirement: {\n        title = SELF_SIGN_TITLE\n        const selfSignAR: SelfSignAccessRequirement =\n          ar as SelfSignAccessRequirement\n        if (selfSignAR.isValidatedProfileRequired) {\n          iconType = VARIABLE_DIFFICULTY\n        } else if (selfSignAR.isCertifiedUserRequired) {\n          iconType = MEDIUM_DIFFICULTY\n        } else {\n          iconType = EASY_DIFFICULTY\n        }\n        description = ar.name ?? ''\n        break\n      }\n      case SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement:\n      case SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement:\n        title = ACT_TITLE\n        iconType = VARIABLE_DIFFICULTY\n        description = ar.name ?? ''\n        break\n      case 'org.sagebionetworks.repo.model.LockAccessRequirement':\n        title = LOCK_TITLE\n        iconType = VARIABLE_DIFFICULTY\n        description =\n          'Access restricted pending review by Synapse Access and Compliance Team.'\n        break\n    }\n    if (title) {\n      content = (\n        <div className=\"MeetAccessRequirementCard actionRequiredCard\">\n          <Icon type={iconType} />\n          <div className=\"metadata\">\n            <Typography variant=\"headline3\" className=\"title\">\n              {title}\n            </Typography>\n            <div className=\"fileCount\">{count} File(s)</div>\n            <div className=\"description\">{description}</div>\n          </div>\n          <div className=\"startButtonContainer\">\n            <Button\n              className=\"startButton\"\n              variant=\"primary\"\n              onClick={() => setIsShowingAccessRequirement(true)}\n            >\n              Start\n            </Button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <>\n      {!isError && !isFetching && content}\n      {isFetching && <LoadingAccessRequirementCard />}\n      {isShowingAccessRequirement && ar && (\n        <AccessRequirementList\n          entityId={ar.subjectIds[0].id}\n          accessRequirementFromProps={[ar]}\n          renderAsModal={true}\n          numberOfFilesAffected={count}\n          onHide={() => setIsShowingAccessRequirement(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport const LoadingAccessRequirementCard: React.FunctionComponent = () => {\n  return (\n    <div className=\"MeetAccessRequirementCard actionRequiredCard\">\n      <Skeleton variant=\"rectangular\" width={136} height={74} />\n      <div className=\"metadata\">\n        <div className=\"title\">\n          <Skeleton width={320} />\n        </div>\n        <div className=\"fileCount\">\n          <Skeleton width={100} />\n        </div>\n      </div>\n      <div className=\"startButtonContainer\">\n        <Skeleton variant=\"rectangular\" width={160} height={33} />\n      </div>\n    </div>\n  )\n}\n"],"names":["TERMS_OF_USE_TITLE","SELF_SIGN_TITLE","ACT_TITLE","LOCK_TITLE","MeetAccessRequirementCard","accessRequirementId","count","handleError","useErrorHandler","ar","isFetching","isError","newError","useGetAccessRequirements","useEffect","isShowingAccessRequirement","setIsShowingAccessRequirement","useState","content","jsx","Fragment","title","iconType","description","SUPPORTED_ACCESS_REQUIREMENTS","EASY_DIFFICULTY","selfSignAR","VARIABLE_DIFFICULTY","MEDIUM_DIFFICULTY","jsxs","Icon","Typography","Button","LoadingAccessRequirementCard","AccessRequirementList","Skeleton"],"mappings":"ugBAqBO,MAAAA,EAAA,oDAEAC,EAAA,oDAEAC,EAAA,yDAEAC,EAAA,oBAEAC,EAAA,CAAA,CAAA,oBAAAC,EAAA,MAAAC,KAAA,CAGL,MAAAC,EAAAC,IACA,CAAM,KAAAC,EACE,WAAAC,EACN,QAAAC,EACA,MAAAC,CACO,EAAAC,EAAAR,CAAA,EAETS,EAAAA,UAAA,IAAA,CACEH,GAAAC,GACEL,EAAAK,CAAA,CACF,EAAA,CAAAD,EAAAC,EAAAL,CAAA,CAAA,EAEF,KAAA,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEA,IAAAC,EAAAC,EAAAC,EAAA,CAAA,CAAA,EACA,GAAA,CAAAT,GAAA,CAAAD,GAAAD,EAAA,CACE,IAAAY,EACAC,EAAA,GACAC,EAAA,GACA,OAAAd,EAAA,aAAA,CAAyB,KAAAe,EAAA,4BAErBH,EAAArB,EACAsB,EAAAG,EACAF,EAAAd,EAAA,MAAA,GACA,MAAA,KAAAe,EAAA,0BAAA,CAEAH,EAAApB,EACA,MAAAyB,EAAAjB,EAEAiB,EAAA,2BACEJ,EAAAK,EAAWD,EAAA,wBAEXJ,EAAAM,EAEAN,EAAAG,EAEFF,EAAAd,EAAA,MAAA,GACA,KAAA,CACF,KAAAe,EAAA,4BACmC,KAAAA,EAAA,qBAEjCH,EAAAnB,EACAoB,EAAAK,EACAJ,EAAAd,EAAA,MAAA,GACA,MAAA,IAAA,uDAEAY,EAAAlB,EACAmB,EAAAK,EACAJ,EAAA,0EAEA,KAAA,CAEJF,IACEH,EAAAW,EAAA,MAAA,CAAA,UAAA,+CAAA,SAAA,CAEIV,EAAAW,EAAA,CAAA,KAAAR,CAAA,CAAA,EAAsBO,EAAA,MAAA,CAAA,UAAA,WAAA,SAAA,CAEpBV,EAAAY,EAAA,CAAA,QAAA,YAAA,UAAA,QAAA,SAAAV,EAAA,EAEAQ,EAAA,MAAA,CAAA,UAAA,YAAA,SAAA,CAC4BvB,EAAA,UAAM,EAAA,EAAQa,EAAA,MAAA,CAAA,UAAA,cAAA,SAAAI,EAAA,CACA,EAAA,EAC5CJ,EAAA,MAAA,CAAA,UAAA,uBAAA,SAAAA,EAEEa,EAAC,CAAA,UAAA,cACW,QAAA,UACF,QAAA,IAAAhB,EAAA,EAAA,EACyC,SAAA,OAClD,CAAA,EAAA,CAGH,CAAA,CAAA,EAGN,CAGF,OAAAa,EAAAT,EAAA,CAAA,SAAA,CAEK,CAAAT,GAAA,CAAAD,GAAAQ,EAA2BR,GAAAS,EAAAc,EAAA,EAAA,EACiBlB,GAAAN,GAAAU,EAE3Ce,EAAC,CAAA,SAAAzB,EAAA,WAAA,CAAA,EAAA,GAC4B,2BAAA,CAAAA,CAAA,EACI,cAAA,GAChB,sBAAAH,EACQ,OAAA,IAAAU,EAAA,EAAA,CAC0B,CAAA,CACnD,CAAA,CAAA,CAIR,EAEOiB,EAAA,IACLJ,EAAA,MAAA,CAAA,UAAA,+CAAA,SAAA,CAEIV,EAAAgB,EAAA,CAAA,QAAA,cAAA,MAAA,IAAA,OAAA,GAAA,EAAwDN,EAAA,MAAA,CAAA,UAAA,WAAA,SAAA,CAEtDV,EAAA,MAAA,CAAA,UAAA,QAAA,SAAAA,EAAAgB,EAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,EAEAhB,EAAA,MAAA,CAAA,UAAA,YAAA,SAAAA,EAAAgB,EAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAGA,EAAA,EACFhB,EAAA,MAAA,CAAA,UAAA,uBAAA,SAAAA,EAAAgB,EAAA,CAAA,QAAA,cAAA,MAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAGA,CAAA,CAAA"}