import{u as A}from"./useQueries-df6a4775.js";import{ae as R,h as u,m as y,n,l as o}from"./ApplicationSessionManager-9bd355c2.js";import{u as m}from"./useMutation-71b4db1e.js";import{u as k}from"./useInfiniteQuery-79b77040.js";import"./getEndpoint-ac94413e.js";import"./OrientationBanner-a1ca5cdb.js";import{u as g}from"./useTheme-e79ecbc0.js";import{u as F}from"./useMediaQuery-009aa540.js";import{s as f}from"./sortBy-0326211f.js";const K=async(e,s)=>{const t=s.map(r=>R(e,r)),c=await Promise.all(t);return f(s,r=>-1*Number(c.find(a=>r===a.accessRequirementId).isApproved))};function w(){const e=g();return F(e.breakpoints.up("md"))}function D(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getAccessRequirementQueryKey(String(e)),queryFn:()=>n.getAccessRequirementById(t,e)})}function v(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getEntityAccessRequirementsQueryKey(e),queryFn:()=>n.getAllAccessRequirements(t,e)})}function j(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getTeamAccessRequirementsQueryKey(e),queryFn:()=>n.getTeamAccessRequirements(t,e)})}function p(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getAccessRequirementWikiPageKey(e),queryFn:()=>n.getWikiPageKeyForAccessRequirement(t,e)})}function B(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getAccessRequirementAclQueryKey(e),queryFn:()=>n.getAccessRequirementAcl(t,e)})}function U(e,s){const{accessToken:t,keyFactory:c}=u();return k({...s,queryKey:c.searchAccessRequirementsQueryKey(e),queryFn:async r=>await n.searchAccessRequirements(t,{...e,nextPageToken:r.pageParam}),initialPageParam:void 0,getNextPageParam:r=>r.nextPageToken})}function x(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getAccessRequirementRestrictionInformationQueryKey(e),queryFn:()=>n.getRestrictionInformation(e,t)})}function W(e){const{accessToken:s}=u(),t=o(),{keyFactory:c}=u();return m({...e,mutationFn:r=>n.createLockAccessRequirement(r,s),mutationKey:["createLockAccessRequirement"],onSuccess:async(r,a,i)=>{if(await t.invalidateQueries({queryKey:c.getAccessRequirementQueryKey()}),await t.invalidateQueries({queryKey:c.getAllEntityDataQueryKey()}),e!=null&&e.onSuccess)return e.onSuccess(r,a,i)}})}function q(e,s,t){return{queryKey:e.getAccessRequirementStatusQueryKey(t),queryFn:()=>n.getAccessRequirementStatus(s,t)}}function I(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,...q(c,t,e)})}function L(e){const{accessToken:s,keyFactory:t}=u();return A({queries:e.map(c=>q(t,s,c))})}function E(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getSortedAccessRequirementsAndStatusQueryKey(e),queryFn:()=>K(t,e)})}function M(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getAccessRequirementResearchProjectQueryKey(e),queryFn:()=>n.getResearchProject(e,t)})}function b(e){const{accessToken:s}=u(),t=o(),{keyFactory:c}=u();return m({...e,mutationFn:r=>n.updateResearchProject(r,s),onSuccess:async(r,a,i)=>{if(await t.invalidateQueries({queryKey:c.getAccessRequirementResearchProjectQueryKey(r.accessRequirementId)}),e!=null&&e.onSuccess)return e.onSuccess(r,a,i)}})}function N(e,s){const{accessToken:t,keyFactory:c}=u();return y({...s,queryKey:c.getDataAccessRequestForUpdateQueryKey(e),queryFn:()=>n.getDataAccessRequestForUpdate(e,t)})}function z(e){const{accessToken:s}=u(),t=o(),{keyFactory:c}=u();return m({...e,mutationFn:r=>n.updateDataAccessRequest(r,s),onSuccess:async(r,a,i)=>{if(await t.invalidateQueries({queryKey:c.getDataAccessRequestForUpdateQueryKey(r.accessRequirementId)}),e!=null&&e.onSuccess)return e.onSuccess(r,a,i)}})}function O(e){const{accessToken:s}=u(),t=o(),{keyFactory:c}=u();return m({...e,mutationFn:r=>n.createAccessApproval(s,r),onSuccess:async(r,a,i)=>{if(await t.invalidateQueries({queryKey:c.getAccessRequirementStatusQueryKey(String(a.requirementId))}),e!=null&&e.onSuccess)return e.onSuccess(r,a,i)}})}function H(e){const{accessToken:s}=u(),t=o(),{keyFactory:c}=u();return m({...e,mutationFn:r=>n.cancelDataAccessRequest(r.submissionId,s),onSuccess:async(r,a,i)=>{if(await t.invalidateQueries({queryKey:c.getAccessRequirementStatusQueryKey(String(a.accessRequirementId))}),e!=null&&e.onSuccess)return e.onSuccess(r,a,i)}})}export{U as a,D as b,B as c,p as d,j as e,L as f,z as g,w as h,M as i,b as j,N as k,I as l,H as m,O as n,v as o,E as p,x as q,W as u};
