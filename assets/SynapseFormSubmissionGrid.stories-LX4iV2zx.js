import{j as l}from"./jsx-runtime-BD4Lws4r.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-CUbcTwrY.js";import{aH as S,M as a}from"./useFiles-D_JB97Dd.js";import"./OrientationBanner-B9Ix_96M.js";import"./index-BQmiQiuI.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-pmFAcyEy.js";import{S as E}from"./SynapseFormSubmissionGrid-BciI776Q.js";import"./mockSchema-DUD-kT13.js";import"./mockFileEntity-CKKyz2DS.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DajhyOGQ.js";import"./mockTeam-Fr_djS9J.js";import"./SynapseConstants-DP5MDcEa.js";import"./uniqueId-foaDn3QB.js";import"./toString-4uBEoJN0.js";import"./isObjectLike-DmjEXA5C.js";import"./iframe-B_s7h1r3.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B0yBMpE8.js";import"./times-BxF6ZD44.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DzgHPup7.js";import"./asyncJobHandlers-Dwr6TK8i.js";import"./BasicMockedCrudService-B9H5sQMW.js";import"./cloneDeep-D-VLR9nf.js";import"./_Uint8Array-DECVW7wJ.js";import"./_initCloneObject-CWrZArqt.js";import"./_getTag-DYiGo6mU.js";import"./isEqual-DLYyY67n.js";import"./_baseIsEqual-C4SuTQ3y.js";import"./mockAnnotationColumns-Dsy6pZDk.js";import"./tableQueryHandlers-BUSC1PBQ.js";import"./omit-DVVcyjgw.js";import"./_baseGet-Bw23BSBe.js";import"./isNil-mi6BU05T.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-D9bDLSfz.js";import"./_baseFlatten--QG0c_6S.js";import"./pick-DSP6XHCh.js";import"./_baseSet-BkpqAXom.js";import"./hasIn-B_tsn0zZ.js";import"./accessRequirementAclHandlers-CPeTPdfH.js";import"./mockAccessRequirementAcls-DsS4SKA1.js";import"./mockAccessRequirements-BAA7BZTP.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-BVpdQtcq.js";import"./wikiHandlers-3HBJPd6K.js";import"./mockWikiPageKey-YwMLAjFL.js";import"./teamHandlers--LLxHxDH.js";import"./dataAccessRequestHandlers-S6ID9tzx.js";import"./MockResearchProject-Cv3L41cB.js";import"./mock_discussion-DT5WeyJk.js";import"./fakerUtils-Cy6SwSD0.js";import"./index-BnBuUQK-.js";import"./mockTableEntity-fPHsfiKn.js";import"./mockFileEntityACLVariants-DwKeLio6.js";import"./entityHandlers-CNRVa4m0.js";import"./mockEntity-DwrfG7Ml.js";import"./mockEvaluationQueue-9cPsp0Xp.js";import"./featureFlagHandlers-Do15zRbX.js";import"./fileHandlers-CWmMBMjO.js";import"./personalAccessTokenHandlers-BOnC6BlK.js";import"./researchProjectHandlers-CUc_1W9e.js";import"./resetTwoFactorAuthHandlers-CtuhCXVr.js";import"./userProfileHandlers-CMjL-H2o.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BBWYv0r8.js";import"./FullWidthAlert-B6Hzy503.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DlTRLF6t.js";import"./createTheme-TJQ-Me4W.js";import"./resolveComponentProps-CNz-D9dt.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DI00mLUt.js";import"./createSvgIcon-DH7gczeL.js";import"./DefaultPropsProvider-DtDi0Gt5.js";import"./Close-CggPnEUr.js";import"./IconButton-G7ahMeIA.js";import"./ButtonBase-BgglPDc6.js";import"./useTimeout-BDW9Ghs7.js";import"./useIsFocusVisible-Cex7JU8r.js";import"./useEventCallback-DAsX7y3A.js";import"./Paper-bcyjQXbo.js";import"./Stack-DylG5yLx.js";import"./getThemeProps-B1NOqccD.js";import"./useTheme-CoBXuknm.js";import"./Box-D3BYjgB7.js";import"./AlertTitle-6ZpIjRE4.js";import"./Typography-btQXjNFB.js";import"./useTheme-DwB7SBSA.js";import"./Grow-DjwQF0B5.js";import"./index-DBgz7f_2.js";import"./utils-B9UGWasi.js";import"./ClickAwayListener-vbZZL3nn.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BnVDD-6_.js";import"./index-cvsUPyqt.js";import"./useControlled-CnNyARgE.js";import"./useId-DVHINaBJ.js";import"./Popper-CUtaqr2z.js";import"./Button-GHEHd2qc.js";import"./useQuery-BRwyF-CG.js";import"./utils-aAzvXSW-.js";import"./Link-D3THyCk_.js";import"./Collapse-jKA3781i.js";import"./tinycolor-Begke6kS.js";import"./Fade-j31nN2R5.js";import"./Skeleton-B0qgezQP.js";import"./inputBaseClasses-Bonb5ujV.js";import"./calculateFriendlyFileSize-CR3Crrbc.js";import"./CheckCircleTwoTone-BagmZIiC.js";import"./InfoTwoTone-BqVlvS4U.js";import"./mutation-Bl_77Z8X.js";import"./dayjs.min-D6Gybxm8.js";import"./chunk-AYJ5UCUI-DuHSP6qP.js";import"./index-BKcNlqDU.js";import"./react-CIBidaCI.js";import"./util-U4Nrrqkz.js";import"./WideButton-BKpOGEUT.js";import"./DeleteTwoTone-IPCIsCVL.js";import"./createSvgIcon-AvSs5M_8.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CLN21WhA.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BAxHlmN1.js";import"./DialogBase-C2x5qcVo.js";import"./Close--FsZOHC2.js";import"./HelpPopover-xujSKLCk.js";import"./MarkdownPopover-Dw5KyvzG.js";import"./LightTooltip-SeMrTTBB.js";import"./MarkdownSynapse-DJwz4JA-.js";import"./SkeletonButton-CUz-cBYp.js";import"./SkeletonInlineBlock-DmWfdPEs.js";import"./SkeletonTable-BlksKcy8.js";import"./SkeletonParagraph-CCLHTBSK.js";import"./HelpOutlineTwoTone-CM-eX0TL.js";import"./DialogTitle-h384kedJ.js";import"./DialogContent-Q5k7w046.js";import"./Dialog-Cts_P0fH.js";import"./Modal-pqYxs7WV.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Dh9z0_E0.js";import"./WarningDialog-3Mzo6Odt.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
