{"version":3,"file":"ImposeRestrictionDialog-6931a807.js","sources":["../../src/components/AccessRequirement/ImposeRestrictionDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Stack,\n  Typography,\n} from '@mui/material'\nimport { RadioGroup } from '../widgets/RadioGroup'\nimport FullWidthAlert from '../FullWidthAlert/FullWidthAlert'\nimport IconSvg from '../IconSvg/IconSvg'\nimport { useCreateLockAccessRequirement } from '../../synapse-queries'\nimport { displayToast } from '../ToastMessage/ToastMessage'\nimport { HelpPopover } from '../HelpPopover'\n\nexport type ImposeRestrictionFormProps = {\n  /* The ID of the entity that the user may choose to restrict */\n  entityId: string\n  open: boolean\n  onClose: () => void\n}\n\nexport default function ImposeRestrictionDialog(\n  props: ImposeRestrictionFormProps,\n) {\n  const NOT_HUMAN_DATA_WARNING = (\n    <Typography variant={'smallText1'}>\n      Sage Bionetworks does not typically impose conditions for use on non-human\n      data unless there is a legal, ethical or regulatory reason to do so. If\n      you want to add conditions for use to this content, please contact the\n      Synapse Access and Compliance Team (ACT) to discuss at{' '}\n      <a href={'mailto:act@sagebase.org'}>act@sagebase.org</a>.\n    </Typography>\n  )\n\n  const { entityId, open, onClose } = props\n  const [isSensitiveHumanData, setIsSensitiveHumanData] = React.useState<\n    boolean | undefined\n  >(undefined)\n\n  const { mutate: createLockedAccessRequirement, isLoading } =\n    useCreateLockAccessRequirement({\n      onSuccess: () => {\n        displayToast('Successfully imposed restriction', 'success')\n        // PORTALS-2664: Send the user to the the ACT Service Desk\n        // so they can tell ACT more information about what kind of\n        // Conditions For Use (or Data Access Restriction) should be\n        // added.\n        window.open(\n          'https://sagebionetworks.jira.com/servicedesk/customer/portal/8/group/15/create/134',\n          '_blank',\n        )\n        onClose()\n      },\n      onError: e => {\n        displayToast(`Failed to impose restriction: ${e.reason}`, 'danger')\n      },\n    })\n\n  function okClickedHandler() {\n    if (isSensitiveHumanData) {\n      createLockedAccessRequirement(entityId)\n    } else {\n      onClose()\n    }\n  }\n\n  function radioOnChangeHandler(newValue: boolean) {\n    setIsSensitiveHumanData(newValue)\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth={'sm'} fullWidth>\n      <DialogTitle>\n        <Stack direction=\"row\" alignItems={'center'} gap={'5px'}>\n          Conditions for Use\n          <HelpPopover\n            markdownText={\n              'Conditions for use describes data use requirements that must be fulfilled before downloading.'\n            }\n            helpUrl={\n              'https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html#SharingSettings,Permissions,andConditionsforUse-ConditionsforUse'\n            }\n          />\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton onClick={onClose}>\n            <IconSvg icon={'close'} wrap={false} sx={{ color: 'grey.700' }} />\n          </IconButton>\n        </Stack>\n      </DialogTitle>\n      <DialogContent>\n        <FormControl sx={{ width: '100%' }}>\n          <FormLabel id=\"demo-radio-buttons-group-label\">\n            Is this sensitive human data that must be protected?\n          </FormLabel>\n          <RadioGroup<boolean>\n            id={`impose-restriction-${entityId}`}\n            value={isSensitiveHumanData}\n            options={[\n              {\n                label: 'Yes',\n                value: true,\n              },\n              {\n                label: 'No',\n                value: false,\n              },\n            ]}\n            onChange={radioOnChangeHandler}\n          ></RadioGroup>\n          {isSensitiveHumanData === false && (\n            <FullWidthAlert\n              variant={'warning'}\n              isGlobal={false}\n              description={NOT_HUMAN_DATA_WARNING}\n            />\n          )}\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={isLoading} onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          disabled={isSensitiveHumanData == null || isLoading}\n          variant=\"contained\"\n          onClick={okClickedHandler}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["ImposeRestrictionDialog","props","NOT_HUMAN_DATA_WARNING","jsxs","Typography","jsx","entityId","open","onClose","isSensitiveHumanData","setIsSensitiveHumanData","React","createLockedAccessRequirement","isLoading","useCreateLockAccessRequirement","displayToast","e","okClickedHandler","radioOnChangeHandler","newValue","Dialog","DialogTitle","Stack","HelpPopover","Box","IconButton","IconSvg","DialogContent","FormControl","FormLabel","RadioGroup","FullWidthAlert","DialogActions","Button"],"mappings":"w1BA4BA,SAAAA,EAAAC,EAAA,CAGE,MAAAC,EAAAC,EAAAC,EAAA,CAAA,QAAA,aAAA,SAAA,CACqC,mRAAA,IAIsBC,EAAA,IAAA,CAAA,KAAA,0BAAA,SAAA,mBAAA,EACH,GAAI,CAAA,CAAA,EAI5D,CAAA,SAAAC,EAAA,KAAAC,EAAA,QAAAC,CAAA,EAAAP,EACA,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,SAAA,MAAA,EAIA,CAAA,OAAAC,EAAA,UAAAC,CAAA,EAAAC,EAAA,CACiC,UAAA,IAAA,CAE3BC,EAAA,mCAAA,SAAA,EAKA,OAAA,KAAO,qFACL,QACA,EAEFP,GAAQ,EACV,QAAAQ,GAAA,CAEED,EAAA,iCAAAC,EAAA,SAAA,QAAA,CAAkE,CACpE,CAAA,EAGJ,SAAAC,GAAA,CACER,EACEG,EAAAN,CAAA,EAEAE,GACF,CAGF,SAAAU,EAAAC,EAAA,CACET,EAAAS,CAAA,CAAgC,CAGlC,OAAAhB,EAAAiB,EAAA,CAAA,KAAAb,EAAA,QAAAC,EAAA,SAAA,KAAA,UAAA,GAAA,SAAA,CAEIH,EAAAgB,EAAA,CAAA,SAAAlB,EAAAmB,EAAA,CAAA,UAAA,MAAA,WAAA,SAAA,IAAA,MAAA,SAAA,CAC2D,qBAAAjB,EAEvDkB,EAAC,CAAA,aAAA,gGAEG,QAAA,sKAGA,CAAA,EAEJlB,EAAAmB,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,EAAA,EAC0BnB,EAAAoB,EAAA,CAAA,QAAAjB,EAAA,SAAAH,EAAAqB,EAAA,CAAA,KAAA,QAAA,KAAA,GAAA,GAAA,CAAA,MAAA,UAAA,CAAA,CAAA,EAAA,CAG1B,CAAA,CAAA,CAAA,CAAA,EAEJrB,EAAAsB,EAAA,CAAA,SAAAxB,EAAAyB,EAAA,CAAA,GAAA,CAAA,MAAA,MAAA,EAAA,SAAA,CAGIvB,EAAAwB,EAAA,CAAA,GAAA,iCAAA,SAAA,uDAAA,EAEAxB,EACAyB,EAAC,CAAA,GAAA,sBAAAxB,IAC2B,MAAAG,EACnB,QAAA,CACE,CACP,MAAA,MACS,MAAA,EACA,EACT,CACA,MAAA,KACS,MAAA,EACA,CACT,EACF,SAAAS,CACU,CAAA,EACXT,IAAA,IAAAJ,EAEC0B,EAAC,CAAA,QAAA,UACU,SAAA,GACC,YAAA7B,CACG,CAAA,CACf,CAAA,CAAA,CAAA,CAAA,EAGNC,EAAA6B,EAAA,CAAA,SAAA,CAEE3B,EAAA4B,EAAA,CAAA,QAAA,WAAA,SAAApB,EAAA,QAAAL,EAAA,SAAA,QAAA,CAAA,EAEAH,EACA4B,EAAC,CAAA,SAAAxB,GAAA,MAAAI,EAC2C,QAAA,YAClC,QAAAI,EACC,SAAA,IACV,CAAA,CAED,EAAA,CACF,CAAA,CAAA,CAGN"}