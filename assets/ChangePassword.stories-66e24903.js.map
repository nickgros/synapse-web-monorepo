{"version":3,"file":"ChangePassword.stories-66e24903.js","sources":["../../src/components/ChangePassword/ChangePassword.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, TextField } from '@mui/material'\nimport { ChangePasswordWithCurrentPassword } from '@sage-bionetworks/synapse-types'\nimport { displayToast } from '../ToastMessage/ToastMessage'\nimport SynapseClient from '../../synapse-client'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport { UserProfile } from '@sage-bionetworks/synapse-types'\n\nexport const ChangePassword: React.FunctionComponent = () => {\n  const { accessToken } = useSynapseContext()\n  const [oldPassword, setOldPassword] = useState<string>('')\n  const [newPassword, setNewPassword] = useState<string>('')\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\n  const [currentUserProfile, setUserProfile] = useState<UserProfile>()\n\n  useEffect(() => {\n    async function getUserProfile() {\n      const userProfile = await SynapseClient.getUserProfile(accessToken)\n      setUserProfile(userProfile)\n    }\n    if (accessToken) {\n      getUserProfile()\n    } else {\n      setUserProfile(undefined)\n    }\n  }, [accessToken])\n\n  const handleChangePassword = async (\n    clickEvent: React.FormEvent<HTMLElement>,\n  ) => {\n    clickEvent.preventDefault()\n    try {\n      if (newPassword !== confirmPassword) {\n        displayToast(\n          'New password and confirm password does not match.',\n          'danger',\n        )\n      } else if (accessToken) {\n        const changeRequest: ChangePasswordWithCurrentPassword = {\n          newPassword,\n          concreteType:\n            'org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword',\n          username: currentUserProfile?.userName!,\n          currentPassword: oldPassword,\n        }\n        await SynapseClient.changePasswordWithCurrentPassword(\n          changeRequest,\n          accessToken,\n        )\n          .then(() => displayToast('Successfully changed', 'success'))\n          .catch((err: any) => displayToast(err.reason as string, 'danger'))\n      }\n    } catch (err) {\n      displayToast(err.reason as string, 'danger')\n    }\n  }\n\n  return (\n    <div className=\"changePassword\">\n      <form\n        onSubmit={e => {\n          handleChangePassword(e)\n        }}\n      >\n        <TextField\n          id=\"oldPassword\"\n          label=\"Current Password\"\n          type=\"password\"\n          onChange={e => setOldPassword(e.target.value)}\n          value={oldPassword}\n          fullWidth\n        />\n        <TextField\n          id=\"newPassword\"\n          label=\"New Password\"\n          type=\"password\"\n          onChange={e => setNewPassword(e.target.value)}\n          value={newPassword}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"confirmPassword\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          onChange={e => setConfirmPassword(e.target.value)}\n          value={confirmPassword}\n          fullWidth\n          margin=\"normal\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onSubmit={e => {\n            handleChangePassword(e)\n          }}\n          sx={{ mt: 2 }}\n        >\n          Change Password\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n"],"names":["ChangePassword","accessToken","useSynapseContext","oldPassword","setOldPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","currentUserProfile","setUserProfile","useEffect","getUserProfile","userProfile","SynapseClient","handleChangePassword","clickEvent","displayToast","changeRequest","err","jsx","jsxs","e","TextField","Button"],"mappings":"09DAQO,MAAAA,EAAA,IAAA,CACL,KAAA,CAAA,YAAAC,GAAAC,IACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAAA,EACA,CAAAK,EAAAC,CAAA,EAAAN,EAAA,SAAA,EAEAO,EAAAA,UAAA,IAAA,CACE,eAAAC,GAAA,CACE,MAAAC,EAAA,MAAAC,EAAA,eAAAd,CAAA,EACAU,EAAAG,CAAA,CAA0B,CAE5Bb,EACEY,IAEAF,EAAA,MAAA,CACF,EAAA,CAAAV,CAAA,CAAA,EAGF,MAAAe,EAAA,MAAAC,GAAA,CAGEA,EAAA,eAAA,EACA,GAAA,CACE,GAAAX,IAAAE,EACEU,EAAA,oDACE,QACA,UACFjB,EAAA,CAEA,MAAAkB,EAAA,CAAyD,YAAAb,EACvD,aAAA,wEAEE,SAAAI,GAAA,YAAAA,EAAA,SAC4B,gBAAAP,CACb,EAEnB,MAAAY,EAAA,kCAAoBI,EAClBlB,CACA,EAAA,KAAA,IAAAiB,EAAA,uBAAA,SAAA,CAAA,EAAA,MAAAE,GAAAF,EAAAE,EAAA,OAAA,QAAA,CAAA,EAIJ,OAAAA,EAAA,CAEAF,EAAAE,EAAA,OAAA,QAAA,CAA2C,CAC7C,EAGF,OAAAC,EAAA,MAAA,CAAA,UAAA,iBAAA,SAAAC,EAEI,OAAC,CAAA,SAAAC,GAAA,CAEGP,EAAAO,CAAA,CAAsB,EACxB,SAAA,CAEAF,EAAAG,EAAC,CAAA,GAAA,cACI,MAAA,mBACG,KAAA,WACD,SAAAD,GAAAnB,EAAAmB,EAAA,OAAA,KAAA,EACuC,MAAApB,EACrC,UAAA,EACE,CAAA,EACXkB,EACAG,EAAC,CAAA,GAAA,cACI,MAAA,eACG,KAAA,WACD,SAAAD,GAAAhB,EAAAgB,EAAA,OAAA,KAAA,EACuC,MAAAjB,EACrC,UAAA,GACE,OAAA,QACF,CAAA,EACTe,EACAG,EAAC,CAAA,GAAA,kBACI,MAAA,mBACG,KAAA,WACD,SAAAD,GAAAd,EAAAc,EAAA,OAAA,KAAA,EAC2C,MAAAf,EACzC,UAAA,GACE,OAAA,QACF,CAAA,EACTa,EACAI,EAAC,CAAA,QAAA,YACS,MAAA,UACF,KAAA,SACD,SAAAF,GAAA,CAEHP,EAAAO,CAAA,CAAsB,EACxB,GAAA,CAAA,GAAA,CAAA,EACY,SAAA,iBACb,CAAA,CAED,CAAA,CAAA,CAAA,CAAA,CAIR"}