{"version":3,"file":"mockSchema-94bf6f59.js","sources":["../../mocks/mockSchema.ts"],"sourcesContent":["import {\n  BoundObjectType,\n  JsonSchemaObjectBinding,\n} from '@sage-bionetworks/synapse-types'\nimport { ObjectType } from '@sage-bionetworks/synapse-types'\nimport { ValidationResults } from '@sage-bionetworks/synapse-types'\nimport mockFileEntityData from './entity/mockFileEntity'\nimport { JSONSchema7 } from 'json-schema'\n\nconst mockFileEntity = mockFileEntityData.entity\n\nexport const mockSchemaBinding: JsonSchemaObjectBinding = {\n  jsonSchemaVersionInfo: {\n    organizationId: '1',\n    organizationName: 'org.sagebionetworks',\n    schemaId: '1',\n    schemaName: 'Mock Schema',\n    versionId: '555',\n    $id: 'org.sagebionetworks-MockSchema',\n    jsonSHA256Hex:\n      '5f2cd73c0fe25b30cbee2f213b6d633951f1873ca1911f494d4654f702a69e95',\n    createdOn: '2021-04-01T08:00:00.000Z',\n    createdBy: '1',\n  },\n  objectId: 3333,\n  objectType: BoundObjectType.entity,\n  createdOn: '2021-04-01T08:00:00.000Z',\n  createdBy: '1',\n}\n\nexport const mockSchemaValidationResults: ValidationResults = {\n  objectId: mockFileEntity.id!,\n  objectType: ObjectType.entity,\n  objectEtag: mockFileEntity.etag!,\n  schema$id: `https://repo-prod.prod.sagebase.org/repo/v1/schema/type/registered/${mockSchemaBinding.jsonSchemaVersionInfo.$id}`,\n  isValid: true,\n  validatedOn: '2021-06-28T20:08:44.046Z',\n}\n\nexport const mockValidationSchema: JSONSchema7 = {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  $id: `https://repo-prod.prod.sagebase.org/repo/v1/schema/type/registered/${mockSchemaBinding.jsonSchemaVersionInfo.$id}`,\n  type: 'object',\n  properties: {\n    country: {\n      enum: ['USA', 'CA'],\n      description: 'Test description for country property',\n    },\n    showStringArray: {\n      type: 'boolean',\n    },\n  },\n  required: ['country'],\n  allOf: [\n    {\n      if: {\n        properties: {\n          country: {\n            const: 'USA',\n          },\n        },\n        required: ['country'],\n      },\n      then: {\n        properties: {\n          state: {\n            type: 'string',\n          },\n        },\n        required: ['state'],\n      },\n    },\n    {\n      if: {\n        properties: {\n          country: {\n            const: 'CA',\n          },\n        },\n        required: ['country'],\n      },\n      then: {\n        properties: {\n          province: {\n            type: 'string',\n          },\n        },\n        required: ['province'],\n      },\n    },\n    {\n      if: {\n        properties: {\n          showStringArray: {\n            const: true,\n          },\n        },\n        required: ['showStringArray'],\n      },\n      then: {\n        properties: {\n          stringArray: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  ],\n}\n"],"names":["mockFileEntity","mockFileEntityData","mockSchemaBinding","BoundObjectType","ObjectType"],"mappings":"0GASA,MAAMA,EAAiBC,EAAmB,OAE7BC,EAA6C,CACxD,sBAAuB,CACrB,eAAgB,IAChB,iBAAkB,sBAClB,SAAU,IACV,WAAY,cACZ,UAAW,MACX,IAAK,iCACL,cACE,mEACF,UAAW,2BACX,UAAW,GACb,EACA,SAAU,KACV,WAAYC,EAAgB,OAC5B,UAAW,2BACX,UAAW,GACb,EAGYH,EAAe,GACbI,EAAW,OACXJ,EAAe,KACsD,GAAAE,EAAkB,sBAAsB,MAO9C,GAAAA,EAAkB,sBAAsB"}