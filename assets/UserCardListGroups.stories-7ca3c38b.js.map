{"version":3,"file":"UserCardListGroups.stories-7ca3c38b.js","sources":["../../src/components/UserCardList/UserCardListGroups/UserCardListGroups.Mobile.tsx","../../src/components/UserCardList/UserCardListGroups/UserCardListGroups.Desktop.tsx","../../src/components/UserCardList/UserCardListGroups/UserCardListGroups.tsx"],"sourcesContent":["import React from 'react'\nimport UserCardListRotate from '../UserCardListRotate'\nimport { FacetColumnValuesRequest } from '@sage-bionetworks/synapse-types'\nimport ExpandableContent from '../../home_page/ExpandableContent'\nimport { UserCardListGroupsProps } from './UserCardListGroups'\n\nexport default function UserCardListGroupsMobile(\n  props: UserCardListGroupsProps,\n) {\n  const { columnName, facetValues, ...rest } = props\n  return (\n    <div>\n      {facetValues?.map((el, curIndex) => {\n        const facetValue = facetValues[curIndex]\n        const selectedFacet: FacetColumnValuesRequest = {\n          columnName,\n          facetValues: [facetValue],\n          concreteType:\n            'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n        }\n        const content = (\n          <UserCardListRotate {...rest} selectedFacets={[selectedFacet]} />\n        )\n        const title = <> {facetValue} </>\n        return (\n          <ExpandableContent\n            key={`UserCardListGroup-Mobile-${curIndex}`}\n            title={title}\n            content={content}\n          />\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport UserCardListRotate from '../UserCardListRotate'\nimport { FacetColumnValuesRequest } from '@sage-bionetworks/synapse-types'\nimport { UserCardListGroupsProps } from './UserCardListGroups'\n\nexport default function UserCardListGroupsDesktop(\n  props: UserCardListGroupsProps,\n) {\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState<number>(0)\n  const { columnName, facetValues, ...rest } = props\n  const selectedFacet: FacetColumnValuesRequest = {\n    columnName,\n    facetValues: [facetValues[selectedGroupIndex]],\n    concreteType:\n      'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n  }\n  return (\n    <div className=\"control-container\">\n      <div className=\"button-container\">\n        {facetValues?.map((el, curIndex) => {\n          return (\n            <button\n              className={selectedGroupIndex === curIndex ? 'isSelected' : ''}\n              onClick={() => setSelectedGroupIndex(curIndex)}\n              key={el}\n            >\n              {el}\n            </button>\n          )\n        })}\n        {/* \n              This button keeps the border line in the button container running from top to bottom,\n              it doesn't have any functionality.\n            */}\n        <button className=\"gap-fill\" />\n      </div>\n      <div className=\"content-container\">\n        <UserCardListRotate\n          key={`UserCardListGroup-${selectedGroupIndex}`}\n          {...rest}\n          selectedFacets={[selectedFacet]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport UserCardListGroupsMobile from './UserCardListGroups.Mobile'\nimport UserCardListGroupsDesktop from './UserCardListGroups.Desktop'\nimport { Button } from 'react-bootstrap'\nimport { UserCardSize } from '../../../utils/SynapseConstants'\n\nexport type UserCardListGroupsProps = {\n  sql: string\n  columnName: string\n  facetValues: string[]\n  size: UserCardSize\n  summaryLink?: string\n  summaryLinkText?: string\n  count: number\n  useQueryResultUserData?: boolean\n}\n\nexport default function UserCardListGroups(props: UserCardListGroupsProps) {\n  const { summaryLink, summaryLinkText, ...rest } = props\n  const showDesktop = useShowDesktop()\n  return (\n    <div\n      className={`bootstrap-4-backport UserCardListGroups${\n        showDesktop ? '__Desktop' : ''\n      }`}\n    >\n      <div>\n        {showDesktop ? (\n          <UserCardListGroupsDesktop {...rest} />\n        ) : (\n          <UserCardListGroupsMobile {...rest} />\n        )}\n        {summaryLink && summaryLinkText && (\n          <div className=\"UserCardListGroups__summary\">\n            <Button variant=\"secondary\" size=\"lg\" href={summaryLink}>\n              {summaryLinkText}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":["UserCardListGroupsMobile","props","columnName","facetValues","rest","jsx","el","curIndex","facetValue","content","UserCardListRotate","ExpandableContent","jsxs","Fragment","UserCardListGroupsDesktop","selectedGroupIndex","setSelectedGroupIndex","useState","selectedFacet","UserCardListGroups","summaryLink","summaryLinkText","showDesktop","useShowDesktop","Button"],"mappings":"mqFAMA,SAAAA,EAAAC,EAAA,CAGE,KAAA,CAAA,WAAAC,EAAA,YAAAC,EAAA,GAAAC,CAAA,EAAAH,EACA,OAAAI,EAAA,MAAA,CAAA,SAAAF,GAAA,YAAAA,EAAA,IAAA,CAAAG,EAAAC,IAAA,CAGM,MAAAC,EAAAL,EAAAI,CAAA,EAOAE,EAAAJ,EAAAK,EAAA,CAAA,GAAAN,EAAA,eAAA,CANA,CAAgD,WAAAF,EAC9C,YAAA,CAAAM,CAAA,EACwB,aAAA,+DAEtB,CAEJ,CAAA,CAAA,EAIA,OAAAH,EACEM,EAAC,CAAA,MAFHC,EAAAC,EAAA,CAAA,SAAA,CAAgB,IAAAL,EAAE,GAAW,CAAA,CAAA,EAIzB,QAAAC,CACA,EAAA,4BAAAF,GAFiC,CAGnC,EAAA,CAAA,CAKV,+/BC7BA,SAAAO,EAAAb,EAAA,CAGE,KAAA,CAAAc,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EACA,CAAA,WAAAf,EAAA,YAAAC,EAAA,GAAAC,CAAA,EAAAH,EACAiB,EAAA,CAAgD,WAAAhB,EAC9C,YAAA,CAAAC,EAAAY,CAAA,CAAA,EAC6C,aAAA,+DAE3C,EAEJ,OAAAH,EAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,CAEIA,EAAA,MAAA,CAAA,UAAA,mBAAA,SAAA,CACGT,GAAA,YAAAA,EAAA,IAAA,CAAAG,EAAAC,IACCF,EACE,SAAC,CAAA,UAAAU,IAAAR,EAAA,aAAA,GAC6D,QAAA,IAAAS,EAAAT,CAAA,EACf,SAAAD,CAG5C,EAAAA,CAFI,GAKVD,EAAA,SAAA,CAAA,UAAA,UAAA,CAAA,CAK4B,EAAA,EAC/BA,EAAA,MAAA,CAAA,UAAA,oBAAA,SAAAA,EAEEK,EAAC,CAAA,GAAAN,EAEK,eAAA,CAAAc,CAAA,CAC0B,EAAA,qBAAAH,GAFJ,EAAA,CAI9B,CAAA,CAAA,CAGN,igCC3BA,SAAAI,EAAAlB,EAAA,CACE,KAAA,CAAA,YAAAmB,EAAA,gBAAAC,EAAA,GAAAjB,CAAA,EAAAH,EACAqB,EAAAC,IACA,OAAAlB,EACE,MAAC,CAAA,UAAA,0CAAAiB,EAAA,YAAA,KAE+B,SAAAV,EAAA,MAAA,CAAA,SAAA,CAI3BU,EAAAjB,EAAAS,EAAA,CAAA,GAAAV,CAAA,CAAA,EAAAC,EAAAL,EAAA,CAAA,GAAAI,EAAA,EAGqCgB,GAAAC,GAAAhB,EAAA,MAAA,CAAA,UAAA,8BAAA,SAAAA,EAAAmB,EAAA,CAAA,QAAA,YAAA,KAAA,KAAA,KAAAJ,EAAA,SAAAC,CAAA,CAAA,EAAA,CAOpC,EAAA,CAEJ,CAAA,CAGN;;;;;;;;;;;"}