{"version":3,"file":"EntityLink-d677e788.js","sources":["../../src/components/EntityLink.tsx"],"sourcesContent":["import { Link, Skeleton } from '@mui/material'\nimport React from 'react'\nimport {\n  convertToEntityType,\n  getEntityTypeFromHeader,\n} from '../utils/functions/EntityTypeUtils'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../utils/functions/getEndpoint'\nimport { useGetEntity, useGetEntityHeader } from '../synapse-queries'\nimport { Entity, EntityHeader } from '@sage-bionetworks/synapse-types'\nimport { EntityTypeIcon } from './EntityIcon'\nimport { ErrorBanner } from './error/ErrorBanner'\nimport ErrorChip from './error/ErrorChip'\n\ntype EntityLinkProps = {\n  entity: string | EntityHeader | Entity\n  versionNumber?: number\n  /** Whether the component should link to the entity page in Synapse. Default true */\n  link?: boolean\n  className?: string\n  /** Whether to display an icon identifying the entity type. Default true */\n  showIcon?: boolean\n  /** The field of the entity to display. Default is 'name' */\n  displayTextField?: keyof Entity | keyof EntityHeader\n}\n\nexport const EntityLink = (props: EntityLinkProps) => {\n  const {\n    entity: entityOrId,\n    className,\n    versionNumber,\n    displayTextField = 'name',\n    link = true,\n    showIcon = true,\n  } = props\n\n  let entityId = ''\n  if (typeof entityOrId === 'string') {\n    entityId = entityOrId\n  }\n\n  const fetchHeader = !!entityId && typeof entityOrId === 'string'\n\n  const { data: fetchedEntity, isLoading } = useGetEntityHeader(\n    entityId,\n    versionNumber,\n    {\n      enabled: fetchHeader,\n    },\n  )\n\n  // We don't get 4XX errors from useGetEntityHeader, so fetch the entity object to get an error response\n  // See PLFM-7989\n  const fetchFullEntity =\n    fetchHeader && fetchedEntity == undefined && !isLoading\n  const { error } = useGetEntity(entityId, versionNumber, {\n    enabled: fetchFullEntity,\n  })\n\n  if (fetchedEntity || typeof entityOrId !== 'string') {\n    const entity = fetchedEntity ?? (entityOrId as Entity | EntityHeader)\n    let type\n    if ('concreteType' in entity) {\n      type = convertToEntityType(entity.concreteType)\n    } else {\n      type = getEntityTypeFromHeader(entity)\n    }\n\n    if (link) {\n      return (\n        <Link\n          className={className}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Synapse:${entity.id!}${\n            versionNumber ? `.${versionNumber}` : ''\n          }`}\n        >\n          {showIcon && (\n            <EntityTypeIcon type={type} style={{ marginRight: '6px' }} />\n          )}\n          {entity[displayTextField as keyof typeof entity]}\n        </Link>\n      )\n    } else {\n      return (\n        <p className={className}>\n          {showIcon && (\n            <EntityTypeIcon type={type} style={{ marginRight: '6px' }} />\n          )}\n          {entity[displayTextField as keyof typeof entity]}\n        </p>\n      )\n    }\n  } else if (error) {\n    if (entityId) {\n      return <ErrorChip chipText={entityId} error={error} />\n    }\n    return <ErrorBanner error={error} />\n  } else {\n    return <Skeleton variant=\"rectangular\" width=\"100\" />\n  }\n}\n"],"names":["EntityLink","props","entityOrId","className","versionNumber","displayTextField","link","showIcon","entityId","fetchHeader","fetchedEntity","isLoading","useGetEntityHeader","fetchFullEntity","error","useGetEntity","entity","type","convertToEntityType","getEntityTypeFromHeader","jsxs","Link","PRODUCTION_ENDPOINT_CONFIG","jsx","EntityTypeIcon","ErrorChip","ErrorBanner","Skeleton"],"mappings":"kfAyBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAM,OAAAC,EACI,UAAAC,EACR,cAAAC,EACA,iBAAAC,EAAA,OACmB,KAAAC,EAAA,GACZ,SAAAC,EAAA,EACI,EAAAN,EAGb,IAAAO,EAAA,GACA,OAAAN,GAAA,WACEM,EAAAN,GAGF,MAAAO,EAAA,CAAA,CAAAD,GAAA,OAAAN,GAAA,SAEA,CAAA,KAAAQ,EAAA,UAAAC,CAAA,EAAAC,EAA2CJ,EACzCJ,EACA,CACA,QAAAK,CACW,CACX,EAKFI,EAAAJ,GAAAC,GAAA,MAAA,CAAAC,EAEA,CAAA,MAAAG,CAAA,EAAAC,EAAAP,EAAAJ,EAAA,CAAwD,QAAAS,CAC7C,CAAA,EAGX,GAAAH,GAAA,OAAAR,GAAA,SAAA,CACE,MAAAc,EAAAN,GAAAR,EACA,IAAAe,EAOA,MANA,iBAAAD,EACEC,EAAAC,EAAAF,EAAA,YAAA,EAEAC,EAAAE,EAAAH,CAAA,EAGFV,EACEc,EACEC,EAAC,CAAA,UAAAlB,EACC,OAAA,SACO,IAAA,sBACH,KAAA,GAAAmB,EAAA,MAAA,aAAAN,EAAA,EAAA,GAAAZ,EAAA,IAAAA,CAAA,GAAA,EAAA,GAGJ,SAAA,CAECG,GAAAgB,EAAAC,EAAA,CAAA,KAAAP,EAAA,MAAA,CAAA,YAAA,KAAA,EAAA,EAC4DD,EAAAX,CAAA,CAEd,CAAA,CAAA,EAInDe,EAAA,IAAA,CAAA,UAAAjB,EAAA,SAAA,CAEKI,GAAAgB,EAAAC,EAAA,CAAA,KAAAP,EAAA,MAAA,CAAA,YAAA,KAAA,EAAA,EAC4DD,EAAAX,CAAA,CAEd,CAAA,CAAA,CAGrD,KAAA,QAAAS,EAEAN,EACEe,EAAAE,EAAA,CAAA,SAAAjB,EAAA,MAAAM,CAAA,CAAA,EAEFS,EAAAG,EAAA,CAAA,MAAAZ,CAAA,CAAA,EAEAS,EAAAI,EAAA,CAAA,QAAA,cAAA,MAAA,KAAA,CAAA,CAEJ"}