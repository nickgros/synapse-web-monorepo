{"version":3,"file":"useGetEntityChallenge-241d1ee1.js","sources":["../../../../node_modules/.pnpm/@mui+system@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react@18.2.0/node_modules/@mui/system/esm/Box/Box.js","../../src/synapse-queries/entity/useGetEntityChallenge.ts"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { UseQueryOptions, useQuery } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { Challenge } from '@sage-bionetworks/synapse-types'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils'\n\nexport function useGetEntityChallenge(\n  entityId: string,\n  options?: UseQueryOptions<Challenge, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<Challenge, SynapseClientError>(\n    keyFactory.getEntityChallengeQueryKey(entityId),\n    () => SynapseClient.getEntityChallenge(entityId, accessToken),\n    options,\n  )\n}\n"],"names":["Box","createBox","Box$1","useGetEntityChallenge","entityId","options","accessToken","keyFactory","useSynapseContext","useQuery","SynapseClient"],"mappings":"4OAEA,MAAMA,EAAMC,EAAS,EAoBrBC,EAAeF,EChBC,SAAAG,EACdC,EACAC,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAC/C,OAAAC,EACLF,EAAW,2BAA2BH,CAAQ,EAC9C,IAAMM,EAAc,mBAAmBN,EAAUE,CAAW,EAC5DD,CAAA,CAEJ","x_google_ignoreList":[0]}