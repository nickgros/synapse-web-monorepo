import{a as N,j as r,F as x}from"./jsx-runtime-9dc53467.js";import{r as f}from"./index-76fb7be0.js";import{B as j}from"./SynapseConstants-eb00dc31.js";import"./getEndpoint-ac94413e.js";import"./ApplicationSessionManager-9bd355c2.js";import{f as re}from"./index-01eb1463.js";import{a as _}from"./queryUtils-ff7adfda.js";import{p as $,g as oe}from"./SqlFunctions-88356349.js";import{a as D}from"./useGetQueryResultBundle-a7856298.js";import{c as ne,P as ie}from"./factory-33ef2009.js";import{d as A}from"./dayjs.min-f79c4412.js";import{O as ae}from"./LightTooltip-54656538.js";import{M as le}from"./Dialog-71ea04ac.js";import{g as B}from"./ColorGradient-982494fb.js";import{B as g}from"./Box-551bafc7.js";import{T as O}from"./Typography-1d068b0b.js";import"./LeftRightPanel-a90477a3.js";import{S as ue}from"./StyledFormControl-003a613e.js";import"./WideButton-2e6b6d5a.js";import"./InputSizedButton-f0627758.js";import{I as de}from"./InputLabel-fd013c0b.js";import{S as ce}from"./Select-41068544.js";import{M as me}from"./MenuItem-4ee45934.js";import{S as E}from"./Skeleton-131bd473.js";const pe="species",ve="observationphase",U={concreteType:"org.sagebionetworks.repo.model.table.QueryResultBundle",queryResult:{concreteType:"org.sagebionetworks.repo.model.table.QueryResult",queryResults:{concreteType:"org.sagebionetworks.repo.model.table.RowSet",tableId:"syn52408661",etag:"a3270cb2-4373-4e12-9981-e12326e54ad1",headers:[{name:"species",columnType:"STRING",id:"152514"},{name:"observationPhase",columnType:"STRING",id:"197976"},{name:"observationPhaseOrder",columnType:"INTEGER",id:"198102"},{name:"observationTimeMax",columnType:"INTEGER",id:"198103"},{name:"observationTimeUnits",columnType:"STRING",id:"198101"}],rows:[{rowId:9,versionNumber:4,values:["Danio rerio","embryo","1","7","days"]},{rowId:10,versionNumber:4,values:["Danio rerio","larval","2","3","months"]},{rowId:11,versionNumber:4,values:["Danio rerio","juvenile","3","6","months"]},{rowId:12,versionNumber:4,values:["Danio rerio","adult","4","12","months"]},{rowId:16,versionNumber:4,values:["Drosophila","embryo","1","24","hours"]},{rowId:17,versionNumber:4,values:["Drosophila","larval","2","5","days"]},{rowId:18,versionNumber:4,values:["Drosophila","pupal","3","12","days"]},{rowId:19,versionNumber:4,values:["Drosophila","adult","4","5","weeks"]},{rowId:1,versionNumber:4,values:["Mus musculus","prenatal","1","21","days"]},{rowId:2,versionNumber:4,values:["Mus musculus","postnatal","2","6","months"]},{rowId:20,versionNumber:4,values:["Rattus norvegicus","prenatal","1","23","days"]},{rowId:21,versionNumber:4,values:["Rattus norvegicus","neonatal","2","4","weeks"]},{rowId:22,versionNumber:4,values:["Rattus norvegicus","weanling","3","2","months"]},{rowId:23,versionNumber:4,values:["Rattus norvegicus","juvenile","4","3","months"]},{rowId:24,versionNumber:4,values:["Rattus norvegicus","adolescent","5","6","months"]},{rowId:25,versionNumber:4,values:["Rattus norvegicus","adult","6","12","months"]},{rowId:13,versionNumber:4,values:["Saccharomyces","log phase","1","7","days"]},{rowId:14,versionNumber:4,values:["Saccharomyces","stationary phase","2","2","weeks"]},{rowId:15,versionNumber:4,values:["Saccharomyces","death phase","3","3","weeks"]},{rowId:3,versionNumber:4,values:["Sus scrofa","prenatal","1","115","days"]},{rowId:4,versionNumber:4,values:["Sus scrofa","neonatal","2","3","months"]},{rowId:5,versionNumber:4,values:["Sus scrofa","weanling","3","6","months"]},{rowId:6,versionNumber:4,values:["Sus scrofa","juvenile","4","12","months"]},{rowId:7,versionNumber:4,values:["Sus scrofa","adolescent","5","2","years"]},{rowId:8,versionNumber:4,values:["Sus scrofa","adult","6","3","years"]}]}}};var H;const he=(H=U.queryResult)==null?void 0:H.queryResults.headers.findIndex(e=>e.name.toLowerCase()===pe);var Q;const M=(Q=U.queryResult)==null?void 0:Q.queryResults.headers.findIndex(e=>e.name.toLowerCase()===ve),ye=ne(ie),fe=(e,t,a,u)=>{let n=-1;return{timepoints:t.map((o,s)=>{const i=parseFloat(o.values[a.observationTime]),d=o.values[a.observationTimeUnits];return o.rowId==u&&(n=s),e.add(i,d)}),hoverOverIndex:n}},q=e=>e.length==0?A().add(1,"days"):e.reduce((t,a)=>!t||a.isAfter(t)?a:t),ge=(e,t)=>{if(e.timepoints==null||e.timepoints.length==0)return[{x:[A().format()],y:[.5],mode:"lines",line:{color:"blue",width:2},customdata:[],hoverinfo:"none"}];const a=e.timepoints.reduce((n,l,o)=>{const s=n;return s[l.format()]||(s[l.format()]=[]),s[l.format()].push(t[o]),n},{});return e.timepoints.map((n,l)=>{const o=n.format(),s=l==e.hoverOverIndex,d=a[o].map(m=>m.rowId);return{x:[o,o,o],y:[0,.5,1],mode:"lines",line:{color:s?"black":"gray",width:s?2:1},customdata:[d,d,d],hoverinfo:"none"}})},be=(e,t,a,u,n,l)=>{const o=u.map(i=>i.x[0]),s=u.map(i=>{const d=i.customdata[0];if(d&&d.length>0){const m=d.length,y=n==null?void 0:n.filter(p=>d[0]==p.rowId);if(y&&y.length>0){const p=y[0],v=parseFloat(p.values[l.observationTime]),I=p.values[l.observationTimeUnits],c=m>1?`(${m})`:"";return`${v} ${I} ${c}`}}return""});return{hovermode:"closest",dragmode:!1,showlegend:!1,xaxis:{showgrid:!1,showticklabels:!0,showline:!1,zeroline:!1,tickvals:o,ticktext:s,tickangle:-45},yaxis:{range:[0,1.25],showgrid:!1,zeroline:!1,showline:!1,showticklabels:!1},shapes:[{type:"rect",x0:e.subtract(t.diff(e)/10).format(),x1:t.add(t.diff(e)/3).format(),y0:.25,y1:.75,fillcolor:a,opacity:.8,line:{width:0}}],margin:{l:0,r:0,t:60,b:60}}},C=({color:e,rowData:t,schema:a,widthPx:u})=>{const[n,l]=f.useState(),[o,s]=f.useState(),[i,d]=f.useState(1),m=A(),y=f.useRef(null),p=n==null?void 0:n.points[0].customdata,v=t==null?void 0:t.filter(b=>p==null?void 0:p.includes(b.rowId)),I=o==null?void 0:o.points[0].customdata,c=f.useMemo(()=>fe(m,t,a,(I==null?void 0:I.length)>0?I[0]:void 0),[I,t,a,m]),R=q(c.timepoints),h=f.useMemo(()=>ge(c,t),[c,t]);return N("div",{ref:y,style:{width:u},children:[r(ye,{style:{width:u,height:"220px"},data:h,layout:be(m,R,e,h,t,a),config:{displayModeBar:!1},useResizeHandler:!0,onClick:b=>{l(b),s(void 0)},onDoubleClick:()=>{d(i+1)},onHover:b=>{s(b)},onUnhover:()=>{s(void 0)}},`Plot-${e}-${i}`),v&&r(le,{onClose:()=>l(void 0),open:!!v&&v.length>0,children:v.map(b=>r(ae,{data:b.values,schema:a,includePortalCardClass:!1},b.rowId))})]})};try{q.displayName="getMaxDate",q.__docgenInfo={description:"",displayName:"getMaxDate",props:{}}}catch{}try{C.displayName="TimelinePhase",C.__docgenInfo={description:"",displayName:"TimelinePhase",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},rowData:{defaultValue:null,description:"",name:"rowData",required:!0,type:{name:"Row[]"}},schema:{defaultValue:null,description:"",name:"schema",required:!0,type:{name:"ObservationCardSchema"}},widthPx:{defaultValue:null,description:"",name:"widthPx",required:!0,type:{name:"number"}}}}}catch{}const L=({color:e,phaseName:t})=>N(g,{sx:{display:"flex",alignItems:"center",gap:"7px"},children:[r(g,{sx:{backgroundColor:e,width:"20px",height:"20px"}}),r(O,{variant:"body1",children:t==null?void 0:t.toUpperCase()})]});try{L.displayName="TimelineLegendItem",L.__docgenInfo={description:"",displayName:"TimelineLegendItem",props:{color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},phaseName:{defaultValue:null,description:"",name:"phaseName",required:!0,type:{name:"string | null"}}}}}catch{}const P=({sql:e,additionalFilters:t,species:a,setSpecies:u})=>{var m,y;const n=$(e),l=D({entityId:n,query:{sql:`SELECT distinct unnest(species) FROM ${n} WHERE species IS NOT NULL AND observationTime IS NOT NULL GROUP BY species`,additionalFilters:t},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"}),{data:o,isLoading:s}=l,i=(y=(m=o==null?void 0:o.queryResult)==null?void 0:m.queryResults)==null?void 0:y.rows,d=i&&i.length>0?i[0].values[0]:void 0;return a==null&&d!=null&&u(d),s||!i||i.length<2?r(x,{}):r(g,{children:N(ue,{children:[r(de,{children:"Species"}),r(ce,{sx:{marginLeft:"2px",marginBottom:"2px"},value:a,label:"Species",onChange:p=>{u(p.target.value)},children:i==null?void 0:i.map(p=>{const v=p.values[0];return r(me,{value:v,children:v},v)})})]})})};try{P.displayName="TimelinePlotSpeciesSelector",P.__docgenInfo={description:"",displayName:"TimelinePlotSpeciesSelector",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},additionalFilters:{defaultValue:null,description:"",name:"additionalFilters",required:!1,type:{name:"QueryFilter[]"}},species:{defaultValue:null,description:"",name:"species",required:!1,type:{name:"string | null"}},setSpecies:{defaultValue:null,description:"",name:"setSpecies",required:!0,type:{name:"Dispatch<SetStateAction<string | null | undefined>>"}}}}}catch{}const Ie=e=>{const[t,a]=f.useState({width:1,height:2});return f.useEffect(()=>{const u=()=>{if(e.current){const n=e.current.getBoundingClientRect(),{width:l,height:o}=n,s=Math.round(l),i=Math.round(o);(t.width!=s||t.height!=i)&&a({width:s,height:i})}};return u(),window.addEventListener("resize",u),()=>{window.removeEventListener("resize",u)}},[t.height,t.width,e]),t},Te="observationphase",Ne="observationtime",_e="observationtimeunits",we="observationsubmittername",Se="observationtext",xe="observationtype",Re="synapseid",Ee="doi",F=({sql:e,searchParams:t,sqlOperator:a,defaultSpecies:u,title:n,subTitle:l})=>{const o=$(e),[s,i]=f.useState(u),d=f.createRef(),m=Ie(d),y=oe(void 0,t,a)??[],p=s?{columnName:"species",concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",values:[s],function:re.HAS}:void 0,v=[...y];p&&v.push(p);const I=D({entityId:o,query:{sql:`${e} WHERE observationTime IS NOT NULL`,sort:[{column:"observationTime",direction:"ASC"}],additionalFilters:v},partMask:j,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"},{enabled:!!s}),{data:c,isLoading:R}=I,h=f.useMemo(()=>{var T;if(s)return(T=U.queryResult)==null?void 0:T.queryResults.rows.filter(w=>w.values[he]==s)},[s]);if(R)return r(Me,{});const b=_(Te,c),G=_(Ne,c),z=_(_e,c),K=_(we,c),W=_(Se,c),Y=_(Ee,c),X=_(xe,c),J=_(Re,c),Z={observationSubmitterName:K,synapseId:J,observationType:X,observationText:W,observationTime:G,observationTimeUnits:z,doi:Y},ee=m.width&&h?m.width/h.length:0,te=h==null?void 0:h.map(()=>"auto").join(" ");return N(x,{children:[s&&N(x,{children:[n&&r(O,{variant:"h2",children:n}),l&&r(O,{variant:"body1Italic",sx:{margin:"10px 0px"},children:l})]}),N(g,{children:[N(g,{sx:{display:"flex",justifyContent:"space-between"},children:[r(g,{children:!u&&r(P,{setSpecies:i,species:s,sql:e,additionalFilters:y})}),h&&r(g,{sx:{display:"flex",justifyContent:"flex-end",gap:"25px"},children:h.map((T,S)=>{const{colorPalette:w}=B(S,1);return r(L,{color:w[0],phaseName:T.values[M]},T.rowId)})})]}),s&&h&&r("div",{ref:d,children:r(g,{sx:{display:"inline-grid",gridTemplateColumns:te,minWidth:m.width,maxWidth:m.width},className:"forcePlotlyDefaultCursor",children:h.map((T,S)=>{var k;const{colorPalette:w}=B(S,1),V=(k=c==null?void 0:c.queryResult)==null?void 0:k.queryResults.rows.filter(se=>se.values[b]==T.values[M]);return V?r(C,{name:T.values[M],color:w[0],rowData:V,schema:Z,widthPx:ee},T.rowId):r(x,{})})})})]})]})},Me=()=>N(g,{children:[N(g,{sx:{display:"flex",justifyContent:"flex-end",gap:"10px"},children:[r(E,{height:"45px",width:"80px"}),r(E,{height:"45px",width:"80px"})]}),r(g,{sx:{display:"flex"},children:r(E,{height:"150px",width:"100%"})})]});try{F.displayName="TimelinePlot",F.__docgenInfo={description:"",displayName:"TimelinePlot",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},subTitle:{defaultValue:null,description:"",name:"subTitle",required:!1,type:{name:"string"}},defaultSpecies:{defaultValue:null,description:"",name:"defaultSpecies",required:!1,type:{name:"string"}}}}}catch{}export{F as T};
