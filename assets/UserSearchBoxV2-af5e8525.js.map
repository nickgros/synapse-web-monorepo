{"version":3,"file":"UserSearchBoxV2-af5e8525.js","sources":["../../../../node_modules/.pnpm/react-select@5.7.2_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/react-select/dist/react-select.esm.js","../../src/utils/hooks/useDebouncedEffect.ts","../../src/utils/hooks/useGetInfoFromIds.ts","../../src/components/UserSearchBoxV2.tsx"],"sourcesContent":["import { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nexport { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useMemo } from 'react';\nimport { S as Select } from './Select-457c486b.esm.js';\nexport { c as createFilter, d as defaultTheme, m as mergeStyles } from './Select-457c486b.esm.js';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nexport { c as components } from './index-a86253bb.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\n\nvar StateManagedSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var baseSelectProps = useStateManager(props);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, baseSelectProps));\n});\n\nvar NonceProvider = (function (_ref) {\n  var nonce = _ref.nonce,\n    children = _ref.children,\n    cacheKey = _ref.cacheKey;\n  var emotionCache = useMemo(function () {\n    return createCache({\n      key: cacheKey,\n      nonce: nonce\n    });\n  }, [cacheKey, nonce]);\n  return /*#__PURE__*/React.createElement(CacheProvider, {\n    value: emotionCache\n  }, children);\n});\n\nexport default StateManagedSelect;\nexport { NonceProvider };\n","import { useEffect } from 'react'\n\n/**\n * Debounces execution of an effect based on a specified delay.\n * See https://stackoverflow.com/a/61127960\n * @param effect\n * @param deps\n * @param delay\n */\nexport const useDebouncedEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList,\n  delay: number,\n) => {\n  useEffect(() => {\n    const handler = setTimeout(() => effect(), delay)\n\n    return () => clearTimeout(handler)\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, react-hooks/exhaustive-deps\n  }, [...(deps || []), delay])\n}\n","import { chunk, uniq, without } from 'lodash-es'\nimport { useEffect, useState } from 'react'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { SynapseConstants } from '../index'\nimport {\n  getEntityHeaders,\n  getEvaluations,\n  getGroupHeadersBatch,\n} from '../../synapse-client'\nimport { useSynapseContext } from '../context/SynapseContext'\nimport {\n  EntityHeader,\n  Evaluation,\n  Reference,\n  ReferenceList,\n  UserGroupHeader,\n} from '@sage-bionetworks/synapse-types'\n\nexport type UseGetInfoFromIdsProps<\n  T extends EntityHeader | UserGroupHeader | Evaluation,\n  THookType = T extends EntityHeader\n    ? 'ENTITY_HEADER'\n    : T extends UserGroupHeader\n    ? 'USER_PROFILE'\n    : T extends Evaluation\n    ? 'EVALUATION_QUEUE'\n    : never,\n> = {\n  ids: string[]\n  type: THookType\n}\n\ntype LookupRequestType = string | Reference\n\nconst UserGroupHeaderTemplate: UserGroupHeader = {\n  ownerId: '', // A foreign key to the ID of the 'principal' object for the user\n  firstName: 'Unknown', // This person's given name (forename)\n  lastName: 'Unknown', // This person's family name (surname)\n  userName: 'Unknown', // A name chosen by the user that uniquely identifies them\n  isIndividual: false,\n}\n\nconst entityHeaderTemplate: EntityHeader = {\n  name: 'Unknown', //\tThe name of the entity\n  id: 'unknown', //\tThe id of the entity\n  type: 'org.sagebionetworks.repo.model.FileEntity', //\tThe type of the entity\n  versionNumber: 0, //\tThe version number of the entity\n  versionLabel: 'placeholder', //\tThe user defined version label of the entity\n  benefactorId: 0, //\tThe ID of the entity that this Entity's ACL is inherited from.\n  createdOn: 'null', //\tThe date this entity was created.\n  modifiedOn: 'null', //\tThe date this entity was last modified.\n  createdBy: 'null', //\tThe ID of the user that created this entity.\n  modifiedBy: 'null', //\tThe ID of the user that last modified this entity.\n  isLatestVersion: true, // If this version is the latest version of the entity\n}\n\nconst evaluationTemplate: Evaluation = {\n  id: 'unknown', // The unique immutable ID for this Evaluation.\n  etag: 'Unknown', // Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. The eTag changes every time an Evaluation is updated; it is used to detect when a client's copy of an Evaluation is out-of-date.\n  name: 'Unknown', // The name of this Evaluation\n  description: 'Unknown', // A text description of this Evaluation.\n  ownerId: 'null', // The ID of the Synapse user who created this Evaluation.\n  createdOn: 'null', //\tThe date on which Evaluation was created.\n  contentSource: 'Unknown', // The Synapse ID of the Entity to which this Evaluation belongs, e.g. a reference to a Synapse project.\n  submissionInstructionsMessage: 'Unknown', // Message to display to users detailing acceptable formatting for Submissions to this Evaluation.\n  submissionReceiptMessage: 'Unknown', // Message to display to users upon successful submission to this Evaluation.\n}\n\nconst getEntityHeaderItems = async (\n  lookupList: ReferenceList,\n  token: string | undefined,\n): Promise<EntityHeader[]> => {\n  const newData = await getEntityHeaders(lookupList, token)\n  const notFound = lookupList.filter(\n    item => newData.results.map(item => item.id).indexOf(item.targetId) === -1,\n  )\n  const notFoundPlaceholders = notFound.map(item => ({\n    ...entityHeaderTemplate,\n    id: item.targetId,\n    name: `${item.targetId}`,\n  }))\n\n  return [...newData.results, ...notFoundPlaceholders]\n}\n\nconst getUserGroupHeaderItems = async (\n  lookupList: string[],\n): Promise<UserGroupHeader[]> => {\n  const newData = (await getGroupHeadersBatch(lookupList)).children\n  const notFound = lookupList.filter(\n    item => newData.map(item => item.ownerId).indexOf(item) === -1,\n  )\n  const notFoundPlaceholders = notFound.map(item => ({\n    ...UserGroupHeaderTemplate,\n    ownerId: item,\n    name: `Unknown User (${item})`,\n  }))\n\n  return [...newData, ...notFoundPlaceholders]\n}\n\nconst getEvaluationItems = async (\n  lookupList: string[],\n  token: string | undefined,\n): Promise<Evaluation[]> => {\n  const newData = await getEvaluations(lookupList, token)\n  const notFound = lookupList.filter(\n    item => newData.results.map(item => item.id).indexOf(item) === -1,\n  )\n  const notFoundPlaceholders = notFound.map(item => ({\n    ...evaluationTemplate,\n    id: item,\n    name: item,\n  }))\n\n  return [...newData.results, ...notFoundPlaceholders]\n}\n\n/**\n * React hook to get user profiles or entities or evaluation queues. Utilizes a custom cache in sessionStorage.\n *\n * For fetching just one entity or usergroup, see useGetEntity/useGetUserGroupHeader hooks powered by react-query\n * @returns\n */\nexport default function useGetInfoFromIds<\n  T extends EntityHeader | UserGroupHeader | Evaluation,\n>(props: UseGetInfoFromIdsProps<T>): T[] {\n  const { ids, type } = props\n  const { accessToken } = useSynapseContext()\n\n  const [data, setData] = useState<Array<T>>([])\n\n  const idKey = (type === 'USER_PROFILE' ? 'ownerId' : 'id') as keyof T\n\n  const getStorageKey = (type: UseGetInfoFromIdsProps<T>['type']) => {\n    switch (type) {\n      case 'USER_PROFILE':\n        return SynapseConstants.USER_PROFILE_STORAGE_KEY\n      case 'ENTITY_HEADER':\n        return SynapseConstants.ENTITY_HEADER_STORAGE_KEY\n      case 'EVALUATION_QUEUE':\n        return SynapseConstants.EVALUATIONS_STORAGE_KEY\n      default:\n        return ''\n    }\n  }\n  const storageKey: string = getStorageKey(type)\n\n  // look at current list of data, see if incoming ids has new data,\n  // if so grab those ids\n  const curList = data.map(el => el[idKey]) as string[]\n  const incomingList = ids.filter(el => el !== SynapseConstants.VALUE_NOT_SET)\n  const newValues = uniq(without(incomingList, ...curList))\n\n  useEffect(() => {\n    const saveToSessionStorage = (data: T[]) => {\n      if (!data.length) {\n        return\n      }\n      //get what's there\n      const dataInStorage = sessionStorage.getItem(storageKey)\n      try {\n        const dataInStorageAsObjectArr: T[] = dataInStorage\n          ? JSON.parse(dataInStorage)\n          : []\n        //get an array of ids for items already in storage\n        const ids = dataInStorageAsObjectArr.map(item => item[idKey])\n        //push all the new data if ids are new\n        for (const dataObject of data) {\n          if (!ids.includes(dataObject[idKey])) {\n            dataInStorageAsObjectArr.push(dataObject)\n          }\n        }\n        sessionStorage.setItem(\n          storageKey,\n          JSON.stringify(dataInStorageAsObjectArr),\n        )\n      } catch (e) {\n        sessionStorage.setItem(storageKey, JSON.stringify(data))\n      }\n    }\n    saveToSessionStorage(data)\n  }, [data, idKey, storageKey])\n\n  // Alina TODO: check if the items are already in Local Storage before making server call.\n\n  // Michael TODO: There's a bug where the data held in useGetInfoFromIds will be stale if the user token changes,\n  // this can be solved by using the useCompare hook on the token to track when it changes\n  useDeepCompareEffect(() => {\n    let isCancelled = false\n    const getData = async () => {\n      if (newValues.length > 0) {\n        try {\n          const newIds = Array.from<string>(newValues)\n          const newReferences: LookupRequestType[] =\n            type === 'ENTITY_HEADER'\n              ? newIds.map(el => ({ targetId: el }))\n              : newIds\n          const newReferencesChunks = chunk(newReferences, 45)\n          const totalData: T[] = []\n          for (const newReferences of newReferencesChunks) {\n            let newData: T[] = []\n            switch (type) {\n              case 'USER_PROFILE':\n                newData = (await getUserGroupHeaderItems(\n                  newReferences as string[],\n                )) as T[]\n                break\n              case 'ENTITY_HEADER':\n                newData = (await getEntityHeaderItems(\n                  newReferences as ReferenceList,\n                  accessToken,\n                )) as T[]\n                break\n              case 'EVALUATION_QUEUE':\n                newData = (await getEvaluationItems(\n                  newReferences as string[],\n                  accessToken,\n                )) as T[]\n                break\n            }\n            totalData.push(...newData)\n          }\n          if (!isCancelled) {\n            setData(oldData => oldData.concat(...totalData))\n          }\n        } catch (error) {\n          console.error('Error on data retrieval', error)\n        }\n      }\n    }\n    getData()\n    return () => {\n      isCancelled = true\n    }\n  }, [accessToken, type, newValues])\n  return data\n}\n","import { Skeleton } from '@mui/material'\nimport React, { useMemo, useState } from 'react'\nimport Select, {\n  components,\n  GroupBase,\n  PropsValue,\n  SelectComponentsConfig,\n} from 'react-select'\nimport { useSearchUserGroupHeaders } from '../synapse-queries'\nimport { useDebouncedEffect } from '../utils/hooks/useDebouncedEffect'\nimport useGetInfoFromIds from '../utils/hooks/useGetInfoFromIds'\nimport { UserGroupHeader } from '@sage-bionetworks/synapse-types'\nimport { TYPE_FILTER } from '@sage-bionetworks/synapse-types'\nimport UserOrTeamBadge from './UserOrTeamBadge/UserOrTeamBadge'\n\ntype UserSearchBoxValueType = {\n  id: string\n  value: string\n  label: string\n  header: UserGroupHeader\n} | null\n\nexport type UserSearchBoxProps = {\n  /* id for the input tag */\n  inputId?: string\n  /* The initial principal ID */\n  defaultValue?: string\n  onChange?: (\n    principalId: string | null,\n    header: UserGroupHeader | null,\n  ) => void\n  typeFilter?: TYPE_FILTER\n  filterPredicate?: (item: UserGroupHeader) => boolean\n  placeholder?: string\n  focusOnSelect?: boolean\n  /* The principal ID of the current selected user or team. If null, no selection is made. If undefined, state will be handled internally */\n  value?: PropsValue<UserSearchBoxValueType> | undefined\n}\n\nconst customSelectComponents: Partial<\n  SelectComponentsConfig<\n    UserSearchBoxValueType,\n    false,\n    GroupBase<UserSearchBoxValueType>\n  >\n> = {\n  Control: props => {\n    return (\n      <components.Control\n        {...props}\n        className={`form-control ${props.className ?? ''}`}\n      />\n    )\n  },\n  SingleValue: props => {\n    const { data } = props\n    return (\n      <components.SingleValue {...props} key={data?.id}>\n        <UserOrTeamBadge\n          key={data?.header.ownerId}\n          userGroupHeader={data?.header}\n          disableHref\n          showFullName\n        />\n      </components.SingleValue>\n    )\n  },\n  Option: props => {\n    const { data } = props\n    return (\n      <components.Option {...props} key={data?.id}>\n        <UserOrTeamBadge\n          userGroupHeader={data?.header}\n          disableHref={true}\n          showFullName={true}\n          showCardOnHover={false}\n        />\n      </components.Option>\n    )\n  },\n}\n\nconst UserSearchBoxV2: React.FC<UserSearchBoxProps> = props => {\n  const {\n    inputId,\n    defaultValue = null,\n    onChange,\n    filterPredicate,\n    typeFilter,\n    placeholder,\n    focusOnSelect = false,\n    value,\n  } = props\n  const [inputValue, setInputValue] = useState('')\n  const [debouncedInput, setDebouncedInput] = useState('')\n  useDebouncedEffect(\n    () => {\n      setDebouncedInput(inputValue)\n    },\n    [inputValue],\n    500,\n  )\n\n  const [defaultUserGroupHeader = undefined] =\n    useGetInfoFromIds<UserGroupHeader>({\n      ids: defaultValue ? [defaultValue] : [],\n      type: 'USER_PROFILE',\n    })\n\n  const { data, isLoading } = useSearchUserGroupHeaders(\n    debouncedInput,\n    typeFilter,\n  )\n\n  const selectRef = React.useRef<any>(null)\n  React.useEffect(() => {\n    if (focusOnSelect) {\n      selectRef.current && selectRef.current.focus()\n    }\n  })\n\n  const noOptionsMessage = useMemo(\n    () =>\n      isLoading || inputValue !== debouncedInput ? () => 'Loading…' : undefined,\n    [isLoading, debouncedInput, inputValue],\n  )\n\n  const options = (data ?? [])\n    .filter(filterPredicate ?? (() => true))\n    // Map each user to an options object for the select input component\n    .map(item => ({\n      id: item.ownerId.toString(),\n      value: item.ownerId.toString(),\n      label: item.userName,\n      header: item,\n    }))\n\n  if (defaultValue && defaultUserGroupHeader == null) {\n    return <Skeleton width=\"100%\" />\n  }\n\n  return (\n    <Select\n      className=\"bootstrap-4-backport UserSearchBoxV2\"\n      ref={selectRef}\n      inputValue={inputValue}\n      onInputChange={setInputValue}\n      filterOption={() => true}\n      isLoading={isLoading}\n      options={(!isLoading && options) || []}\n      noOptionsMessage={noOptionsMessage}\n      defaultValue={\n        defaultValue\n          ? {\n              id: defaultValue,\n              value: defaultValue,\n              label: defaultUserGroupHeader!.userName,\n              header: defaultUserGroupHeader!,\n            }\n          : undefined\n      }\n      inputId={inputId}\n      isClearable\n      value={value}\n      styles={{\n        // Bootstrap's form-control class overrides the display value, manually set to flex (the default without Bootstrap)\n        control: styles => ({ ...styles, display: 'flex !important' }),\n        input: provided => ({\n          ...provided,\n          // SWC-6327 - Adjust the input style so a right-click focuses on the input field\n          input: {\n            gridArea: '1 / 2 / 4 / 4 !important',\n          },\n        }),\n      }}\n      components={customSelectComponents}\n      onChange={option => {\n        if (onChange) {\n          onChange(option?.id ?? null, option?.header ?? null)\n        }\n      }}\n      placeholder={placeholder}\n    />\n  )\n}\n\nexport default UserSearchBoxV2\n"],"names":["StateManagedSelect","forwardRef","props","ref","baseSelectProps","useStateManager","React.createElement","Select","_extends","useDebouncedEffect","effect","deps","delay","useEffect","handler","UserGroupHeaderTemplate","entityHeaderTemplate","evaluationTemplate","getEntityHeaderItems","lookupList","token","newData","getEntityHeaders","notFoundPlaceholders","item","getUserGroupHeaderItems","getGroupHeadersBatch","getEvaluationItems","getEvaluations","useGetInfoFromIds","ids","type","accessToken","useSynapseContext","data","setData","useState","idKey","storageKey","SynapseConstants.USER_PROFILE_STORAGE_KEY","SynapseConstants.ENTITY_HEADER_STORAGE_KEY","SynapseConstants.EVALUATIONS_STORAGE_KEY","curList","el","incomingList","SynapseConstants.VALUE_NOT_SET","newValues","uniq","without","dataInStorage","dataInStorageAsObjectArr","dataObject","useDeepCompareEffect","isCancelled","newIds","newReferences","newReferencesChunks","chunk","totalData","oldData","error","customSelectComponents","jsx","components","createElement","UserOrTeamBadge","UserSearchBoxV2","inputId","defaultValue","onChange","filterPredicate","typeFilter","placeholder","focusOnSelect","value","inputValue","setInputValue","debouncedInput","setDebouncedInput","defaultUserGroupHeader","isLoading","useSearchUserGroupHeaders","selectRef","React","noOptionsMessage","useMemo","options","Skeleton","styles","provided","option"],"mappings":"ixBA0BA,IAAIA,EAAkCC,EAAU,WAAC,SAAUC,EAAOC,EAAK,CACrE,IAAIC,EAAkBC,EAAgBH,CAAK,EAC3C,OAAoBI,EAAmB,cAACC,EAAQC,EAAS,CACvD,IAAKL,CACT,EAAKC,CAAe,CAAC,CACrB,CAAC,EAiBD,MAAAG,EAAeP,ECvCFS,EAAqB,CAChCC,EACAC,EACAC,IACG,CACHC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAU,WAAW,IAAMJ,IAAUE,CAAK,EAEzC,MAAA,IAAM,aAAaE,CAAO,GAEhC,CAAC,GAAIH,GAAQ,GAAKC,CAAK,CAAC,CAC7B,ECcMG,EAA2C,CAC/C,QAAS,GACT,UAAW,UACX,SAAU,UACV,SAAU,UACV,aAAc,EAChB,EAEMC,EAAqC,CACzC,KAAM,UACN,GAAI,UACJ,KAAM,4CACN,cAAe,EACf,aAAc,cACd,aAAc,EACd,UAAW,OACX,WAAY,OACZ,UAAW,OACX,WAAY,OACZ,gBAAiB,EACnB,EAEMC,EAAiC,CACrC,GAAI,UACJ,KAAM,UACN,KAAM,UACN,YAAa,UACb,QAAS,OACT,UAAW,OACX,cAAe,UACf,8BAA+B,UAC/B,yBAA0B,SAC5B,EAEMC,EAAuB,MAC3BC,EACAC,IAC4B,CAC5B,MAAMC,EAAU,MAAMC,EAAiBH,EAAYC,CAAK,EAIlDG,EAHWJ,EAAW,OAClBK,GAAAH,EAAQ,QAAQ,IAAIG,GAAQA,EAAK,EAAE,EAAE,QAAQA,EAAK,QAAQ,IAAM,EAAA,EAEpC,IAAaA,IAAA,CACjD,GAAGR,EACH,GAAIQ,EAAK,SACT,KAAM,GAAGA,EAAK,UACd,EAAA,EAEF,MAAO,CAAC,GAAGH,EAAQ,QAAS,GAAGE,CAAoB,CACrD,EAEME,EAA0B,MAC9BN,GAC+B,CAC/B,MAAME,GAAW,MAAMK,EAAqBP,CAAU,GAAG,SAInDI,EAHWJ,EAAW,OAC1BK,GAAQH,EAAQ,IAAIG,GAAQA,EAAK,OAAO,EAAE,QAAQA,CAAI,IAAM,EAAA,EAExB,IAAaA,IAAA,CACjD,GAAGT,EACH,QAASS,EACT,KAAM,iBAAiBA,IACvB,EAAA,EAEF,MAAO,CAAC,GAAGH,EAAS,GAAGE,CAAoB,CAC7C,EAEMI,EAAqB,MACzBR,EACAC,IAC0B,CAC1B,MAAMC,EAAU,MAAMO,EAAeT,EAAYC,CAAK,EAIhDG,EAHWJ,EAAW,OAC1BK,GAAQH,EAAQ,QAAQ,IAAIG,GAAQA,EAAK,EAAE,EAAE,QAAQA,CAAI,IAAM,EAAA,EAE3B,IAAaA,IAAA,CACjD,GAAGP,EACH,GAAIO,EACJ,KAAMA,CACN,EAAA,EAEF,MAAO,CAAC,GAAGH,EAAQ,QAAS,GAAGE,CAAoB,CACrD,EAQA,SAAwBM,EAEtB3B,EAAuC,CACjC,KAAA,CAAE,IAAA4B,EAAK,KAAAC,CAAS,EAAA7B,EAChB,CAAE,YAAA8B,GAAgBC,IAElB,CAACC,EAAMC,CAAO,EAAIC,EAAA,SAAmB,CAAE,CAAA,EAEvCC,EAASN,IAAS,eAAiB,UAAY,KAc/CO,GAZiBP,GAA4C,CACjE,OAAQA,EAAM,CACZ,IAAK,eACH,OAAOQ,EACT,IAAK,gBACH,OAAOC,EACT,IAAK,mBACH,OAAOC,EACT,QACS,MAAA,EACX,CAAA,GAEuCV,CAAI,EAIvCW,EAAUR,EAAK,IAAUS,GAAAA,EAAGN,CAAK,CAAC,EAClCO,EAAed,EAAI,OAAaa,GAAAA,IAAOE,CAA8B,EACrEC,EAAYC,EAAKC,EAAQJ,EAAc,GAAGF,CAAO,CAAC,EAExD7B,OAAAA,EAAAA,UAAU,IAAM,EACgBqB,GAAc,CACtC,GAAA,CAACA,EAAK,OACR,OAGI,MAAAe,EAAgB,eAAe,QAAQX,CAAU,EACnD,GAAA,CACF,MAAMY,EAAgCD,EAClC,KAAK,MAAMA,CAAa,EACxB,GAEEnB,EAAMoB,EAAyB,IAAY1B,GAAAA,EAAKa,CAAK,CAAC,EAE5D,UAAWc,KAAcjB,EAClBJ,EAAI,SAASqB,EAAWd,CAAK,CAAC,GACjCa,EAAyB,KAAKC,CAAU,EAG7B,eAAA,QACbb,EACA,KAAK,UAAUY,CAAwB,CAAA,QAGzC,eAAe,QAAQZ,EAAY,KAAK,UAAUJ,CAAI,CAAC,CACzD,CAAA,GAEmBA,CAAI,CACxB,EAAA,CAACA,EAAMG,EAAOC,CAAU,CAAC,EAM5Bc,EAAqB,IAAM,CACzB,IAAIC,EAAc,GA0CV,OAzCQ,SAAY,CACtB,GAAAP,EAAU,OAAS,EACjB,GAAA,CACI,MAAAQ,EAAS,MAAM,KAAaR,CAAS,EACrCS,EACJxB,IAAS,gBACLuB,EAAO,QAAW,CAAE,SAAUX,GAAK,EACnCW,EACAE,EAAsBC,EAAMF,EAAe,EAAE,EAC7CG,EAAiB,CAAA,EACvB,UAAWH,KAAiBC,EAAqB,CAC/C,IAAInC,EAAe,CAAA,EACnB,OAAQU,EAAM,CACZ,IAAK,eACHV,EAAW,MAAMI,EACf8B,CAAA,EAEF,MACF,IAAK,gBACHlC,EAAW,MAAMH,EACfqC,EACAvB,CAAA,EAEF,MACF,IAAK,mBACHX,EAAW,MAAMM,EACf4B,EACAvB,CAAA,EAEF,KACJ,CACU0B,EAAA,KAAK,GAAGrC,CAAO,EAEtBgC,GACHlB,EAAmBwB,GAAAA,EAAQ,OAAO,GAAGD,CAAS,CAAC,QAE1CE,GACC,QAAA,MAAM,0BAA2BA,CAAK,CAChD,CACF,KAGK,IAAM,CACGP,EAAA,EAAA,CAEf,EAAA,CAACrB,EAAaD,EAAMe,CAAS,CAAC,EAC1BZ,CACT,CCtMA,MAAA2B,EAAA,CAMI,QAAA3D,GAEA4D,EACEC,EAAA,QAAY,CAAX,GAAA7D,EACK,UAAA,gBAAAA,EAAA,WAAA,IAC0C,CAAA,EAGpD,YAAAA,GAAA,CAEE,KAAA,CAAA,KAAAgC,CAAA,EAAAhC,EACA,OAAA8D,EAAA,cAAAD,EAAA,YAAA,CAAA,GAAA7D,EAAA,IAAAgC,GAAA,YAAAA,EAAA,EAAA,EAAA4B,EAEIG,EAAC,CAAA,gBAAA/B,GAAA,YAAAA,EAAA,OAEwB,YAAA,GACZ,aAAA,EACC,EAAAA,GAAA,YAAAA,EAAA,OAAA,OAHM,CAAA,CAKtB,EAEJ,OAAAhC,GAAA,CAEE,KAAA,CAAA,KAAAgC,CAAA,EAAAhC,EACA,OAAA8D,EAAA,cAAAD,EAAA,OAAA,CAAA,GAAA7D,EAAA,IAAAgC,GAAA,YAAAA,EAAA,EAAA,EAAA4B,EAEIG,EAAC,CAAA,gBAAA/B,GAAA,YAAAA,EAAA,OACwB,YAAA,GACV,aAAA,GACC,gBAAA,EACG,CAAA,CAAA,CAErB,CAGN,EAEAgC,EAAAhE,GAAA,CACE,KAAA,CAAM,QAAAiE,EACJ,aAAAC,EAAA,KACe,SAAAC,EACf,gBAAAC,EACA,WAAAC,EACA,YAAAC,EACA,cAAAC,EAAA,GACgB,MAAAC,CAChB,EAAAxE,EAEF,CAAAyE,EAAAC,CAAA,EAAAxC,EAAA,SAAA,EAAA,EACA,CAAAyC,EAAAC,CAAA,EAAA1C,EAAA,SAAA,EAAA,EACA3B,EAAA,IAAA,CAEIqE,EAAAH,CAAA,CAA4B,EAC9B,CAAAA,CAAA,EACW,GACX,EAGF,KAAA,CAAAI,EAAA,MAAA,EAAAlD,EAAA,CACqC,IAAAuC,EAAA,CAAAA,CAAA,EAAA,CAAA,EACK,KAAA,cAChC,CAAA,EAGV,CAAA,KAAAlC,EAAA,UAAA8C,CAAA,EAAAC,EAA4BJ,EAC1BN,CACA,EAGFW,EAAAC,EAAA,OAAA,IAAA,EACAA,EAAA,UAAA,IAAA,CACEV,GACES,EAAA,SAAAA,EAAA,QAAA,MAAA,CACF,CAAA,EAGF,MAAAE,EAAAC,EAAA,QAAyB,IAAAL,GAAAL,IAAAE,EAAA,IAAA,WAAA,OAE2C,CAAAG,EAAAH,EAAAF,CAAA,CAC5B,EAGxCW,GAAApD,GAAA,CAAA,GAAA,OAAAoC,IAAA,IAAA,GAAA,EAAA,IAAA9C,IAAA,CAGgB,GAAAA,EAAA,QAAA,SAAA,EACc,MAAAA,EAAA,QAAA,SAAA,EACG,MAAAA,EAAA,SACjB,OAAAA,CACJ,EAAA,EAGZ,OAAA4C,GAAAW,GAAA,KACEjB,EAAAyB,EAAA,CAAA,MAAA,MAAA,CAAA,EAGFzB,EACEvD,EAAC,CAAA,UAAA,uCACW,IAAA2E,EACL,WAAAP,EACL,cAAAC,EACe,aAAA,IAAA,GACK,UAAAI,EACpB,QAAA,CAAAA,GAAAM,GAAA,CAAA,EACqC,iBAAAF,EACrC,aAAAhB,EAAA,CAGM,GAAAA,EACM,MAAAA,EACG,MAAAW,EAAA,SACwB,OAAAA,CACvB,EAAA,OAEV,QAAAZ,EAEN,YAAA,GACW,MAAAO,EACX,OAAA,CACQ,QAAAc,IAAA,CAAA,GAAAA,EAAA,QAAA,oBAEsD,MAAAC,IAAA,CACxC,GAAAA,EACf,MAAA,CAEI,SAAA,0BACK,CACZ,EACF,EACF,WAAA5B,EACY,SAAA6B,GAAA,CAEVrB,GACEA,GAAAqB,GAAA,YAAAA,EAAA,KAAA,MAAAA,GAAA,YAAAA,EAAA,SAAA,IAAA,CACF,EACF,YAAAlB,CACA,CAAA,CAGN","x_google_ignoreList":[0]}