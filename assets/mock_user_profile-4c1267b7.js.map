{"version":3,"file":"mock_user_profile-4c1267b7.js","sources":["../../mocks/user/mock_user_profile.ts"],"sourcesContent":["import { ACT_TEAM_ID } from '../../src/utils/SynapseConstants'\nimport {\n  UserBundle,\n  UserGroupHeader,\n  UserProfile,\n} from '@sage-bionetworks/synapse-types'\n\nexport const MOCK_USER_ID = 999\nexport const MOCK_USER_NAME = 'myUserName'\n\nexport const mockUserProfileData: UserProfile = {\n  summary: 'My summary bio',\n  firstName: 'First',\n  lastName: 'Last',\n  location: 'Seattle, WA, USA',\n  industry: 'Biotechnology',\n  company: 'Sage Bionetworks',\n  position: 'My Job Title',\n  ownerId: MOCK_USER_ID.toString(),\n  userName: MOCK_USER_NAME,\n  createdOn: '2018-06-18T21:42:48.000Z',\n  url: 'https://sagebase.org',\n}\n\nexport const mockUserBundle: UserBundle = {\n  userId: MOCK_USER_ID.toString(),\n  userProfile: mockUserProfileData,\n  ORCID: 'https://orcid.org/0000-0000-0000-0000',\n  isCertified: true,\n  isVerified: true,\n  isACTMember: false,\n}\n\nexport const mockUserGroupHeader: UserGroupHeader = {\n  ownerId: MOCK_USER_ID.toString(),\n  firstName: mockUserProfileData.firstName,\n  lastName: mockUserProfileData.lastName,\n  userName: MOCK_USER_NAME,\n  email: 'test-user-email@sagebase.org',\n  displayName: 'Display Name',\n  isIndividual: true,\n}\n\nexport const MOCK_USER_ID_2 = 1000\nexport const MOCK_USER_NAME_2 = 'AnotherUser'\n\nexport const mockUserProfileData2: UserProfile = {\n  summary: 'This is the summary of an additional user',\n  firstName: 'John',\n  lastName: 'Doe',\n  location: 'Boston, MA, USA',\n  industry: 'Research Science',\n  company: 'Some Company Inc.',\n  position: 'Lead Scientist',\n  ownerId: MOCK_USER_ID_2.toString(),\n  userName: MOCK_USER_NAME_2,\n  createdOn: '2018-06-18T21:42:48.000Z',\n  url: 'https://sagebase.org',\n}\n\nexport const mockUserBundle2: UserBundle = {\n  userId: MOCK_USER_ID_2.toString(),\n  userProfile: mockUserProfileData2,\n  ORCID: 'https://orcid.org/0000-0000-0000-0000',\n  isCertified: true,\n  isVerified: true,\n  isACTMember: false,\n}\n\nexport const mockUserGroupHeader2: UserGroupHeader = {\n  ownerId: MOCK_USER_ID_2.toString(),\n  firstName: mockUserProfileData2.firstName,\n  lastName: mockUserProfileData2.lastName,\n  userName: MOCK_USER_NAME_2,\n  email: 'another-test-user@sagebase.org',\n  displayName: 'Johnathan Doegherty',\n  isIndividual: true,\n}\n\nexport const MOCK_USER_ID_3 = 1001\nexport const MOCK_USER_NAME_3 = 'heisenberg'\n\nexport const mockUserProfileData3: UserProfile = {\n  summary:\n    'My name is Walter Hartwell White. I live at 308 Negra Arroyo Lane, Albuquerque, New Mexico, 87104.',\n  firstName: 'Walter',\n  lastName: 'White',\n  location: 'Albuquerque, NM, USA',\n  industry: 'Chemistry',\n  company: 'J. P. Wynne HS',\n  position: 'High School Teacher',\n  ownerId: MOCK_USER_ID_3.toString(),\n  userName: MOCK_USER_NAME_3,\n  createdOn: '2008-01-20T18:12:39.000Z',\n  url: 'https://sagebase.org',\n}\n\nexport const mockUserBundle3: UserBundle = {\n  userId: MOCK_USER_ID_3.toString(),\n  userProfile: mockUserProfileData3,\n  ORCID: 'https://orcid.org/0000-0000-0000-0000',\n  isCertified: true,\n  isVerified: true,\n  isACTMember: false,\n}\n\nexport const mockUserGroupHeader3: UserGroupHeader = {\n  ownerId: MOCK_USER_ID_3.toString(),\n  firstName: mockUserProfileData3.firstName,\n  lastName: mockUserProfileData3.lastName,\n  userName: MOCK_USER_NAME_3,\n  email: 'heisenberg@polloshermanos.com',\n  displayName: 'Walter White',\n  isIndividual: true,\n}\n\ntype MockUserOrTeamData = {\n  id: number\n  userProfile: UserProfile | null\n  userBundle: UserBundle | null\n  userGroupHeader: UserGroupHeader\n}\n\nconst mockUserData1: MockUserOrTeamData = {\n  id: MOCK_USER_ID,\n  userProfile: mockUserProfileData,\n  userBundle: mockUserBundle,\n  userGroupHeader: mockUserGroupHeader,\n}\n\nconst mockUserData2: MockUserOrTeamData = {\n  id: MOCK_USER_ID_2,\n  userProfile: mockUserProfileData2,\n  userBundle: mockUserBundle2,\n  userGroupHeader: mockUserGroupHeader2,\n}\n\nconst mockUserData3: MockUserOrTeamData = {\n  id: MOCK_USER_ID_3,\n  userProfile: mockUserProfileData3,\n  userBundle: mockUserBundle3,\n  userGroupHeader: mockUserGroupHeader3,\n}\n\nconst mockActData: MockUserOrTeamData = {\n  id: ACT_TEAM_ID,\n  userProfile: null,\n  userBundle: null,\n  userGroupHeader: {\n    ownerId: ACT_TEAM_ID.toString(),\n    userName: 'Synapse Access and Compliance Team',\n    isIndividual: false,\n  },\n}\n\nexport const mockUserData: MockUserOrTeamData[] = [\n  mockUserData1,\n  mockUserData2,\n  mockUserData3,\n  mockActData,\n]\n\nexport const MOCK_TEAM_ID = 987654\n"],"names":["MOCK_USER_ID","MOCK_USER_NAME","mockUserProfileData","mockUserBundle","mockUserGroupHeader","MOCK_USER_ID_2","MOCK_USER_NAME_2","mockUserProfileData2","mockUserBundle2","mockUserGroupHeader2","MOCK_USER_ID_3","MOCK_USER_NAME_3","mockUserProfileData3","mockUserBundle3","mockUserGroupHeader3","mockUserData1","mockUserData2","mockUserData3","mockActData","ACT_TEAM_ID","mockUserData"],"mappings":"mDAOO,MAAMA,EAAe,IACfC,EAAiB,aAEjBC,EAAmC,CAC9C,QAAS,iBACT,UAAW,QACX,SAAU,OACV,SAAU,mBACV,SAAU,gBACV,QAAS,mBACT,SAAU,eACV,QAASF,EAAa,SAAS,EAC/B,SAAUC,EACV,UAAW,2BACX,IAAK,sBACP,EAEaE,EAA6B,CACxC,OAAQH,EAAa,SAAS,EAC9B,YAAaE,EACb,MAAO,wCACP,YAAa,GACb,WAAY,GACZ,YAAa,EACf,EAEaE,EAAuC,CAClD,QAASJ,EAAa,SAAS,EAC/B,UAAWE,EAAoB,UAC/B,SAAUA,EAAoB,SAC9B,SAAUD,EACV,MAAO,+BACP,YAAa,eACb,aAAc,EAChB,EAEaI,EAAiB,IACjBC,EAAmB,cAEnBC,EAAoC,CAC/C,QAAS,4CACT,UAAW,OACX,SAAU,MACV,SAAU,kBACV,SAAU,mBACV,QAAS,oBACT,SAAU,iBACV,QAASF,EAAe,SAAS,EACjC,SAAUC,EACV,UAAW,2BACX,IAAK,sBACP,EAEaE,EAA8B,CACzC,OAAQH,EAAe,SAAS,EAChC,YAAaE,EACb,MAAO,wCACP,YAAa,GACb,WAAY,GACZ,YAAa,EACf,EAEaE,EAAwC,CACnD,QAASJ,EAAe,SAAS,EACjC,UAAWE,EAAqB,UAChC,SAAUA,EAAqB,SAC/B,SAAUD,EACV,MAAO,iCACP,YAAa,sBACb,aAAc,EAChB,EAEaI,EAAiB,KACjBC,EAAmB,aAEnBC,EAAoC,CAC/C,QACE,qGACF,UAAW,SACX,SAAU,QACV,SAAU,uBACV,SAAU,YACV,QAAS,iBACT,SAAU,sBACV,QAASF,EAAe,SAAS,EACjC,SAAUC,EACV,UAAW,2BACX,IAAK,sBACP,EAEaE,EAA8B,CACzC,OAAQH,EAAe,SAAS,EAChC,YAAaE,EACb,MAAO,wCACP,YAAa,GACb,WAAY,GACZ,YAAa,EACf,EAEaE,EAAwC,CACnD,QAASJ,EAAe,SAAS,EACjC,UAAWE,EAAqB,UAChC,SAAUA,EAAqB,SAC/B,SAAUD,EACV,MAAO,gCACP,YAAa,eACb,aAAc,EAChB,EASMI,EAAoC,CACxC,GAAIf,EACJ,YAAaE,EACb,WAAYC,EACZ,gBAAiBC,CACnB,EAEMY,EAAoC,CACxC,GAAIX,EACJ,YAAaE,EACb,WAAYC,EACZ,gBAAiBC,CACnB,EAEMQ,EAAoC,CACxC,GAAIP,EACJ,YAAaE,EACb,WAAYC,EACZ,gBAAiBC,CACnB,EAEMI,EAAkC,CACtC,GAAIC,EACJ,YAAa,KACb,WAAY,KACZ,gBAAiB,CACf,QAASA,EAAY,SAAS,EAC9B,SAAU,qCACV,aAAc,EAChB,CACF,EAEaC,EAAqC,CAChDL,EACAC,EACAC,EACAC,CACF"}