{"version":3,"file":"AccessRequirementSearchBox-1984f0eb.js","sources":["../../../../node_modules/.pnpm/react-select@5.7.2_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/react-select/dist/useAsync-fd9b28d9.esm.js","../../../../node_modules/.pnpm/react-select@5.7.2_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/react-select/async/dist/react-select-async.esm.js","../../src/components/dataaccess/AccessRequirementSearchBox.tsx"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { L as handleInputChange } from './index-a86253bb.esm.js';\n\nvar _excluded = [\"defaultOptions\", \"cacheOptions\", \"loadOptions\", \"options\", \"isLoading\", \"onInputChange\", \"filterOption\"];\nfunction useAsync(_ref) {\n  var _ref$defaultOptions = _ref.defaultOptions,\n    propsDefaultOptions = _ref$defaultOptions === void 0 ? false : _ref$defaultOptions,\n    _ref$cacheOptions = _ref.cacheOptions,\n    cacheOptions = _ref$cacheOptions === void 0 ? false : _ref$cacheOptions,\n    propsLoadOptions = _ref.loadOptions;\n    _ref.options;\n    var _ref$isLoading = _ref.isLoading,\n    propsIsLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n    propsOnInputChange = _ref.onInputChange,\n    _ref$filterOption = _ref.filterOption,\n    filterOption = _ref$filterOption === void 0 ? null : _ref$filterOption,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var propsInputValue = restSelectProps.inputValue;\n  var lastRequest = useRef(undefined);\n  var mounted = useRef(false);\n  var _useState = useState(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    defaultOptions = _useState2[0],\n    setDefaultOptions = _useState2[1];\n  var _useState3 = useState(typeof propsInputValue !== 'undefined' ? propsInputValue : ''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stateInputValue = _useState4[0],\n    setStateInputValue = _useState4[1];\n  var _useState5 = useState(propsDefaultOptions === true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(undefined),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loadedInputValue = _useState8[0],\n    setLoadedInputValue = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loadedOptions = _useState10[0],\n    setLoadedOptions = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passEmptyOptions = _useState12[0],\n    setPassEmptyOptions = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    optionsCache = _useState14[0],\n    setOptionsCache = _useState14[1];\n  var _useState15 = useState(undefined),\n    _useState16 = _slicedToArray(_useState15, 2),\n    prevDefaultOptions = _useState16[0],\n    setPrevDefaultOptions = _useState16[1];\n  var _useState17 = useState(undefined),\n    _useState18 = _slicedToArray(_useState17, 2),\n    prevCacheOptions = _useState18[0],\n    setPrevCacheOptions = _useState18[1];\n  if (cacheOptions !== prevCacheOptions) {\n    setOptionsCache({});\n    setPrevCacheOptions(cacheOptions);\n  }\n  if (propsDefaultOptions !== prevDefaultOptions) {\n    setDefaultOptions(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined);\n    setPrevDefaultOptions(propsDefaultOptions);\n  }\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  var loadOptions = useCallback(function (inputValue, callback) {\n    if (!propsLoadOptions) return callback();\n    var loader = propsLoadOptions(inputValue, callback);\n    if (loader && typeof loader.then === 'function') {\n      loader.then(callback, function () {\n        return callback();\n      });\n    }\n  }, [propsLoadOptions]);\n  useEffect(function () {\n    if (propsDefaultOptions === true) {\n      loadOptions(stateInputValue, function (options) {\n        if (!mounted.current) return;\n        setDefaultOptions(options || []);\n        setIsLoading(!!lastRequest.current);\n      });\n    }\n    // NOTE: this effect is designed to only run when the component mounts,\n    // so we don't want to include any hook dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var onInputChange = useCallback(function (newValue, actionMeta) {\n    var inputValue = handleInputChange(newValue, actionMeta, propsOnInputChange);\n    if (!inputValue) {\n      lastRequest.current = undefined;\n      setStateInputValue('');\n      setLoadedInputValue('');\n      setLoadedOptions([]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n      return;\n    }\n    if (cacheOptions && optionsCache[inputValue]) {\n      setStateInputValue(inputValue);\n      setLoadedInputValue(inputValue);\n      setLoadedOptions(optionsCache[inputValue]);\n      setIsLoading(false);\n      setPassEmptyOptions(false);\n    } else {\n      var request = lastRequest.current = {};\n      setStateInputValue(inputValue);\n      setIsLoading(true);\n      setPassEmptyOptions(!loadedInputValue);\n      loadOptions(inputValue, function (options) {\n        if (!mounted) return;\n        if (request !== lastRequest.current) return;\n        lastRequest.current = undefined;\n        setIsLoading(false);\n        setLoadedInputValue(inputValue);\n        setLoadedOptions(options || []);\n        setPassEmptyOptions(false);\n        setOptionsCache(options ? _objectSpread(_objectSpread({}, optionsCache), {}, _defineProperty({}, inputValue, options)) : optionsCache);\n      });\n    }\n  }, [cacheOptions, loadOptions, loadedInputValue, optionsCache, propsOnInputChange]);\n  var options = passEmptyOptions ? [] : stateInputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    options: options,\n    isLoading: isLoading || propsIsLoading,\n    onInputChange: onInputChange,\n    filterOption: filterOption\n  });\n}\n\nexport { useAsync as u };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef } from 'react';\nimport { S as Select } from '../../dist/Select-457c486b.esm.js';\nimport { u as useStateManager } from '../../dist/useStateManager-7e1e8489.esm.js';\nimport { u as useAsync } from '../../dist/useAsync-fd9b28d9.esm.js';\nexport { u as useAsync } from '../../dist/useAsync-fd9b28d9.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '../../dist/index-a86253bb.esm.js';\nimport '@emotion/react';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\nimport 'memoize-one';\n\nvar AsyncSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var stateManagedProps = useAsync(props);\n  var selectProps = useStateManager(stateManagedProps);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, selectProps));\n});\n\nexport default AsyncSelect;\n","import { Skeleton } from '@mui/material'\nimport React from 'react'\nimport { components, GroupBase, SelectComponentsConfig } from 'react-select'\nimport AsyncSelect from 'react-select/async'\nimport SynapseClient from '../../synapse-client'\nimport { useGetAccessRequirements } from '../../synapse-queries/dataaccess/useAccessRequirements'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\n\nexport type AccessRequirementSearchBoxProps = {\n  /* id for the input tag */\n  inputId?: string\n  initialId?: string | number\n  onChange: (accessRequirementId?: string | undefined) => void\n  placeholder?: string\n}\n\nexport function getOptionLabel(id: string | number, name: string) {\n  if (id.toString() === name) {\n    return name\n  } else {\n    return `${name} (${id})`\n  }\n}\n\nconst customSelectComponents: Partial<\n  SelectComponentsConfig<\n    {\n      id: string | number\n      value: string | number\n      label: string\n    },\n    false,\n    GroupBase<{\n      id: string | number\n      value: string | number\n      label: string\n    }>\n  >\n> = {\n  Control: props => {\n    return (\n      <components.Control\n        {...props}\n        className={`form-control ${props.className ?? ''}`}\n      />\n    )\n  },\n}\n\nexport default function AccessRequirementSearchBox(\n  props: AccessRequirementSearchBoxProps,\n) {\n  const { inputId, initialId, onChange, placeholder } = props\n  const { accessToken } = useSynapseContext()\n  const { data: initialAccessRequirement, isLoading: isLoadingInitialAR } =\n    useGetAccessRequirements(initialId!, {\n      enabled: !!initialId,\n    })\n\n  async function loadOptions(inputValue: string) {\n    // Check to see if the entered text is an AR ID\n    const parsedId = parseInt(inputValue)\n    let data: Array<{ id: string | number; name: string }> | undefined =\n      undefined\n    if (parsedId) {\n      data = [\n        await SynapseClient.getAccessRequirementById(accessToken, parsedId),\n      ]\n    }\n\n    // If the input wasn't an integer, or didn't match an existing AR ID, then search ARs\n    if (!data) {\n      data = (\n        await SynapseClient.searchAccessRequirements(accessToken, {\n          nameContains: inputValue,\n        })\n      )?.results\n    }\n\n    // Map the AR(s) to options for the select input component\n    return (\n      data?.map(item => ({\n        id: item.id.toString(),\n        value: item.id.toString(),\n        label: getOptionLabel(item.id, item.name),\n      })) ?? []\n    )\n  }\n\n  if (initialId && isLoadingInitialAR) {\n    return <Skeleton width=\"100%\" />\n  }\n\n  return (\n    <AsyncSelect\n      className=\"bootstrap-4-backport AsyncSelect\"\n      defaultInputValue={\n        initialId\n          ? getOptionLabel(\n              initialId,\n              initialAccessRequirement?.name ?? initialId.toString(),\n            )\n          : undefined\n      }\n      defaultOptions={\n        initialId\n          ? [\n              {\n                id: initialId,\n                value: initialId,\n                label: getOptionLabel(\n                  initialId,\n                  initialAccessRequirement?.name ?? initialId.toString(),\n                ),\n              },\n            ]\n          : true\n      }\n      inputId={inputId}\n      cacheOptions\n      isClearable\n      styles={{\n        // Bootstrap's form-control class overrides the display value, manually set to flex (the default without Bootstrap)\n        control: styles => ({ ...styles, display: 'flex !important' }),\n        input: provided => ({\n          ...provided,\n          // SWC-6327 - Adjust the input style so a right-click focuses on the input field\n          input: {\n            gridArea: '1 / 2 / 4 / 4 !important',\n          },\n        }),\n      }}\n      components={customSelectComponents}\n      loadOptions={loadOptions}\n      onChange={option => {\n        onChange(option?.id.toString())\n      }}\n      placeholder={placeholder}\n    />\n  )\n}\n"],"names":["_excluded","useAsync","_ref","_ref$defaultOptions","propsDefaultOptions","_ref$cacheOptions","cacheOptions","propsLoadOptions","_ref$isLoading","propsIsLoading","propsOnInputChange","_ref$filterOption","filterOption","restSelectProps","_objectWithoutProperties","propsInputValue","lastRequest","useRef","mounted","_useState","useState","_useState2","_slicedToArray","defaultOptions","setDefaultOptions","_useState3","_useState4","stateInputValue","setStateInputValue","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","loadedInputValue","setLoadedInputValue","_useState9","_useState10","loadedOptions","setLoadedOptions","_useState11","_useState12","passEmptyOptions","setPassEmptyOptions","_useState13","_useState14","optionsCache","setOptionsCache","_useState15","_useState16","prevDefaultOptions","setPrevDefaultOptions","_useState17","_useState18","prevCacheOptions","setPrevCacheOptions","useEffect","loadOptions","useCallback","inputValue","callback","loader","options","onInputChange","newValue","actionMeta","handleInputChange","request","_objectSpread","_defineProperty","AsyncSelect","forwardRef","props","ref","stateManagedProps","selectProps","useStateManager","React.createElement","Select","_extends","AsyncSelect$1","getOptionLabel","id","name","customSelectComponents","jsx","components","AccessRequirementSearchBox","inputId","initialId","onChange","placeholder","accessToken","useSynapseContext","initialAccessRequirement","isLoadingInitialAR","useGetAccessRequirements","parsedId","data","SynapseClient","_a","item","Skeleton","styles","provided","option"],"mappings":"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","x_google_ignoreList":[0,1]}