{"version":3,"file":"FavoriteButton-10e7eea9.js","sources":["../../src/components/favorites/FavoriteButton.tsx"],"sourcesContent":["import React from 'react'\nimport IconSvg from '../IconSvg/IconSvg'\nimport { IconButton, Skeleton, Tooltip } from '@mui/material'\nimport {\n  useAddFavorite,\n  useIsFavorite,\n  useRemoveFavorite,\n} from '../../synapse-queries'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport ConditionalWrapper from '../utils/ConditionalWrapper'\n\nexport type FavoriteButtonProps = {\n  /* The entity for which to show a favorite button */\n  entityId: string\n}\n\n/**\n * Renders a button that indicates if an entity is favorited by the logged-in user. When clicked, the entity is\n * added to/removed from their favorites\n */\nexport default function FavoriteButton(props: FavoriteButtonProps) {\n  const { entityId } = props\n  const { accessToken } = useSynapseContext()\n  const isSignedIn = !!accessToken\n  const { isFavorite, isLoading } = useIsFavorite(entityId)\n  const { mutate: onAddFavorite, isLoading: isAddingFavorite } =\n    useAddFavorite()\n  const { mutate: onRemoveFavorite, isLoading: isRemovingFavorite } =\n    useRemoveFavorite()\n\n  const disableButton =\n    isLoading || isAddingFavorite || isRemovingFavorite || !isSignedIn\n\n  let tooltipText = 'Add to Favorites'\n  if (!isSignedIn) {\n    tooltipText = 'Sign in to add this to your favorites'\n  } else if (isFavorite) {\n    tooltipText = 'Remove from Favorites'\n  }\n  return (\n    <ConditionalWrapper condition={isLoading} wrapper={Skeleton}>\n      <Tooltip title={tooltipText} placement={'top'}>\n        <span>\n          <IconButton\n            size={'small'}\n            disabled={disableButton}\n            onClick={() => {\n              isFavorite ? onRemoveFavorite(entityId) : onAddFavorite(entityId)\n            }}\n            sx={{ padding: '2px' }}\n          >\n            <IconSvg\n              icon={isFavorite ? 'fav' : 'favOutline'}\n              sx={{\n                color: 'tertiary.main',\n                width: '21px',\n                height: '21px',\n              }}\n              wrap={false}\n            />\n          </IconButton>\n        </span>\n      </Tooltip>\n    </ConditionalWrapper>\n  )\n}\n"],"names":["FavoriteButton","props","entityId","accessToken","useSynapseContext","isSignedIn","isFavorite","isLoading","useIsFavorite","onAddFavorite","isAddingFavorite","useAddFavorite","onRemoveFavorite","isRemovingFavorite","useRemoveFavorite","disableButton","tooltipText","jsx","ConditionalWrapper","Skeleton","Tooltip","IconButton","IconSvg"],"mappings":"geAoBA,SAAAA,EAAAC,EAAA,CACE,KAAA,CAAA,SAAAC,CAAA,EAAAD,EACA,CAAA,YAAAE,GAAAC,IACAC,EAAA,CAAA,CAAAF,EACA,CAAA,WAAAG,EAAA,UAAAC,CAAA,EAAAC,EAAAN,CAAA,EACA,CAAA,OAAAO,EAAA,UAAAC,CAAA,EAAAC,IAEA,CAAA,OAAAC,EAAA,UAAAC,CAAA,EAAAC,IAGAC,EAAAR,GAAAG,GAAAG,GAAA,CAAAR,EAGA,IAAAW,EAAA,mBACA,OAAAX,EACgBC,IAEdU,EAAA,yBAFAA,EAAA,wCAIFC,EAAAC,EAAA,CAAA,UAAAX,EAAA,QAAAY,EAAA,SAAAF,EAAAG,EAAA,CAAA,MAAAJ,EAAA,UAAA,MAAA,SAAAC,EAAA,OAAA,CAAA,SAAAA,EAIQI,EAAC,CAAA,KAAA,QACO,SAAAN,EACI,QAAA,IAAA,CAERT,EAAAM,EAAAV,CAAA,EAAAO,EAAAP,CAAA,CAAgE,EAClE,GAAA,CAAA,QAAA,KAAA,EACqB,SAAAe,EAErBK,EAAC,CAAA,KAAAhB,EAAA,MAAA,aAC4B,GAAA,CACvB,MAAA,gBACK,MAAA,OACA,OAAA,MACC,EACV,KAAA,EACM,CAAA,CACR,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAMZ;"}