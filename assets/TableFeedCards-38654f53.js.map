{"version":3,"file":"TableFeedCards-38654f53.js","sources":["../../src/components/TableFeedCards/TableFeedCards.tsx"],"sourcesContent":["import { SynapseConstants } from '../../utils'\nimport SynapseClient from '../../synapse-client'\nimport React, { useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport {\n  QueryBundleRequest,\n  RowSet,\n  SelectColumn,\n} from '@sage-bionetworks/synapse-types'\nimport MarkdownSynapse from '../Markdown/MarkdownSynapse'\nimport loadingScreen from '../LoadingScreen'\nimport LargeButton from '../../components/styled/LargeButton'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\n\nexport type TableFeedCardsProps = {\n  tableEntityId: string\n}\n\nconst TableFeedCards: React.FunctionComponent<TableFeedCardsProps> = ({\n  tableEntityId,\n}) => {\n  const { accessToken } = useSynapseContext()\n  const [rowSet, setRowSet] = useState<RowSet>()\n  const [itemCountShowing, setItemCountShowing] = useState<number>(3)\n\n  let mounted = true\n  useEffect(() => {\n    const executeQuery = () => {\n      if (mounted) {\n        if (rowSet) {\n          return\n        }\n        const request: QueryBundleRequest = {\n          concreteType:\n            'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n          query: {\n            sql: `SELECT \"categories\", \"date\", \"title\", \"mdDescription\" FROM ${tableEntityId} ORDER BY \"date\" desc`,\n          },\n          entityId: tableEntityId,\n          partMask: SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n        }\n        SynapseClient.getQueryTableResults(request, accessToken).then(data => {\n          setRowSet(data.queryResult?.queryResults)\n        })\n      }\n    }\n    executeQuery()\n    return () => {\n      mounted = false\n    }\n  }, [tableEntityId, accessToken])\n\n  if (!rowSet) {\n    return loadingScreen\n  }\n  const headers: SelectColumn[] = rowSet.headers\n  const categoriesColIndex = headers.findIndex(col => col.name === 'categories')\n  const dateColIndex = headers.findIndex(col => col.name === 'date')\n  const titleColIndex = headers.findIndex(col => col.name === 'title')\n  const descriptionColIndex = headers.findIndex(\n    col => col.name === 'mdDescription',\n  )\n\n  return (\n    <div className=\"Feed\">\n      <div className=\"FeedItems\">\n        {rowSet.rows.map((row, index) => {\n          if (index > itemCountShowing - 1) {\n            return\n          }\n          const values = row.values as string[]\n          if (values.some(value => value === null)) {\n            console.warn('Row has null value(s) when no nulls expected')\n          }\n          const categoriesList = JSON.parse(values[categoriesColIndex])\n          const dateStringTimestamp = values[dateColIndex]\n          const title = values[titleColIndex]\n          const description = values[descriptionColIndex]\n\n          return (\n            <div className=\"FeedItem\" key={`row-${index}`}>\n              <div>\n                {categoriesList && (\n                  <div className=\"FeedItemCategories\">\n                    {(categoriesList as string[]).map(\n                      (categoryName: string, categoryIndex) => {\n                        return (\n                          <div\n                            key={`row-${index},categoryIndex-${categoryIndex}`}\n                            className=\"FeedItemCategory\"\n                          >\n                            {categoryName}\n                          </div>\n                        )\n                      },\n                    )}\n                  </div>\n                )}\n                <p className=\"FeedItemDate\">\n                  {dayjs(new Date(parseInt(dateStringTimestamp))).format(\n                    'MMMM YYYY',\n                  )}\n                </p>\n                <p className=\"FeedItemTitle\">{title}</p>\n                <div className=\"FeedItemDescription\">\n                  <MarkdownSynapse markdown={description} />\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {rowSet.rows.length > itemCountShowing && (\n        <div className=\"FeedViewAllNewsButtonContainer\">\n          <LargeButton\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setItemCountShowing(itemCountShowing + 3)}\n          >\n            View More News\n          </LargeButton>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default TableFeedCards\n"],"names":["TableFeedCards","tableEntityId","accessToken","useSynapseContext","rowSet","setRowSet","useState","itemCountShowing","setItemCountShowing","mounted","useEffect","request","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","SynapseClient","data","_a","loadingScreen","headers","categoriesColIndex","col","dateColIndex","titleColIndex","descriptionColIndex","jsxs","jsx","row","index","values","value","categoriesList","dateStringTimestamp","title","description","categoryName","categoryIndex","dayjs","MarkdownSynapse","LargeButton"],"mappings":"yaAkBA,MAAAA,EAAA,CAAA,CAAsE,cAAAC,CAEtE,IAAA,CACE,KAAA,CAAA,YAAAC,GAAAC,IACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,CAAA,EAEA,IAAAG,EAAA,GA2BA,GA1BAC,EAAAA,UAAA,MACE,IAAA,CACE,GAAAD,EAAA,CACE,GAAAL,EACE,OAEF,MAAAO,EAAA,CAAoC,aAAA,0DAEhC,MAAA,CACK,IAAA,8DAAAV,wBAC8D,EACrE,SAAAA,EACU,SAAAW,CACiB,EAE7BC,EAAA,qBAAAF,EAAAT,CAAA,EAAA,KAAAY,GAAA,OACET,GAAAU,EAAAD,EAAA,cAAA,YAAAC,EAAA,YAAA,CAAwC,CAAA,EAE5C,KAGF,IAAA,CACEN,EAAA,EAAU,GACZ,CAAAR,EAAAC,CAAA,CAAA,EAGF,CAAAE,EACE,OAAAY,EAEF,MAAAC,EAAAb,EAAA,QACAc,EAAAD,EAAA,UAAAE,GAAAA,EAAA,OAAA,YAAA,EACAC,EAAAH,EAAA,UAAAE,GAAAA,EAAA,OAAA,MAAA,EACAE,EAAAJ,EAAA,UAAAE,GAAAA,EAAA,OAAA,OAAA,EACAG,EAAAL,EAAA,UAAoCE,GAAAA,EAAA,OAAA,eACd,EAGtB,OAAAI,EAAA,MAAA,CAAA,UAAA,OAAA,SAAA,CAEIC,EAAA,MAAA,CAAA,UAAA,YAAA,SAAApB,EAAA,KAAA,IAAA,CAAAqB,EAAAC,IAAA,CAEI,GAAAA,EAAAnB,EAAA,EACE,OAEF,MAAAoB,EAAAF,EAAA,OACAE,EAAA,KAAAC,GAAAA,IAAA,IAAA,GACE,QAAA,KAAA,8CAAA,EAEF,MAAAC,EAAA,KAAA,MAAAF,EAAAT,CAAA,CAAA,EACAY,EAAAH,EAAAP,CAAA,EACAW,EAAAJ,EAAAN,CAAA,EACAW,EAAAL,EAAAL,CAAA,EAEA,OAAAE,EAAA,MAAA,CAAA,UAAA,WAAA,SAAAD,EAAA,MAAA,CAAA,SAAA,CAGOM,GAAAL,EAAA,MAAA,CAAA,UAAA,qBAAA,SAAAK,EAAA,IAEiC,CAAAI,EAAAC,IAE1BV,EACE,MAAC,CAAA,UAAA,mBAEW,SAAAS,CAET,EAAA,OAAAP,mBAAAQ,GAHkC,CAMzC,EAAA,EAEJV,EAAA,IAAA,CAAA,UAAA,eAAA,SAAAW,EAAA,IAAA,KAAA,SAAAL,CAAA,CAAA,CAAA,EAAA,OAGgD,WAC9C,EAAA,EAEJN,EAAA,IAAA,CAAA,UAAA,gBAAA,SAAAO,EAAA,EACoCP,EAAA,MAAA,CAAA,UAAA,sBAAA,SAAAA,EAAAY,EAAA,CAAA,SAAAJ,CAAA,CAAA,CAAA,CAAA,CAGpC,CAAA,CAAA,CAAA,EAAA,OAAAN,GAAA,CAEJ,CAAA,EAAA,EAGNtB,EAAA,KAAA,OAAAG,GAAAiB,EAAA,MAAA,CAAA,UAAA,iCAAA,SAAAA,EAGIa,EAAC,CAAA,MAAA,UACO,QAAA,YACE,QAAA,IAAA7B,EAAAD,EAAA,CAAA,EAC+C,SAAA,gBACxD,CAAA,EAAA,CAGH,CAAA,CAAA,CAIR"}