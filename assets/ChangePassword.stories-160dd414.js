import{j as o,a}from"./jsx-runtime-095bf462.js";import{r as e}from"./index-8db94870.js";import{d as i}from"./ToastMessage-6e66d93f.js";import{u as b,S as f}from"./SynapseClient-c43c6534.js";import{F as d}from"./FormGroup-a255fd2e.js";import{F as c,a as l}from"./FormLabel-7b55e02a.js";import{B as F}from"./Button-5637ed55.js";import"./_commonjsHelpers-042e6b4d.js";import"./FullWidthAlert-51eedfbf.js";import"./Alert-e578e9d5.js";import"./extends-98964cd2.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./createWithBsPrefix-0fdadc7a.js";import"./inheritsLoose-c82a83d4.js";import"./index-8ce4a492.js";import"./index-58d3fd43.js";import"./Typography-b4a6e0b5.js";import"./styled-2cba4329.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-29d231ba.js";import"./extendSxProp-a6a93bb0.js";import"./Clear-398befb5.js";import"./createSvgIcon-02cd1a2a.js";import"./SvgIcon-bc070951.js";import"./Tooltip-b11baf92.js";import"./useTheme-d9b5c73e.js";import"./ownerDocument-613eb639.js";import"./useForkRef-2674f3de.js";import"./useEnhancedEffect-c45cae33.js";import"./isHostComponent-73d6e646.js";import"./useControlled-be22aa93.js";import"./useEventCallback-65e61675.js";import"./utils-8d96ae5c.js";import"./TransitionGroupContext-53ae1513.js";import"./TransitionGroup-5e0fc2af.js";import"./assertThisInitialized-081f9914.js";import"./hasClass-ec9efd32.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./isArray-5e3f9107.js";import"./isSymbol-7c514724.js";import"./SynapseConstants-1ebc8be6.js";import"./getEndpoint-ac94413e.js";import"./Link-50e57cb4.js";import"./dayjs.min-8d4ef725.js";import"./hoist-non-react-statics.cjs-775f1375.js";import"./inputBaseClasses-564a6ee4.js";import"./Fade-2249b304.js";import"./Col-8dbe8567.js";const w=()=>{const{accessToken:s}=b(),[u,_]=e.useState(""),[m,v]=e.useState(""),[h,N]=e.useState(""),[p,g]=e.useState();e.useEffect(()=>{async function r(){const t=await f.getUserProfile(s);g(t)}s?r():g(void 0)},[s]);const P=async r=>{r.preventDefault();try{if(m!==h)i("New password and confirm password does not match.","danger");else if(s){const t={newPassword:m,concreteType:"org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword",username:p==null?void 0:p.userName,currentPassword:u};await f.changePasswordWithCurrentPassword(t,s).then(()=>i("Successfully changed","success")).catch(x=>i(x.reason,"danger"))}}catch(t){i(t.reason,"danger")}};return o("div",{className:"changePassword",children:a("form",{onSubmit:r=>{P(r)},children:[a(d,{controlId:"oldPassword",children:[o(c,{children:"Current Password"}),o(l,{type:"password",onChange:r=>_(r.target.value),value:u})]}),a(d,{controlId:"newPassword",children:[o(c,{children:"New Password"}),o(l,{type:"password",onChange:r=>v(r.target.value),value:m})]}),a(d,{controlId:"confirmPassword",children:[o(c,{children:"Confirm Password"}),o(l,{type:"password",onChange:r=>N(r.target.value),value:h})]}),o(F,{type:"submit",onSubmit:r=>{P(r)},children:"Change Password"})]})})};try{w.displayName="ChangePassword",w.__docgenInfo={description:"",displayName:"ChangePassword",props:{}}}catch{}const _r={title:"Authentication/ChangePassword",component:w},n={};var C,y,S;n.parameters={...n.parameters,docs:{...(C=n.parameters)==null?void 0:C.docs,source:{originalSource:"{}",...(S=(y=n.parameters)==null?void 0:y.docs)==null?void 0:S.source}}};const vr=["ChangePasswordDemo"];export{n as ChangePasswordDemo,vr as __namedExportsOrder,_r as default};
//# sourceMappingURL=ChangePassword.stories-160dd414.js.map
