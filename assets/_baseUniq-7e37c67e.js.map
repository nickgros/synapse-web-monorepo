{"version":3,"file":"_baseUniq-7e37c67e.js","sources":["../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_assignValue.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_copyArray.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseFindIndex.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsNaN.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_strictIndexOf.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIndexOf.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayIncludes.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arrayIncludesWith.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/noop.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createSet.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseUniq.js"],"sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"],"names":["baseAssignValue","require$$0","eq","require$$1","objectProto","hasOwnProperty","assignValue","object","key","value","objValue","_assignValue","copyArray","source","array","index","length","_copyArray","baseFindIndex","predicate","fromIndex","fromRight","_baseFindIndex","baseIsNaN","_baseIsNaN","strictIndexOf","_strictIndexOf","require$$2","baseIndexOf","_baseIndexOf","arrayIncludes","_arrayIncludes","arrayIncludesWith","comparator","_arrayIncludesWith","noop","noop_1","Set","setToArray","INFINITY","createSet","values","_createSet","SetCache","cacheHas","require$$3","require$$4","require$$5","LARGE_ARRAY_SIZE","baseUniq","iteratee","includes","isCommon","result","seen","set","outer","computed","seenIndex","_baseUniq"],"mappings":"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"}