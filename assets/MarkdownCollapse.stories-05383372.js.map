{"version":3,"file":"MarkdownCollapse.stories-05383372.js","sources":["../../../../node_modules/.pnpm/react-bootstrap@1.6.6_react-dom@18.2.0_react@18.2.0/node_modules/react-bootstrap/esm/Collapse.js","../../src/components/Markdown/MarkdownCollapse.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"className\", \"children\", \"dimension\", \"getDimensionValue\"];\n\nvar _collapseStyles;\n\nimport classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport Transition, { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nvar MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  var offset = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n  var value = elem[offset];\n  var margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nvar collapseStyles = (_collapseStyles = {}, _collapseStyles[EXITED] = 'collapse', _collapseStyles[EXITING] = 'collapsing', _collapseStyles[ENTERING] = 'collapsing', _collapseStyles[ENTERED] = 'collapse show', _collapseStyles);\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nvar Collapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$dimension = _ref.dimension,\n      dimension = _ref$dimension === void 0 ? 'height' : _ref$dimension,\n      _ref$getDimensionValu = _ref.getDimensionValue,\n      getDimensionValue = _ref$getDimensionValu === void 0 ? getDefaultDimensionValue : _ref$getDimensionValu,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  /* Compute dimension */\n  var computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  var handleEnter = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = '0';\n    }, onEnter);\n  }, [computedDimension, onEnter]);\n  var handleEntering = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      var scroll = \"scroll\" + computedDimension[0].toUpperCase() + computedDimension.slice(1);\n      elem.style[computedDimension] = elem[scroll] + \"px\";\n    }, onEntering);\n  }, [computedDimension, onEntering]);\n  var handleEntered = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onEntered);\n  }, [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  var handleExit = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = getDimensionValue(computedDimension, elem) + \"px\";\n      triggerBrowserReflow(elem);\n    }, onExit);\n  }, [onExit, getDimensionValue, computedDimension]);\n  var handleExiting = useMemo(function () {\n    return createChainedFunction(function (elem) {\n      elem.style[computedDimension] = null;\n    }, onExiting);\n  }, [computedDimension, onExiting]);\n  return /*#__PURE__*/React.createElement(Transition // @ts-ignore\n  , _extends({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props, {\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting\n  }), function (state, innerProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({}, innerProps, {\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'width')\n    }));\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React, { useState } from 'react'\nimport { Collapse, SafeAnchor } from 'react-bootstrap'\nimport IconMinus from '../../assets/icons/IconMinus'\nimport IconPlus from '../../assets/icons/IconPlus'\nimport IconCopy from '../../assets/icons/IconCopy'\nimport MarkdownSynapse, { MarkdownSynapseProps } from './MarkdownSynapse'\nimport { displayToast } from '../ToastMessage/ToastMessage'\n\nexport type MarkdownCollapseProps = {\n  // The text that should be shown.  If not given, will default to \"full text\"\n  textDescription?: string\n  showCopyPlainText?: boolean\n} & MarkdownSynapseProps\n\n/**\n * Wraps a MarkdownSynapse in a Collapse area, with customizable text description.\n * Will pass down all properties to the MarkdownSynapse component, so this can be used in\n * the portal detail pages.\n * @param props\n */\nexport const MarkdownCollapse = (props: MarkdownCollapseProps) => {\n  const [show, setShow] = useState(false)\n  const [wordCount, setWordCount] = useState<number>()\n  const [plainText, setPlainText] = useState<string>()\n\n  const onMarkdownProcessingDone = (ref: HTMLInputElement | null) => {\n    const textContent = ref?.textContent\n    if (textContent) {\n      setPlainText(textContent.trim())\n      setWordCount(textContent.trim().split(/\\s+/).length)\n    }\n  }\n\n  const { textDescription = 'full text', showCopyPlainText } = props\n  return (\n    <div className=\"MarkdownCollapse bootstrap-4-backport\">\n      <p>\n        {show ? <IconMinus /> : <IconPlus />}\n        <SafeAnchor\n          className=\"highlight-link\"\n          onClick={() => setShow(!show)}\n          aria-controls=\"collapse-text\"\n          aria-expanded={show}\n        >\n          {show ? 'Hide' : 'View'} {textDescription}{' '}\n          {wordCount ? `(${wordCount} words)` : ''}\n        </SafeAnchor>\n      </p>\n      {showCopyPlainText && (\n        <p>\n          <IconCopy className=\"primary\" />\n          <SafeAnchor\n            className=\"highlight-link\"\n            onClick={() => {\n              if (plainText) {\n                navigator.clipboard\n                  .writeText(plainText)\n                  .then(() => {\n                    displayToast('Successfully copied to the clipboard')\n                  })\n                  .catch(err => {\n                    console.error(err)\n                  })\n              }\n            }}\n          >\n            Copy {textDescription} to clipboard\n          </SafeAnchor>\n        </p>\n      )}\n      <Collapse in={show}>\n        <div id=\"collapse-text\">\n          <MarkdownSynapse\n            onMarkdownProcessingDone={onMarkdownProcessingDone}\n            {...props}\n          />\n        </div>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default MarkdownCollapse\n"],"names":["_excluded","_collapseStyles","MARGINS","getDefaultDimensionValue","dimension","elem","offset","value","margins","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","Collapse","React","_ref","ref","onEnter","onEntering","onEntered","onExit","onExiting","className","children","_ref$dimension","_ref$getDimensionValu","getDimensionValue","props","_objectWithoutPropertiesLoose","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","Transition","_extends","transitionEndListener","state","innerProps","classNames","Collapse$1","MarkdownCollapse","show","setShow","useState","wordCount","setWordCount","plainText","setPlainText","onMarkdownProcessingDone","textContent","textDescription","showCopyPlainText","jsxs","jsx","IconMinus","IconPlus","SafeAnchor","IconCopy","displayToast","err","MarkdownSynapse"],"mappings":"84LAEA,IAAIA,GAAY,CAAC,UAAW,aAAc,YAAa,SAAU,YAAa,YAAa,WAAY,YAAa,mBAAmB,EAEnIC,EASAC,GAAU,CACZ,OAAQ,CAAC,YAAa,cAAc,EACpC,MAAO,CAAC,aAAc,aAAa,CACrC,EAEA,SAASC,EAAyBC,EAAWC,EAAM,CACjD,IAAIC,EAAS,SAAWF,EAAU,CAAC,EAAE,YAAW,EAAKA,EAAU,MAAM,CAAC,EAClEG,EAAQF,EAAKC,CAAM,EACnBE,EAAUN,GAAQE,CAAS,EAC/B,OAAOG,EACP,SAASE,EAAIJ,EAAMG,EAAQ,CAAC,CAAC,EAAG,EAAE,EAClC,SAASC,EAAIJ,EAAMG,EAAQ,CAAC,CAAC,EAAG,EAAE,CACpC,CAEA,IAAIE,IAAkBT,EAAkB,CAAA,EAAIA,EAAgBU,CAAM,EAAI,WAAYV,EAAgBW,CAAO,EAAI,aAAcX,EAAgBY,CAAQ,EAAI,aAAcZ,EAAgBa,CAAO,EAAI,gBAAiBb,GAC7Mc,GAAe,CACjB,GAAI,GACJ,QAAS,IACT,aAAc,GACd,cAAe,GACf,OAAQ,GACR,kBAAmBZ,CACrB,EACIa,EAAwBC,EAAM,WAAW,SAAUC,EAAMC,EAAK,CAChE,IAAIC,EAAUF,EAAK,QACfG,EAAaH,EAAK,WAClBI,EAAYJ,EAAK,UACjBK,EAASL,EAAK,OACdM,EAAYN,EAAK,UACjBO,EAAYP,EAAK,UACjBQ,EAAWR,EAAK,SAChBS,EAAiBT,EAAK,UACtBd,EAAYuB,IAAmB,OAAS,SAAWA,EACnDC,EAAwBV,EAAK,kBAC7BW,EAAoBD,IAA0B,OAASzB,EAA2ByB,EAClFE,EAAQC,EAA8Bb,EAAMlB,EAAS,EAGrDgC,EAAoB,OAAO5B,GAAc,WAAaA,EAAS,EAAKA,EAGpE6B,EAAcC,EAAAA,QAAQ,UAAY,CACpC,OAAOC,EAAsB,SAAU9B,EAAM,CAC3CA,EAAK,MAAM2B,CAAiB,EAAI,GACjC,EAAEZ,CAAO,CACd,EAAK,CAACY,EAAmBZ,CAAO,CAAC,EAC3BgB,EAAiBF,EAAAA,QAAQ,UAAY,CACvC,OAAOC,EAAsB,SAAU9B,EAAM,CAC3C,IAAIgC,EAAS,SAAWL,EAAkB,CAAC,EAAE,YAAW,EAAKA,EAAkB,MAAM,CAAC,EACtF3B,EAAK,MAAM2B,CAAiB,EAAI3B,EAAKgC,CAAM,EAAI,IAChD,EAAEhB,CAAU,CACjB,EAAK,CAACW,EAAmBX,CAAU,CAAC,EAC9BiB,EAAgBJ,EAAAA,QAAQ,UAAY,CACtC,OAAOC,EAAsB,SAAU9B,EAAM,CAC3CA,EAAK,MAAM2B,CAAiB,EAAI,IACjC,EAAEV,CAAS,CAChB,EAAK,CAACU,EAAmBV,CAAS,CAAC,EAG7BiB,EAAaL,EAAAA,QAAQ,UAAY,CACnC,OAAOC,EAAsB,SAAU9B,EAAM,CAC3CA,EAAK,MAAM2B,CAAiB,EAAIH,EAAkBG,EAAmB3B,CAAI,EAAI,KAC7EmC,GAAqBnC,CAAI,CAC1B,EAAEkB,CAAM,CACV,EAAE,CAACA,EAAQM,EAAmBG,CAAiB,CAAC,EAC7CS,EAAgBP,EAAAA,QAAQ,UAAY,CACtC,OAAOC,EAAsB,SAAU9B,EAAM,CAC3CA,EAAK,MAAM2B,CAAiB,EAAI,IACjC,EAAER,CAAS,CAChB,EAAK,CAACQ,EAAmBR,CAAS,CAAC,EACjC,OAAoBP,EAAM,cAAcyB,EACtCC,EAAS,CACT,IAAKxB,EACL,eAAgByB,EACjB,EAAEd,EAAO,CACR,gBAAiBA,EAAM,KAAOA,EAAM,GAAK,KACzC,QAASG,EACT,WAAYG,EACZ,UAAWE,EACX,OAAQC,EACR,UAAWE,CACf,CAAG,EAAG,SAAUI,EAAOC,EAAY,CAC/B,OAAoB7B,EAAM,aAAaS,EAAUiB,EAAS,CAAA,EAAIG,EAAY,CACxE,UAAWC,EAAWtB,EAAWC,EAAS,MAAM,UAAWhB,GAAemC,CAAK,EAAGb,IAAsB,SAAW,OAAO,CAC3H,CAAA,CAAC,CACN,CAAG,CACH,CAAC,EAGDhB,EAAS,aAAeD,GACxB,MAAAiC,GAAehC,ECnFRiC,EAAAnB,GAAA,CACL,KAAA,CAAAoB,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAEAK,EAAAtC,GAAA,CACE,MAAAuC,EAAAvC,GAAA,YAAAA,EAAA,YACAuC,IACEF,EAAAE,EAAA,KAAA,CAAA,EACAJ,EAAAI,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,MAAA,EACF,EAGF,CAAA,gBAAAC,EAAA,YAAA,kBAAAC,CAAA,EAAA9B,EACA,OAAA+B,EAAA,MAAA,CAAA,UAAA,wCAAA,SAAA,CAEIA,EAAA,IAAA,CAAA,SAAA,CACGX,EAAAY,EAAAC,EAAA,CAAA,CAAA,EAAAD,EAAAE,EAAA,EAAA,EAAiCH,EAClCI,EAAC,CAAA,UAAA,iBACW,QAAA,IAAAd,EAAA,CAAAD,CAAA,EACkB,gBAAA,gBACd,gBAAAA,EACC,SAAA,CAEdA,EAAA,OAAA,OAAgB,IAAOS,EAAE,IAAiBN,EAAA,IAAAA,WAAA,EACL,CAAA,CAAA,CACxC,EAAA,EACFO,GAAAC,EAAA,IAAA,CAAA,SAAA,CAGIC,EAAAI,EAAA,CAAA,UAAA,SAAA,CAAA,EAA8BL,EAC9BI,EAAC,CAAA,UAAA,iBACW,QAAA,IAAA,CAERV,GACE,UAAA,UAAA,UAAAA,CAAA,EAAA,KAAA,IAAA,CAGIY,EAAA,sCAAA,CAAmD,CAAA,EAAA,MAAAC,GAAA,CAGnD,QAAA,MAAAA,CAAA,CAAiB,CAAA,CAEvB,EACF,SAAA,CACD,QAAAT,EACO,eAAgB,CAAA,CAAA,CACxB,EAAA,EACFG,EAAA9C,GAAA,CAAA,GAAAkC,EAAA,SAAAY,EAAA,MAAA,CAAA,GAAA,gBAAA,SAAAA,EAIEO,EAAC,CAAA,yBAAAZ,EACC,GAAA3B,CACI,CAAA,CAAA,CAAA,CAAA,CAAA,CAGV,CAAA,CAAA,CAGN;;;;;;;;;;;;;;","x_google_ignoreList":[0]}