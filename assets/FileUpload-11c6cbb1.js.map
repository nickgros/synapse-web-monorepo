{"version":3,"file":"FileUpload-11c6cbb1.js","sources":["../../src/lib/containers/FileUpload.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Button, ButtonProps } from '@mui/material'\nimport { uploadFile } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { FileUploadComplete, UploadCallbackResp } from '../utils/synapseTypes'\n\nexport type FileUploadProps = {\n  id?: string\n  label?: string\n  buttonProps?: ButtonProps\n  uploadCallback?: (response: UploadCallbackResp) => void\n  context?: any // to distinguish which file was uploaded if we have several FileUpload components on the same page\n}\n\nconst FileUpload: React.FC<FileUploadProps> = props => {\n  const {\n    id,\n    buttonProps = { variant: 'contained' },\n    label = 'Browse...',\n    uploadCallback,\n    context,\n  } = props\n  const { accessToken } = useSynapseContext()\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null)\n\n  const clickHandler = () => {\n    if (hiddenFileInput?.current!) {\n      hiddenFileInput.current?.click()\n    }\n  }\n\n  const changeHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0]\n      try {\n        const resp: FileUploadComplete = await uploadFile(\n          accessToken,\n          file.name,\n          file,\n        )\n        uploadCallback?.({\n          success: true,\n          resp: resp,\n          context: context,\n        })\n      } catch (e) {\n        console.log('FileUpload: fail to upload file', e)\n        uploadCallback?.({\n          success: false,\n          error: e,\n        })\n      }\n    }\n  }\n\n  return (\n    <>\n      <input\n        type={'file'}\n        ref={hiddenFileInput}\n        onChange={e => {\n          changeHandler(e)\n        }}\n        style={{ display: 'none' }}\n      />\n      <Button id={id} onClick={clickHandler} {...buttonProps}>\n        {label}\n      </Button>\n    </>\n  )\n}\n\nexport default FileUpload\n"],"names":["FileUpload","props","id","buttonProps","label","uploadCallback","context","accessToken","useSynapseContext","hiddenFileInput","React.useRef","clickHandler","_a","changeHandler","file","resp","uploadFile","e2","jsxs","Fragment","jsx","Button"],"mappings":"uMAcA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAM,GAAAC,EACJ,YAAAC,EAAA,CAAA,QAAA,WAAA,EACqC,MAAAC,EAAA,YAC7B,eAAAC,EACR,QAAAC,CACA,EAAAL,EAEF,CAAA,YAAAM,GAAAC,IACAC,EAAAC,SAAA,IAAA,EAEAC,EAAA,IAAA,OACEF,GAAA,MAAAA,EAAA,WACEG,EAAAH,EAAA,UAAA,MAAAG,EAAA,QACF,EAGFC,EAAA,MAAA,GAAA,CACE,GAAA,EAAA,OAAA,OAAA,EAAA,OAAA,MAAA,OAAA,EAAA,CACE,MAAAC,EAAA,EAAA,OAAA,MAAA,CAAA,EACA,GAAA,CACE,MAAAC,EAAA,MAAAC,EAAuCT,EACrCO,EAAA,KACKA,CACL,EAEFT,GAAA,MAAAA,EAAA,CAAiB,QAAA,GACN,KAAAU,EACT,QAAAT,CACA,EACD,OAAAW,EAAA,CAED,QAAA,IAAA,kCAAAA,CAAA,EACAZ,GAAA,MAAAA,EAAA,CAAiB,QAAA,GACN,MAAAY,CACF,EACR,CACH,CACF,EAGF,OAAAC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAA,QAAC,CAAA,KAAA,OACO,IAAAX,EACD,SAAA,GAAA,CAEHI,EAAA,CAAA,CAAe,EACjB,MAAA,CAAA,QAAA,MAAA,CACyB,CAAA,EAC3BO,EAAAC,EAAA,CAAA,GAAAnB,EAAA,QAAAS,EAAA,GAAAR,EAAA,SAAAC,EAAA,CAGA,CAAA,CAAA,CAGN"}