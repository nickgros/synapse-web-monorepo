{"version":3,"file":"SubscribersModal-ea0ad2be.js","sources":["../../src/synapse-queries/subscription/useSubscription.ts","../../src/components/Forum/SubscribersModal.tsx"],"sourcesContent":["import {\n  SubscriptionObjectType,\n  Subscription,\n  SortByType,\n  SubscriptionRequest,\n  Topic,\n  SubscriberPagedResults,\n} from '@sage-bionetworks/synapse-types'\nimport {\n  useMutation,\n  useQuery,\n  UseMutationOptions,\n  UseQueryOptions,\n  useQueryClient,\n} from 'react-query'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport { Direction } from '@sage-bionetworks/synapse-types'\nimport SynapseClient from '../../synapse-client'\nimport { useCallback } from 'react'\n\nexport function useGetSubscribers(\n  topic: Topic,\n  options?: UseQueryOptions<SubscriberPagedResults, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<SubscriberPagedResults, SynapseClientError>(\n    keyFactory.getSubscribersQueryKey(topic.objectId, topic.objectType),\n    () => SynapseClient.getSubscribers(accessToken, topic),\n    options,\n  )\n}\n\nexport function useGetSubscription(\n  objectId: string,\n  objectType: SubscriptionObjectType,\n  options?: UseQueryOptions<Subscription, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  const queryFn = async () => {\n    const subscriptionRequest: SubscriptionRequest = {\n      objectType: objectType,\n      idList: [objectId],\n      sortByType: SortByType.OBJECT_ID,\n      sortDirection: Direction.ASC,\n    }\n    const subscriptionList = await SynapseClient.postSubscriptionList(\n      accessToken,\n      subscriptionRequest,\n    )\n    return subscriptionList.results[0]\n  }\n  return useQuery<Subscription, SynapseClientError>(\n    keyFactory.getSubscriptionQueryKey(objectId, objectType),\n    queryFn,\n    options,\n  )\n}\n\nexport function usePostSubscription(\n  options?: UseMutationOptions<Subscription, SynapseClientError, Topic>,\n) {\n  const queryClient = useQueryClient()\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useMutation<Subscription, SynapseClientError, Topic>(\n    (topic: Topic) => SynapseClient.postSubscription(accessToken, topic),\n    {\n      ...options,\n      onSuccess: async (updatedSubscription, variables, ctx) => {\n        await queryClient.invalidateQueries(\n          keyFactory.getAllSubscriptionsQueryKey(),\n        )\n\n        await queryClient.invalidateQueries(\n          keyFactory.getSubscribersQueryKey(\n            variables.objectId,\n            variables.objectType,\n          ),\n        )\n        if (options?.onSuccess) {\n          await options.onSuccess(updatedSubscription, variables, ctx)\n        }\n      },\n    },\n  )\n}\n\nexport function useDeleteSubscription(\n  options?: UseMutationOptions<void, SynapseClientError, string>,\n) {\n  const queryClient = useQueryClient()\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useMutation<void, SynapseClientError, string>(\n    (subscriptionId: string) =>\n      SynapseClient.deleteSubscription(accessToken, subscriptionId),\n    {\n      ...options,\n      onSuccess: async (updatedSubscription, variables, ctx) => {\n        await queryClient.invalidateQueries(\n          keyFactory.getAllSubscriptionsQueryKey(),\n        )\n\n        await queryClient.invalidateQueries(\n          keyFactory.getAllSubscribersQueryKey(),\n        )\n        if (options?.onSuccess) {\n          await options.onSuccess(updatedSubscription, variables, ctx)\n        }\n      },\n    },\n  )\n}\n\nexport const useSubscription = (\n  objectId: string,\n  objectType: SubscriptionObjectType,\n) => {\n  const { data: subscription, isLoading: isLoadingGet } = useGetSubscription(\n    objectId,\n    objectType,\n  )\n  const { data: subscribers } = useGetSubscribers({ objectId, objectType })\n  const { mutate: postSubscription, isLoading: isLoadingPost } =\n    usePostSubscription()\n  const { mutate: deleteSubscription, isLoading: isLoadingDelete } =\n    useDeleteSubscription()\n\n  const isLoading: boolean = isLoadingGet || isLoadingPost || isLoadingDelete\n  const toggleSubscribed = useCallback(() => {\n    if (subscription) {\n      deleteSubscription(subscription.subscriptionId)\n    } else {\n      postSubscription({ objectId, objectType })\n    }\n  }, [deleteSubscription, objectId, objectType, postSubscription, subscription])\n\n  return { isLoading, subscription, toggleSubscribed, subscribers }\n}\n","import React from 'react'\nimport { ConfirmationDialog } from '../ConfirmationDialog/ConfirmationDialog'\nimport { useSubscription } from '../../synapse-queries/subscription/useSubscription'\nimport { SubscriptionObjectType } from '@sage-bionetworks/synapse-types'\nimport { Link } from '@mui/material'\nimport UserCard from '../UserCard/UserCard'\nimport { SMALL_USER_CARD } from '../../utils/SynapseConstants'\n\nexport type SubscribersModalProps = {\n  id: string\n  objectType: SubscriptionObjectType\n  showModal: boolean\n  handleModal: (a: boolean) => void\n}\n\nexport const SubscribersModal: React.FC<SubscribersModalProps> = ({\n  id,\n  objectType,\n  showModal,\n  handleModal,\n}) => {\n  const { subscribers } = useSubscription(id, objectType)\n\n  return (\n    <div className=\"SubscribersModal\">\n      {subscribers && subscribers.subscribers.length > 0 && (\n        <Link\n          onClick={() => handleModal(true)}\n        >{`Followers (${subscribers.subscribers.length})`}</Link>\n      )}\n      <ConfirmationDialog\n        open={showModal}\n        onCancel={() => handleModal(false)}\n        title=\"Followers\"\n        content={\n          subscribers &&\n          subscribers.subscribers.map(user => (\n            <UserCard\n              key={user}\n              ownerId={user}\n              size={SMALL_USER_CARD}\n              showCardOnHover={true}\n            />\n          ))\n        }\n        onConfirm={() => handleModal(false)}\n        confirmButtonText=\"Ok\"\n        hasCancelButton={false}\n      />\n    </div>\n  )\n}\n"],"names":["useGetSubscribers","topic","options","accessToken","keyFactory","useSynapseContext","useQuery","SynapseClient","useGetSubscription","objectId","objectType","queryFn","subscriptionRequest","SortByType","Direction","usePostSubscription","queryClient","useQueryClient","useMutation","updatedSubscription","variables","ctx","useDeleteSubscription","subscriptionId","useSubscription","subscription","isLoadingGet","subscribers","postSubscription","isLoadingPost","deleteSubscription","isLoadingDelete","isLoading","toggleSubscribed","useCallback","SubscribersModal","id","showModal","handleModal","jsxs","jsx","Link","ConfirmationDialog","user","UserCard","SMALL_USER_CARD"],"mappings":"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"}