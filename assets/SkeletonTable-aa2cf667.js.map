{"version":3,"file":"SkeletonTable-aa2cf667.js","sources":["../../src/components/Skeleton/SkeletonTable.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Skeleton from '@mui/material/Skeleton'\nimport { times } from 'lodash-es'\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min) + min)\n}\n\nexport type SkeletonTableProps = {\n  numRows?: number\n  numCols?: number\n  rowHeight?: string\n  className?: string\n  fullWidthCells?: boolean\n}\n\n/**\n * Skeleton component designed to mimic a table with an arbitrary number of rows and columns.\n *\n * Implemented using CSS grid.\n */\nexport const SkeletonTable: React.FC<SkeletonTableProps> = ({\n  numRows = 5,\n  numCols = 2,\n  rowHeight,\n  className,\n  fullWidthCells = false,\n}) => {\n  const [skeletons, setSkeletons] = useState<JSX.Element[]>([])\n\n  useEffect(() => {\n    const elements: JSX.Element[] = []\n    times(numRows * numCols, i => {\n      elements.push(\n        <React.Fragment key={i}>\n          <Skeleton\n            height={rowHeight}\n            width={fullWidthCells ? '100%' : `${getRandomInt(35, 75)}%`}\n          ></Skeleton>\n        </React.Fragment>,\n      )\n    })\n    setSkeletons(elements)\n  }, [numRows, numCols, rowHeight, fullWidthCells])\n\n  return (\n    <div\n      className={className}\n      style={{\n        display: 'grid',\n        gridTemplateColumns: `auto `.repeat(numCols),\n        gap: '8px',\n      }}\n    >\n      {skeletons}\n    </div>\n  )\n}\n"],"names":["getRandomInt","min","max","SkeletonTable","numRows","numCols","rowHeight","className","fullWidthCells","skeletons","setSkeletons","useState","useEffect","elements","times","i","jsx","React","Skeleton"],"mappings":"gLAIA,SAAAA,EAAAC,EAAAC,EAAA,CACE,OAAA,KAAA,MAAA,KAAA,OAAA,GAAAA,EAAAD,GAAAA,CAAA,CACF,CAeO,MAAAE,EAAA,CAAA,CAAqD,QAAAC,EAAA,EAChD,QAAAC,EAAA,EACA,UAAAC,EACV,UAAAC,EACA,eAAAC,EAAA,EAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAA,CAAA,EACAC,EAAAV,EAAAC,EAAAU,GAAA,CACEF,EAAA,KAASG,EAAAC,EAAA,SAAA,CAAA,SAAAD,EAELE,EAAC,CAAA,OAAAZ,EACS,MAAAE,EAAA,OAAA,GAAAR,EAAA,GAAA,EAAA,CAAA,GACgD,CAAA,CAAA,EAAAe,CAAA,CAE5D,CACF,CAAA,EAEFL,EAAAG,CAAA,CAAqB,EAAA,CAAAT,EAAAC,EAAAC,EAAAE,CAAA,CAAA,EAGvBQ,EACE,MAAC,CAAA,UAAAT,EACC,MAAA,CACO,QAAA,OACI,oBAAA,QAAA,OAAAF,CAAA,EACkC,IAAA,KACtC,EACP,SAAAI,CAEC,CAAA,CAGP;;"}