{"version":3,"file":"useGetEntityHeaders-93a0053c.js","sources":["../../src/synapse-queries/entity/useGetEntityHeaders.ts"],"sourcesContent":["import { useQuery, useQueryClient, UseQueryOptions } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport {\n  EntityHeader,\n  PaginatedResults,\n  Reference,\n  ReferenceList,\n} from '@sage-bionetworks/synapse-types'\n\nexport function useGetEntityHeaders(\n  references: ReferenceList,\n  options?: UseQueryOptions<PaginatedResults<EntityHeader>, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  const queryClient = useQueryClient()\n  const queryFn = async () => {\n    const response = await SynapseClient.getEntityHeaders(\n      references,\n      accessToken,\n    )\n\n    // Update the cache with the individual header, in case this was a batch\n    response.results.forEach(header => {\n      const requestedItem = references.find(ref => {\n        if (ref.targetVersionNumber) {\n          return (\n            ref.targetId === header.id &&\n            ref.targetVersionNumber === header.versionNumber\n          )\n        } else {\n          return ref.targetId === header.id\n        }\n      })\n      if (requestedItem) {\n        queryClient.setQueryData<PaginatedResults<EntityHeader>>(\n          keyFactory.getEntityHeadersQueryKey([requestedItem]),\n          { results: [header], totalNumberOfResults: 1 },\n        )\n\n        queryClient.setQueryData(\n          keyFactory.getEntityHeaderQueryKey(\n            requestedItem.targetId,\n            requestedItem.targetVersionNumber,\n          ),\n          header,\n        )\n        // If the request item had a version and was the latest version, we can also hydrate the cache\n        // for the 'unversioned' request\n        if (requestedItem.targetVersionNumber && header.isLatestVersion) {\n          const requestWithoutVersionNumber: Reference = { targetId: header.id }\n          queryClient.setQueryData<PaginatedResults<EntityHeader>>(\n            keyFactory.getEntityHeadersQueryKey([requestWithoutVersionNumber]),\n            { results: [header], totalNumberOfResults: 1 },\n          )\n\n          queryClient.setQueryData(\n            keyFactory.getEntityHeaderQueryKey(requestedItem.targetId),\n            header,\n          )\n        }\n      }\n    })\n\n    return response\n  }\n\n  return useQuery<PaginatedResults<EntityHeader>, SynapseClientError>(\n    keyFactory.getEntityHeadersQueryKey(references),\n    queryFn,\n    options,\n  )\n}\n\nexport function useGetEntityHeader(\n  entityId: string,\n  versionNumber?: number,\n  options?: UseQueryOptions<EntityHeader | undefined, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useQuery<EntityHeader | undefined, SynapseClientError>(\n    keyFactory.getEntityHeaderQueryKey(entityId, versionNumber),\n    () => SynapseClient.getEntityHeader(entityId, versionNumber, accessToken),\n    options,\n  )\n}\n"],"names":["useGetEntityHeaders","references","options","accessToken","keyFactory","useSynapseContext","queryClient","useQueryClient","queryFn","response","SynapseClient","header","requestedItem","ref","requestWithoutVersionNumber","useQuery","useGetEntityHeader","entityId","versionNumber"],"mappings":"+IAWgB,SAAAA,EACdC,EACAC,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAChDC,EAAcC,IACdC,EAAU,SAAY,CACpB,MAAAC,EAAW,MAAMC,EAAc,iBACnCT,EACAE,CAAA,EAIO,OAAAM,EAAA,QAAQ,QAAkBE,GAAA,CAC3B,MAAAC,EAAgBX,EAAW,KAAYY,GACvCA,EAAI,oBAEJA,EAAI,WAAaF,EAAO,IACxBE,EAAI,sBAAwBF,EAAO,cAG9BE,EAAI,WAAaF,EAAO,EAElC,EACD,GAAIC,IACUN,EAAA,aACVF,EAAW,yBAAyB,CAACQ,CAAa,CAAC,EACnD,CAAE,QAAS,CAACD,CAAM,EAAG,qBAAsB,CAAE,CAAA,EAGnCL,EAAA,aACVF,EAAW,wBACTQ,EAAc,SACdA,EAAc,mBAChB,EACAD,CAAA,EAIEC,EAAc,qBAAuBD,EAAO,iBAAiB,CAC/D,MAAMG,EAAyC,CAAE,SAAUH,EAAO,EAAG,EACzDL,EAAA,aACVF,EAAW,yBAAyB,CAACU,CAA2B,CAAC,EACjE,CAAE,QAAS,CAACH,CAAM,EAAG,qBAAsB,CAAE,CAAA,EAGnCL,EAAA,aACVF,EAAW,wBAAwBQ,EAAc,QAAQ,EACzDD,CAAA,CAEJ,CACF,CACD,EAEMF,CAAA,EAGF,OAAAM,EACLX,EAAW,yBAAyBH,CAAU,EAC9CO,EACAN,CAAA,CAEJ,CAEgB,SAAAc,EACdC,EACAC,EACAhB,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAE/C,OAAAU,EACLX,EAAW,wBAAwBa,EAAUC,CAAa,EAC1D,IAAMR,EAAc,gBAAgBO,EAAUC,EAAef,CAAW,EACxED,CAAA,CAEJ"}