import{j as l}from"./jsx-runtime-B4FpmzGn.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-CAfIMXgj.js";import{aH as S,M as a}from"./useFiles-CdEuNTln.js";import"./OrientationBanner-BVBRgBWG.js";import"./index-DM3lAj0n.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-DvoKTELr.js";import{S as E}from"./SynapseFormSubmissionGrid-AXA67oXC.js";import"./mockSchema-DgPPR9sK.js";import"./mockFileEntity-Bg2aEyi6.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BKz4kt-H.js";import"./mockTeam-CdRPsVFt.js";import"./SynapseConstants-D_-Mglhc.js";import"./uniqueId-O3FEDdmM.js";import"./toString-CM9QmtIa.js";import"./isObjectLike-DH-PBdkJ.js";import"./iframe-CRfNb6wr.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CvDyCsQQ.js";import"./times-l_nnj-19.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-G-_p9SXu.js";import"./asyncJobHandlers-ChrjPs-l.js";import"./BasicMockedCrudService-zvUArNoX.js";import"./cloneDeep-DlEqzMhR.js";import"./_Uint8Array-3HIv5n6-.js";import"./_initCloneObject-UaoA3kHC.js";import"./_getTag-CLHDtv5D.js";import"./isEqual-C9VzGFfO.js";import"./_baseIsEqual-gX59yvAN.js";import"./mockAnnotationColumns-Do3h4Wzl.js";import"./tableQueryHandlers-CNiTswks.js";import"./omit-Tu2aAqxx.js";import"./_baseGet-DHZSddb_.js";import"./isNil-C1eJch1d.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-qtOmgSgf.js";import"./_baseFlatten-BLfo9sYK.js";import"./pick-B4Cu-9v-.js";import"./_baseSet-BpMSJ04B.js";import"./hasIn-BWnhTsNo.js";import"./accessRequirementAclHandlers-CQ_shQOL.js";import"./mockAccessRequirementAcls-CcFcL2l4.js";import"./mockAccessRequirements-CgkwX8Jz.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-C8igNR_y.js";import"./wikiHandlers-LVr_FxPq.js";import"./mockWikiPageKey-BYOIV86b.js";import"./teamHandlers-BKT8Ojqc.js";import"./dataAccessRequestHandlers-Cq4-yIHF.js";import"./MockResearchProject-CnrY-lc0.js";import"./mock_discussion-BqCrQl1B.js";import"./fakerUtils-4ATYNlsk.js";import"./index-BLn3DKtz.js";import"./mockTableEntity-XxwJPRrz.js";import"./mockFileEntityACLVariants-BQeWubwr.js";import"./entityHandlers-DiIXZCZl.js";import"./mockEntity-Cvw1T7Or.js";import"./mockEvaluationQueue-Cf9U2lJL.js";import"./featureFlagHandlers-B_TKy9o_.js";import"./fileHandlers-nVd1XeWw.js";import"./personalAccessTokenHandlers-COHbgnfs.js";import"./researchProjectHandlers-CbutcU1T.js";import"./resetTwoFactorAuthHandlers-ZuLUmcXb.js";import"./userProfileHandlers-B17ldxgu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CNkLMHpL.js";import"./FullWidthAlert-D28Lfxc0.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BQ8iX0zs.js";import"./createTheme-osPrpjgg.js";import"./resolveComponentProps-D_2DfIoC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BHBs7cXw.js";import"./createSvgIcon-BrQkkf0p.js";import"./DefaultPropsProvider-CDZ5UpDb.js";import"./Close-pdN-BmGJ.js";import"./IconButton-TpVC3epP.js";import"./ButtonBase-DCaCj3sn.js";import"./useTimeout-BCy9KhqP.js";import"./useIsFocusVisible-B5ADwpsA.js";import"./useEventCallback-CiFSq2a8.js";import"./Paper-GW9W9AF7.js";import"./Stack-CX9jAOXR.js";import"./getThemeProps-B8GeAVWs.js";import"./useTheme-B-hk7JXy.js";import"./Box-DjTGEn4B.js";import"./AlertTitle-CiwJyD7U.js";import"./Typography-PZ3cAU7R.js";import"./useTheme-BRzUHJhE.js";import"./Grow-Yf-W7JhX.js";import"./index-BRH3Pwrf.js";import"./utils-C3bYj40K.js";import"./ClickAwayListener-C6ZzDciG.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-D2PubBmm.js";import"./index-S6Byxz46.js";import"./useControlled-Ckobgvpz.js";import"./useId-BEi9DTfm.js";import"./Popper-Cz_FEOFb.js";import"./Button-C-8yzvZD.js";import"./useQuery-CJozhmIc.js";import"./utils-AjNs7ZhI.js";import"./Link-BZU5QgnK.js";import"./Collapse-DBRBfWMU.js";import"./tinycolor-Begke6kS.js";import"./Fade-Cu1REOp1.js";import"./Skeleton-Badjms_1.js";import"./inputBaseClasses-DOFWpaeq.js";import"./calculateFriendlyFileSize-gtBJ7iNS.js";import"./CheckCircleTwoTone-Dj4CzCKD.js";import"./InfoTwoTone-BMk8VF8H.js";import"./mutation-BbpDoA-k.js";import"./dayjs.min-Y7vEwyx-.js";import"./chunk-AYJ5UCUI-CCzS9PSe.js";import"./index-JdWBSvRH.js";import"./react-BLybFQ8v.js";import"./util-DiFOny7j.js";import"./WideButton-DRfSzo4-.js";import"./DeleteTwoTone-D6bj7D8W.js";import"./createSvgIcon-CWl48qXx.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Blm9oRKb.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D_ylCCcG.js";import"./DialogBase-zpmO9mJ8.js";import"./Close-BQDtB90V.js";import"./HelpPopover-CLMdWTQx.js";import"./MarkdownPopover-BOEDheie.js";import"./LightTooltip-CJ-Mb4pu.js";import"./MarkdownSynapse-B6OOnck0.js";import"./SkeletonButton-DqOkdRt0.js";import"./SkeletonInlineBlock-lqbTGdIu.js";import"./SkeletonTable-CAhG91s_.js";import"./SkeletonParagraph-BOdonX1Q.js";import"./HelpOutlineTwoTone-CHHvslGz.js";import"./DialogTitle-jNVEn0nq.js";import"./DialogContent-CXzUczd6.js";import"./Dialog-D77pJrzx.js";import"./Modal-CGYoTYX0.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CaM0DCvy.js";import"./WarningDialog-C5AgoibF.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
