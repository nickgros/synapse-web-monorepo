{"version":3,"file":"ResearchProjectForm-2f3f3f47.js","sources":["../../src/components/AccessRequirementList/ManagedACTAccessRequirementRequestFlow/ResearchProjectForm.tsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { ManagedACTAccessRequirement } from '@sage-bionetworks/synapse-types'\nimport { AlertProps } from './DataAccessRequestAccessorsFilesForm'\nimport {\n  Alert,\n  Box,\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Stack,\n  Typography,\n} from '@mui/material'\nimport IconSvg from '../../IconSvg/IconSvg'\nimport {\n  useGetResearchProject,\n  useUpdateResearchProject,\n} from '../../../synapse-queries'\nimport TextField from '../../TextField/TextField'\nimport { ResearchProject } from '@sage-bionetworks/synapse-types'\n\nexport type ResearchProjectFormProps = {\n  /* The access requirement to which the research project refers */\n  managedACTAccessRequirement: ManagedACTAccessRequirement\n  onSave?: (researchProject: ResearchProject) => void\n  onHide?: () => void\n}\n\n/**\n * Step 1 of the Data Access Request/Renewal flow prompts the user to provide information about their ResearchProject.\n */\nexport default function ResearchProjectForm(props: ResearchProjectFormProps) {\n  const { onSave, managedACTAccessRequirement, onHide } = props\n  const [projectLead, setProjectLead] = useState<string>('')\n  const [institution, setInstitution] = useState<string>('')\n  const [intendedDataUseStatement, setIntendedDataUseStatement] = useState<\n    string | undefined\n  >(managedACTAccessRequirement.isIDURequired ? '' : undefined)\n  const [alert, setAlert] = useState<AlertProps | undefined>()\n\n  const { data: existingResearchProject, isLoading: isLoadingInitialData } =\n    useGetResearchProject(String(managedACTAccessRequirement.id), {\n      // Infinite staleTime ensures this won't be refetched unless explicitly invalidated by the mutation\n      staleTime: Infinity,\n      onSuccess: data => {\n        if (data?.projectLead) {\n          setProjectLead(data?.projectLead)\n        }\n        if (data?.institution) {\n          setInstitution(data?.institution)\n        }\n        if (data?.intendedDataUseStatement) {\n          setIntendedDataUseStatement(data?.intendedDataUseStatement)\n        }\n      },\n      onError: e => {\n        console.log(\n          'RequestDataAccessStep1: Error getting research project data: ',\n          e,\n        )\n      },\n    })\n\n  const { mutate, isLoading: isLoadingUpdate } = useUpdateResearchProject({\n    onSuccess: data => {\n      if (onSave) {\n        onSave(data)\n      }\n    },\n    onError: e => {\n      console.log(\n        'RequestDataAccessStep1: Error updating research project data: ',\n        e,\n      )\n      setAlert({\n        key: 'error',\n        message: getErrorMessage(e.reason),\n      })\n    },\n  })\n\n  const isLoading = isLoadingInitialData || isLoadingUpdate\n\n  const getErrorMessage = (reason: string = '') => {\n    return (\n      <>\n        <strong>Unable to update research project data.</strong>\n        <br />\n        {reason}\n      </>\n    )\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault()\n    mutate({\n      ...existingResearchProject,\n      accessRequirementId: String(managedACTAccessRequirement.id),\n      institution: institution,\n      projectLead: projectLead,\n      intendedDataUseStatement: intendedDataUseStatement,\n    })\n  }\n\n  return (\n    <>\n      <DialogTitle>\n        <Stack direction=\"row\" alignItems={'center'} gap={'5px'}>\n          Request Access\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton onClick={onHide}>\n            <IconSvg icon={'close'} wrap={false} sx={{ color: 'grey.700' }} />\n          </IconButton>\n        </Stack>\n      </DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleSubmit}>\n          <Typography variant={'body1'}>\n            Please tell us about your project.\n          </Typography>\n          <TextField\n            id={'project-lead'}\n            label={'Project Lead'}\n            disabled={isLoading}\n            type=\"text\"\n            value={projectLead}\n            required\n            onChange={e => setProjectLead(e.target.value)}\n          />\n          <TextField\n            id={'institution'}\n            label={'Institution'}\n            type=\"text\"\n            disabled={isLoading}\n            value={institution}\n            required\n            onChange={e => setInstitution(e.target.value)}\n          />\n\n          {managedACTAccessRequirement.isIDURequired && (\n            <TextField\n              id={'data-use'}\n              label={\n                <>\n                  Intended Data Use Statement -\n                  {managedACTAccessRequirement.isIDUPublic && (\n                    <i id={'idu-visible'}>this will be visible to the public</i>\n                  )}\n                </>\n              }\n              required\n              multiline\n              rows={10}\n              disabled={isLoading}\n              value={intendedDataUseStatement}\n              onChange={e => setIntendedDataUseStatement(e.target.value)}\n            />\n          )}\n          {\n            /* Alert message */\n            alert && <Alert severity={alert.key}>{alert.message}</Alert>\n          }\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" disabled={isLoading} onClick={onHide}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={isLoading}\n          onClick={handleSubmit}\n        >\n          {isLoadingUpdate ? 'Saving...' : 'Save changes'}\n        </Button>\n      </DialogActions>\n    </>\n  )\n}\n"],"names":["ResearchProjectForm","props","onSave","managedACTAccessRequirement","onHide","projectLead","setProjectLead","useState","institution","setInstitution","intendedDataUseStatement","setIntendedDataUseStatement","alert","setAlert","existingResearchProject","isLoadingInitialData","useGetResearchProject","data","mutate","isLoadingUpdate","useUpdateResearchProject","getErrorMessage","isLoading","reason","jsxs","Fragment","jsx","handleSubmit","DialogTitle","Stack","Box","IconButton","IconSvg","DialogContent","Typography","TextField","Alert","DialogActions","Button"],"mappings":"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"}