{"version":3,"file":"IconList-afa9b46d.js","sources":["../../src/components/IconList.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport IconSvg, { IconSvgProps } from './IconSvg/IconSvg'\nimport { merge } from 'lodash-es'\n\ntype IconConfigs = {\n  [index: string]: IconSvgProps // if the icon option has the \"label\" set, it will show tooltip in IconSvg\n}\n\nexport type IconListProps = {\n  iconConfigs: IconConfigs\n  iconNames: string[]\n  commonIconProps?: Omit<IconSvgProps, 'icon'>\n  useTheme?: boolean\n  useBackground?: boolean\n}\n\nconst defaultCommonIconProps: IconListProps['commonIconProps'] = {\n  sx: { fontSize: '24px' },\n}\n\nconst IconList: React.FunctionComponent<IconListProps> = props => {\n  const {\n    iconConfigs,\n    iconNames,\n    commonIconProps = defaultCommonIconProps,\n    useTheme,\n    useBackground,\n  } = props\n  let noMatch: boolean = false\n  const css = useTheme ? 'icon-list themed' : 'icon-list'\n  const componentCss = useBackground ? `${css} bg-circle` : css\n\n  const mergedIconConfigs: IconConfigs = useMemo(() => {\n    const mergedIconConfigs: IconConfigs = {}\n    for (const [key, iconProps] of Object.entries(iconConfigs)) {\n      mergedIconConfigs[key] = merge({}, commonIconProps, iconProps)\n    }\n    return mergedIconConfigs\n  }, [iconConfigs, commonIconProps])\n\n  const buildIconList = () => {\n    const unique = Array.from(new Set(iconNames))\n    return unique.map((el: any) => {\n      const iconConfig = mergedIconConfigs[el]\n      // if this data type value doesn't have a matching icon, we use the \"other\" icon\n      if (!iconConfig) {\n        noMatch = true\n        return\n      } else {\n        return <IconSvg key={el} {...iconConfig} />\n      }\n    })\n  }\n\n  return (\n    <span className={componentCss}>\n      {buildIconList()}\n      {noMatch && mergedIconConfigs['other'] ? (\n        <IconSvg {...mergedIconConfigs['other']} />\n      ) : (\n        <></>\n      )}\n    </span>\n  )\n}\n\nexport default IconList\n"],"names":["defaultCommonIconProps","IconList","props","iconConfigs","iconNames","commonIconProps","useTheme","useBackground","noMatch","css","componentCss","mergedIconConfigs","useMemo","mergedIconConfigs2","key","iconProps","merge","jsxs","el","iconConfig","jsx","IconSvg","Fragment"],"mappings":"sLAgBA,MAAAA,EAAA,CAAiE,GAAA,CAAA,SAAA,MAAA,CAEjE,EAEAC,EAAAC,GAAA,CACE,KAAA,CAAM,YAAAC,EACJ,UAAAC,EACA,gBAAAC,EAAAL,EACkB,SAAAM,EAClB,cAAAC,CACA,EAAAL,EAEF,IAAAM,EAAA,GACA,MAAAC,EAAAH,EAAA,mBAAA,YACAI,EAAAH,EAAA,GAAAE,CAAA,aAAAA,EAEAE,EAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,CAAA,EACA,SAAA,CAAAC,EAAAC,CAAA,IAAA,OAAA,QAAAZ,CAAA,EACEU,EAAAC,CAAA,EAAAE,EAAA,CAAA,EAAAX,EAAAU,CAAA,EAEF,OAAAF,CAAO,EAAA,CAAAV,EAAAE,CAAA,CAAA,EAiBT,OAAAY,EAAA,OAAA,CAAA,UAAAP,EAAA,SAAA,EAdA,IACE,MAAA,KAAA,IAAA,IAAAN,CAAA,CAAA,EACA,IAAAc,GAAA,CACE,MAAAC,EAAAR,EAAAO,CAAA,EAEA,GAAAC,EAIE,OAAAC,EAAAC,EAAA,CAAA,GAAAF,CAAA,EAAAD,CAAA,EAHAV,EAAA,EAIF,CAAA,GAMC,EAAcA,GAAAG,EAAA,MAAAS,EAAAC,EAAA,CAAA,GAAAV,EAAA,KAAA,CAAA,EAAAS,EAAAE,EAAA,CAAA,CAAA,CAIX,CAAA,CAAA,CAIV"}