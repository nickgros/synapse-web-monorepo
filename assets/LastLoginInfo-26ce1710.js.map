{"version":3,"file":"LastLoginInfo-26ce1710.js","sources":["../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useSyncedRef/index.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/util/const.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/util/misc.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useFirstMountState/index.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useIsomorphicLayoutEffect/index.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useUpdateEffect/index.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/util/resolveHookState.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useStorageValue/index.js","../../../../node_modules/.pnpm/@react-hookz+web@23.1.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-hookz/web/esm/useLocalStorageValue/index.js","../../src/components/Authentication/LoginMethod.ts","../../src/components/Authentication/LastLoginInfo.tsx"],"sourcesContent":["import { useMemo, useRef } from 'react';\n/**\n * Like `useRef`, but it returns immutable ref that contains actual value.\n *\n * @param value\n */\nexport function useSyncedRef(value) {\n    const ref = useRef(value);\n    ref.current = value;\n    return useMemo(() => Object.freeze({\n        get current() {\n            return ref.current;\n        },\n    }), []);\n}\n","export const noop = () => { };\nexport const isBrowser = typeof window !== 'undefined' &&\n    typeof navigator !== 'undefined' &&\n    typeof document !== 'undefined';\n/**\n * You should only be reaching for this function when you're attempting to prevent multiple\n * redefinitions of the same function. In-place strict equality checks are more performant.\n */\nexport const isStrictEqual = (prev, next) => prev === next;\nexport const truthyAndArrayPredicate = (conditions) => conditions.every(Boolean);\nexport const truthyOrArrayPredicate = (conditions) => conditions.some(Boolean);\n","export function on(obj, ...args) {\n    obj?.addEventListener?.(...args);\n}\nexport function off(obj, ...args) {\n    obj?.removeEventListener?.(...args);\n}\nexport const hasOwnProperty = (obj, property) => Object.prototype.hasOwnProperty.call(obj, property);\nexport const yieldTrue = () => true;\nexport const yieldFalse = () => false;\nexport const basicDepsComparator = (d1, d2) => {\n    if (d1 === d2)\n        return true;\n    if (d1.length !== d2.length)\n        return false;\n    for (let i = 0; i < d1.length; i++) {\n        if (d1[i] !== d2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { useEffect, useRef } from 'react';\n/**\n * Returns a boolean that is `true` only on first render.\n */\nexport function useFirstMountState() {\n    const isFirstMount = useRef(true);\n    useEffect(() => {\n        isFirstMount.current = false;\n    }, []);\n    return isFirstMount.current;\n}\n","import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from \"../util/const.js\";\n/**\n * Alias for `useLayoutEffect` in browser, but for `useEffect` at server side. Helps to avoid\n * warning shown during SSR.\n */\nexport const useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n","import { useEffect } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { noop } from \"../util/const.js\";\n/**\n * Effect hook that ignores the first render (not invoked on mount).\n *\n * @param effect Effector to run on updates\n * @param deps Dependencies list, as for `useEffect` hook\n */\nexport function useUpdateEffect(effect, deps) {\n    const isFirstMount = useFirstMountState();\n    useEffect(isFirstMount ? noop : effect, deps);\n}\n","export function resolveHookState(nextState, prevState) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (typeof nextState === 'function')\n        return nextState(prevState);\n    return nextState;\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useFirstMountState } from '../useFirstMountState';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useSyncedRef } from '../useSyncedRef';\nimport { useUpdateEffect } from '../useUpdateEffect';\nimport { isBrowser } from \"../util/const.js\";\nimport { off, on } from \"../util/misc.js\";\nimport { resolveHookState } from \"../util/resolveHookState.js\";\nconst storageListeners = new Map();\nconst invokeStorageKeyListeners = (s, key, value, skipListener) => {\n    storageListeners\n        .get(s)\n        ?.get(key)\n        ?.forEach((listener) => {\n        if (listener !== skipListener) {\n            listener(value);\n        }\n    });\n};\nconst storageEventHandler = (evt) => {\n    if (evt.storageArea && evt.key && evt.newValue) {\n        invokeStorageKeyListeners(evt.storageArea, evt.key, evt.newValue);\n    }\n};\nconst addStorageListener = (s, key, listener) => {\n    // In case of first listener added within browser environment we\n    // want to bind single storage event handler\n    if (isBrowser && storageListeners.size === 0) {\n        on(window, 'storage', storageEventHandler, { passive: true });\n    }\n    let keys = storageListeners.get(s);\n    if (!keys) {\n        keys = new Map();\n        storageListeners.set(s, keys);\n    }\n    let listeners = keys.get(key);\n    if (!listeners) {\n        listeners = new Set();\n        keys.set(key, listeners);\n    }\n    listeners.add(listener);\n};\nconst removeStorageListener = (s, key, listener) => {\n    const keys = storageListeners.get(s);\n    /* istanbul ignore next */\n    if (!keys) {\n        return;\n    }\n    const listeners = keys.get(key);\n    /* istanbul ignore next */\n    if (!listeners) {\n        return;\n    }\n    listeners.delete(listener);\n    if (!listeners.size) {\n        keys.delete(key);\n    }\n    if (!keys.size) {\n        storageListeners.delete(s);\n    }\n    // Unbind storage event handler in browser environment in case there is no\n    // storage keys listeners left\n    if (isBrowser && !storageListeners.size) {\n        off(window, 'storage', storageEventHandler);\n    }\n};\nconst DEFAULT_OPTIONS = {\n    defaultValue: null,\n    initializeWithValue: true,\n};\nexport function useStorageValue(storage, key, options) {\n    const optionsRef = useSyncedRef({ ...DEFAULT_OPTIONS, ...options });\n    const parse = (str, fallback) => {\n        const parseFunction = optionsRef.current.parse ?? defaultParse;\n        return parseFunction(str, fallback);\n    };\n    const stringify = (data) => {\n        const stringifyFunction = optionsRef.current.stringify ?? defaultStringify;\n        return stringifyFunction(data);\n    };\n    const storageActions = useSyncedRef({\n        fetchRaw: () => storage.getItem(key),\n        fetch: () => parse(storageActions.current.fetchRaw(), optionsRef.current.defaultValue),\n        remove() {\n            storage.removeItem(key);\n        },\n        store(val) {\n            const stringified = stringify(val);\n            if (stringified !== null) {\n                storage.setItem(key, stringified);\n            }\n            return stringified;\n        },\n    });\n    const isFirstMount = useFirstMountState();\n    const [state, setState] = useState(optionsRef.current?.initializeWithValue && isFirstMount\n        ? storageActions.current.fetch()\n        : undefined);\n    const stateRef = useSyncedRef(state);\n    const stateActions = useSyncedRef({\n        fetch() {\n            setState(storageActions.current.fetch());\n        },\n        setRawVal(val) {\n            setState(parse(val, optionsRef.current.defaultValue));\n        },\n    });\n    useUpdateEffect(() => {\n        stateActions.current.fetch();\n    }, [key]);\n    useEffect(() => {\n        if (!optionsRef.current.initializeWithValue) {\n            stateActions.current.fetch();\n        }\n    }, []);\n    useIsomorphicLayoutEffect(() => {\n        const handler = stateActions.current.setRawVal;\n        addStorageListener(storage, key, handler);\n        return () => {\n            removeStorageListener(storage, key, handler);\n        };\n    }, [storage, key]);\n    const actions = useSyncedRef({\n        set(val) {\n            if (!isBrowser)\n                return;\n            const s = resolveHookState(val, stateRef.current);\n            const storeVal = storageActions.current.store(s);\n            if (storeVal !== null) {\n                invokeStorageKeyListeners(storage, key, storeVal);\n            }\n        },\n        delete() {\n            if (!isBrowser)\n                return;\n            storageActions.current.remove();\n            invokeStorageKeyListeners(storage, key, null);\n        },\n        fetch() {\n            if (!isBrowser)\n                return;\n            invokeStorageKeyListeners(storage, key, storageActions.current.fetchRaw());\n        },\n    });\n    // Make actions static so developers can pass methods further\n    const staticActions = useMemo(() => ({\n        set: ((v) => {\n            actions.current.set(v);\n        }),\n        remove() {\n            actions.current.delete();\n        },\n        fetch() {\n            actions.current.fetch();\n        },\n    }), []);\n    return useMemo(() => ({\n        value: state,\n        ...staticActions,\n    }), [state]);\n}\nconst defaultStringify = (data) => {\n    if (data === null) {\n        /* istanbul ignore next */\n        if (process.env.NODE_ENV === 'development') {\n            console.warn(`'null' is not a valid data for useStorageValue hook, this operation will take no effect`);\n        }\n        return null;\n    }\n    try {\n        return JSON.stringify(data);\n    }\n    catch (error) /* istanbul ignore next */ {\n        // I have absolutely no idea how to cover this, since modern JSON.stringify does not throw on\n        // cyclic references anymore\n        console.warn(error);\n        return null;\n    }\n};\nconst defaultParse = (str, fallback) => {\n    if (str === null)\n        return fallback;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return JSON.parse(str);\n    }\n    catch (error) {\n        console.warn(error);\n        return fallback;\n    }\n};\n","import { useStorageValue, } from '../useStorageValue';\nimport { isBrowser, noop } from \"../util/const.js\";\nlet IS_LOCAL_STORAGE_AVAILABLE;\ntry {\n    IS_LOCAL_STORAGE_AVAILABLE = isBrowser && Boolean(window.localStorage);\n}\ncatch {\n    // No need to test this flag leads to noop behaviour\n    /* istanbul ignore next */\n    IS_LOCAL_STORAGE_AVAILABLE = false;\n}\n/**\n * Manages a single localStorage key.\n */\nexport const useLocalStorageValue = IS_LOCAL_STORAGE_AVAILABLE\n    ? (key, options) => {\n        return useStorageValue(localStorage, key, options);\n    }\n    : (_key, _options) => {\n        if (isBrowser && process.env.NODE_ENV === 'development') {\n            console.warn('LocalStorage is not available in this environment');\n        }\n        return { value: undefined, set: noop, remove: noop, fetch: noop };\n    };\n","import {\n  LOGIN_METHOD_EMAIL,\n  LOGIN_METHOD_OAUTH2_GOOGLE,\n  LOGIN_METHOD_OAUTH2_ORCID,\n} from '../../utils/SynapseConstants'\n\nexport const LoginMethods = [\n  LOGIN_METHOD_OAUTH2_GOOGLE,\n  LOGIN_METHOD_OAUTH2_ORCID,\n  LOGIN_METHOD_EMAIL,\n] as const\nexport type LoginMethod = (typeof LoginMethods)[number]\n\nexport function getLoginMethodFriendlyName(loginMethod: LoginMethod) {\n  switch (loginMethod) {\n    case LOGIN_METHOD_OAUTH2_GOOGLE:\n      return 'Google'\n    case LOGIN_METHOD_OAUTH2_ORCID:\n      return 'ORCID'\n    case LOGIN_METHOD_EMAIL:\n      return 'your email'\n    default:\n      return 'unknown login method'\n  }\n}\n","import { InfoTwoTone } from '@mui/icons-material'\nimport { Box, Link, Tooltip, Typography } from '@mui/material'\nimport { useLocalStorageValue } from '@react-hookz/web'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport {\n  CURRENT_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n  LAST_LOGIN_DATE_LOCALSTORAGE_KEY,\n  LAST_LOGIN_METHOD_LOCALSTORAGE_KEY,\n  LAST_LOGIN_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n  LAST_LOGIN_SOURCEAPP_URL_LOCALSTORAGE_KEY,\n} from '../../utils/SynapseConstants'\nimport { formatDate } from '../../utils/functions/DateFormatter'\nimport { LoginMethod, getLoginMethodFriendlyName } from './LoginMethod'\n\nexport type LastLoginInfoProps = {\n  currentSourceAppName: string | undefined\n  lastLoginMethod: LoginMethod | undefined\n  lastLoginSourceAppName: string | undefined\n  lastLoginSourceAppURL: string | undefined\n  lastLoginDate: string | undefined\n  display: 'sentence' | 'box'\n}\n\nexport function useLastLoginInfoState() {\n  return {\n    currentSourceAppNameState: useLocalStorageValue<string>(\n      CURRENT_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n    ),\n    lastLoginMethodState: useLocalStorageValue<LoginMethod>(\n      LAST_LOGIN_METHOD_LOCALSTORAGE_KEY,\n    ),\n    lastLoginSourceAppNameState: useLocalStorageValue<string>(\n      LAST_LOGIN_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n    ),\n    lastLoginSourceAppURLState: useLocalStorageValue<string>(\n      LAST_LOGIN_SOURCEAPP_URL_LOCALSTORAGE_KEY,\n    ),\n    lastLoginDateState: useLocalStorageValue<string>(\n      LAST_LOGIN_DATE_LOCALSTORAGE_KEY,\n    ),\n  }\n}\n\nexport function useLastLoginInfo() {\n  const states = useLastLoginInfoState()\n  return {\n    currentSourceAppName: states.currentSourceAppNameState.value,\n    lastLoginMethod: states.lastLoginMethodState.value,\n    lastLoginSourceAppName: states.lastLoginSourceAppNameState.value,\n    lastLoginSourceAppURL: states.lastLoginSourceAppURLState.value,\n    lastLoginDate: states.lastLoginDateState.value,\n  }\n}\n\nexport function clearLastLoginInfo() {\n  const keys = [\n    CURRENT_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n    LAST_LOGIN_METHOD_LOCALSTORAGE_KEY,\n    LAST_LOGIN_SOURCEAPP_NAME_LOCALSTORAGE_KEY,\n    LAST_LOGIN_SOURCEAPP_URL_LOCALSTORAGE_KEY,\n    LAST_LOGIN_DATE_LOCALSTORAGE_KEY,\n  ]\n  keys.forEach(key => localStorage.removeItem(key))\n}\n\nfunction getSourceAppIndefiniteArticle(val: string) {\n  return val.match(/^[aeiou]/i) ? 'an' : 'a'\n}\n\nfunction getSourceAppDefiniteArticle(val: string) {\n  return val.match(' Portal$') ? 'the ' : ''\n}\n\nexport default function LastLoginInfo(props: LastLoginInfoProps) {\n  const {\n    currentSourceAppName,\n    lastLoginMethod,\n    lastLoginSourceAppName,\n    lastLoginSourceAppURL,\n    lastLoginDate,\n    display,\n  } = props\n\n  const showLastLoginInfo =\n    currentSourceAppName &&\n    lastLoginMethod &&\n    lastLoginSourceAppName &&\n    lastLoginSourceAppURL &&\n    lastLoginDate &&\n    currentSourceAppName !== lastLoginSourceAppName\n\n  if (!showLastLoginInfo) {\n    return null\n  }\n\n  const currentSourceAppIndefiniteArticle =\n    getSourceAppIndefiniteArticle(currentSourceAppName)\n  const currentSourceAppDefiniteArticle =\n    getSourceAppDefiniteArticle(currentSourceAppName)\n  const lastLoginSourceAppDefiniteArticle = getSourceAppDefiniteArticle(\n    lastLoginSourceAppName,\n  )\n\n  const title = `You may already have ${currentSourceAppIndefiniteArticle} ${currentSourceAppName} account`\n  const accountLastUsed = `Account last used on ${formatDate(\n    dayjs(lastLoginDate),\n    'MMMM D, YYYY',\n  )}`\n\n  const tooltipText = (\n    <>\n      <Typography variant=\"smallText2\" mb={1}>\n        {title}\n      </Typography>\n      <Typography variant=\"smallText1\" mb={1} color=\"white\">\n        {`This computer was used to sign in to an account on ${lastLoginSourceAppDefiniteArticle}${lastLoginSourceAppName}. \n          You can use the same account to sign in to ${currentSourceAppDefiniteArticle}${currentSourceAppName}.`}\n      </Typography>\n      <Typography variant=\"smallText1\" color=\"white\">\n        {accountLastUsed}\n      </Typography>\n    </>\n  )\n\n  const boxText = (\n    <>\n      <Typography\n        variant=\"smallText2\"\n        mb={1}\n        sx={{ color: 'grey.900', fontSize: '12px' }}\n      >\n        {title}\n      </Typography>\n      <Typography\n        variant=\"smallText1\"\n        mb={1}\n        sx={{ color: 'grey.900', fontSize: '12px' }}\n      >\n        It looks like you already have an account, last used on{' '}\n        {lastLoginSourceAppDefiniteArticle}\n        <Link href={lastLoginSourceAppURL}>{lastLoginSourceAppName}</Link>.{' '}\n        {`You can use this account to sign in via ${getLoginMethodFriendlyName(\n          lastLoginMethod,\n        )}.`}\n      </Typography>\n      <Typography\n        variant=\"smallText1\"\n        sx={{ color: 'grey.700', fontSize: '10px' }}\n      >\n        {accountLastUsed}\n      </Typography>\n    </>\n  )\n\n  return (\n    <>\n      {display === 'sentence' ? (\n        <Typography\n          variant=\"smallText1\"\n          sx={{ color: 'grey.700', textTransform: 'none' }}\n        >\n          You may be able to use an existing account\n          <Tooltip\n            title={tooltipText}\n            placement={'top'}\n            componentsProps={{\n              tooltip: {\n                sx: {\n                  bgcolor: '#63676C',\n                  '& .MuiTooltip-arrow': {\n                    color: '#63676C',\n                  },\n                },\n              },\n            }}\n          >\n            <InfoTwoTone\n              sx={{\n                color: 'grey.700',\n                width: '12px',\n                height: '12px',\n                ml: '4px',\n                verticalAlign: 'middle',\n              }}\n            />\n          </Tooltip>\n        </Typography>\n      ) : (\n        <Box sx={{ backgroundColor: 'grey.100', p: '10px' }}>{boxText}</Box>\n      )}\n    </>\n  )\n}\n"],"names":["useSyncedRef","value","ref","useRef","useMemo","noop","isBrowser","on","obj","args","_a","off","useFirstMountState","isFirstMount","useEffect","useIsomorphicLayoutEffect","useLayoutEffect","useUpdateEffect","effect","deps","resolveHookState","nextState","prevState","storageListeners","invokeStorageKeyListeners","s","key","skipListener","_b","listener","storageEventHandler","evt","addStorageListener","keys","listeners","removeStorageListener","DEFAULT_OPTIONS","useStorageValue","storage","options","optionsRef","parse","str","fallback","defaultParse","stringify","data","defaultStringify","storageActions","val","stringified","state","setState","useState","stateRef","stateActions","handler","actions","storeVal","staticActions","v","error","IS_LOCAL_STORAGE_AVAILABLE","useLocalStorageValue","_key","_options","LoginMethods","LOGIN_METHOD_OAUTH2_GOOGLE","LOGIN_METHOD_OAUTH2_ORCID","LOGIN_METHOD_EMAIL","getLoginMethodFriendlyName","loginMethod","useLastLoginInfoState","CURRENT_SOURCEAPP_NAME_LOCALSTORAGE_KEY","LAST_LOGIN_METHOD_LOCALSTORAGE_KEY","LAST_LOGIN_SOURCEAPP_NAME_LOCALSTORAGE_KEY","LAST_LOGIN_SOURCEAPP_URL_LOCALSTORAGE_KEY","LAST_LOGIN_DATE_LOCALSTORAGE_KEY","useLastLoginInfo","states","getSourceAppIndefiniteArticle","getSourceAppDefiniteArticle","LastLoginInfo","props","currentSourceAppName","lastLoginMethod","lastLoginSourceAppName","lastLoginSourceAppURL","lastLoginDate","display","currentSourceAppIndefiniteArticle","currentSourceAppDefiniteArticle","lastLoginSourceAppDefiniteArticle","title","accountLastUsed","formatDate","dayjs","tooltipText","jsxs","Fragment","jsx","Typography","boxText","Link","Tooltip","InfoTwoTone","Box"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}