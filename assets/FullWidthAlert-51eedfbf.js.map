{"version":3,"file":"FullWidthAlert-51eedfbf.js","sources":["../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/ErrorTwoTone.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/HighlightOffTwoTone.js","../../../../node_modules/.pnpm/@mui+icons-material@5.11.16_@mui+material@5.11.16_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/InfoTwoTone.js","../../src/components/FullWidthAlert/FullWidthAlert.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-4h-2V7h2v6z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm-1-5h2v2h-2zm0-8h2v6h-2z\"\n}, \"1\")], 'ErrorTwoTone');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm4 10.59L14.59 16 12 13.41 9.41 16 8 14.59 10.59 12 8 9.41 9.41 8 12 10.59 14.59 8 16 9.41 13.41 12 16 14.59z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}, \"1\")], 'HighlightOffTwoTone');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm1 13h-2v-6h2v6zm0-8h-2V7h2v2z\",\n  opacity: \".3\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}, \"1\")], 'InfoTwoTone');","import React, { useEffect } from 'react'\nimport { Button, Alert, AlertProps } from 'react-bootstrap'\nimport {\n  InfoTwoTone,\n  ErrorTwoTone,\n  CheckCircleTwoTone,\n  HighlightOffTwoTone,\n  Clear,\n} from '@mui/icons-material'\nimport { Typography } from '@mui/material'\nimport { Tooltip } from '@mui/material'\n\nexport type AlertButtonConfig = {\n  text: string\n  isDisabled?: boolean\n  tooltipText?: string\n} & (\n  | // \"onClick\" or \"href\", but not both\n  {\n      onClick?:\n        | ((e?: React.MouseEvent<HTMLElement, MouseEvent>) => void)\n        | (() => void)\n    }\n  | { href?: string }\n)\n\nexport interface FullWidthAlertProps extends AlertProps {\n  variant: string\n  title?: string\n  description?: React.ReactNode\n  primaryButtonConfig?: AlertButtonConfig\n  secondaryButtonConfig?: AlertButtonConfig\n  onClose?: () => void\n  autoCloseAfterDelayInSeconds?: number\n  isGlobal?: boolean\n}\n\nfunction getIcon(variant?: string) {\n  switch (variant) {\n    case 'warning':\n      return <ErrorTwoTone className=\"text-warning\" fontSize={'large'} />\n    case 'info':\n      return <InfoTwoTone className=\"text-info\" fontSize={'large'} />\n    case 'danger':\n      return <HighlightOffTwoTone className=\"text-danger\" fontSize={'large'} />\n    case 'success':\n      return <CheckCircleTwoTone className=\"text-success\" fontSize={'large'} />\n    default:\n      return <></>\n  }\n}\n\nfunction ButtonFromConfig(props: {\n  config?: AlertButtonConfig\n  className?: string\n  variant: string\n}) {\n  const { config, variant, className } = props\n  if (config && ('onClick' in config || 'href' in config)) {\n    return (\n      <Tooltip title={config.tooltipText ?? ''} enterNextDelay={300}>\n        <span // See https://github.com/wwayne/react-tooltip/issues/304\n          className={className}\n          data-tip-disable={false}\n        >\n          <Button\n            variant={variant}\n            size={'sm'}\n            disabled={config.isDisabled}\n            onClick={e => {\n              if ('onClick' in config) {\n                e.preventDefault()\n                config.onClick!(e)\n              } else if ('href' in config) {\n                e.preventDefault()\n                window.open(config.href, '_blank', 'noopener')\n              }\n            }}\n          >\n            {config.text}\n          </Button>\n        </span>\n      </Tooltip>\n    )\n  }\n  return null\n}\n\n/**\n * Nav bar item, displayed when files have been added to the Download Cart.\n * This must be configured with the URL of a page dedicated to showing the Download Cart.\n */\nfunction FullWidthAlert(props: FullWidthAlertProps) {\n  const {\n    title,\n    description,\n    primaryButtonConfig,\n    secondaryButtonConfig,\n    show,\n    onClose,\n    autoCloseAfterDelayInSeconds,\n    variant = 'info',\n    transition,\n    isGlobal = true,\n  } = props\n  const iconContent = getIcon(variant)\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout\n    if (onClose && autoCloseAfterDelayInSeconds) {\n      timer = setTimeout(onClose, autoCloseAfterDelayInSeconds * 1000)\n    }\n    return () => {\n      if (timer) {\n        clearTimeout(timer)\n      }\n    }\n  }, [onClose, autoCloseAfterDelayInSeconds])\n  const additionalAlertVariantClass = variant ? `alert-${variant}` : ''\n  return (\n    <Alert\n      variant={variant}\n      show={show}\n      dismissible={false}\n      transition={transition}\n      className={`FullWidthAlert bootstrap-4-backport ${\n        isGlobal ? 'global' : ''\n      } ${additionalAlertVariantClass}`}\n    >\n      <div className={`gridContainer ${onClose ? 'hasCloseButton' : ''}`}>\n        <span className=\"iconArea\">{iconContent}</span>\n        <span className=\"mainContent\">\n          <span className=\"messageArea\">\n            <Typography variant=\"smallText2\">{title}</Typography>\n            {title && description && <div className=\"SRC-marginBottomTen\" />}\n            <Typography variant=\"smallText1\">{description}</Typography>\n          </span>\n          <span className=\"buttonArea\">\n            {secondaryButtonConfig && (\n              <ButtonFromConfig\n                className=\"secondaryButton\"\n                config={secondaryButtonConfig}\n                variant=\"tertiary\"\n              />\n            )}\n            {primaryButtonConfig && (\n              <ButtonFromConfig\n                className=\"primaryButton\"\n                config={primaryButtonConfig}\n                variant=\"sds-primary\"\n              />\n            )}\n          </span>\n        </span>\n        {onClose && (\n          <button className=\"closeAlert\" onClick={onClose}>\n            <Clear fontSize={'large'} />\n          </button>\n        )}\n      </div>\n    </Alert>\n  )\n}\n\nexport default FullWidthAlert\n"],"names":["ErrorTwoTone","createSvgIcon","_jsx","HighlightOffTwoTone","InfoTwoTone","getIcon","variant","jsx","CheckCircleTwoTone","Fragment","ButtonFromConfig","props","config","className","Tooltip","Button","e","FullWidthAlert","title","description","primaryButtonConfig","secondaryButtonConfig","show","onClose","autoCloseAfterDelayInSeconds","transition","isGlobal","iconContent","useEffect","timer","additionalAlertVariantClass","Alert","jsxs","Typography","Clear"],"mappings":"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","x_google_ignoreList":[0,1,2]}