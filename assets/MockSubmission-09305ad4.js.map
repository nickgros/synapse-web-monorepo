{"version":3,"file":"MockSubmission-09305ad4.js","sources":["../../mocks/mockAccessRequirements.ts","../../mocks/msw/handlers/wikiHandlers.ts","../../mocks/dataaccess/MockSubmission.ts"],"sourcesContent":["import {\n  ACCESS_TYPE,\n  AccessRequirement,\n  ACTAccessRequirement,\n  ManagedACTAccessRequirement,\n  ObjectType,\n  RestrictableObjectType,\n  SelfSignAccessRequirement,\n  TermsOfUseAccessRequirement,\n  WikiPageKey,\n} from '@sage-bionetworks/synapse-types'\nimport { AccessRequirementSearchResponse } from '@sage-bionetworks/synapse-types'\nimport mockProjectData from './entity/mockProject'\nimport { MOCK_USER_ID } from './user/mock_user_profile'\nimport {\n  mockManagedACTAccessRequirementWikiPage,\n  mockSelfSignAccessRequirementWikiPage,\n} from './mockWiki'\nimport { mockDucTemplateFileHandle } from './mock_file_handle'\n\nconst MOCK_PROJECT_ID = mockProjectData.id\n\nconst defaultAccessRequirement = {\n  id: 1,\n  name: 'Mocked access requirement',\n  etag: '26489045-3a98-405f-b214-9e1c90208c64',\n  createdOn: '2019-02-06T21:17:25.790Z',\n  modifiedOn: '2020-07-24T18:11:35.323Z',\n  versionNumber: 1,\n  subjectIds: [\n    {\n      id: 'syn12664802',\n      type: RestrictableObjectType.ENTITY,\n    },\n  ],\n  createdBy: '1981374',\n  modifiedBy: '1981374',\n  accessType: ACCESS_TYPE.DOWNLOAD,\n}\n\nexport const mockManagedACTAccessRequirement: ManagedACTAccessRequirement = {\n  ...defaultAccessRequirement,\n  id: 1,\n  concreteType: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',\n  areOtherAttachmentsRequired: true,\n  isCertifiedUserRequired: true,\n  isDUCRequired: true,\n  isIDUPublic: true,\n  isIDURequired: true,\n  ducTemplateFileHandleId: mockDucTemplateFileHandle.id,\n  expirationPeriod: 1000 * 60 * 60 * 24, // 1 day\n  isIRBApprovalRequired: true,\n  isValidatedProfileRequired: true,\n  isTwoFaRequired: true,\n  description: '',\n  subjectsDefinedByAnnotations: false,\n}\n\nexport const mockManagedACTAccessRequirementWikiPageKey: WikiPageKey = {\n  wikiPageId: mockManagedACTAccessRequirementWikiPage.id,\n  ownerObjectId: mockManagedACTAccessRequirement.id.toString(),\n  ownerObjectType: ObjectType.ACCESS_REQUIREMENT,\n}\n\nexport const mockToUAccessRequirement: TermsOfUseAccessRequirement = {\n  ...defaultAccessRequirement,\n  id: 2,\n  concreteType: 'org.sagebionetworks.repo.model.TermsOfUseAccessRequirement',\n  termsOfUse:\n    'These are the terms of use for a TermsOfUseAccessRequirement. The content is inlined in the object, but **markdown** is supported.',\n}\n\nexport const mockSelfSignAccessRequirement: SelfSignAccessRequirement = {\n  ...defaultAccessRequirement,\n  id: 3,\n  concreteType: 'org.sagebionetworks.repo.model.SelfSignAccessRequirement',\n  isCertifiedUserRequired: true,\n  isValidatedProfileRequired: true,\n}\n\nexport const mockSelfSignAccessRequirementWikiPageKey: WikiPageKey = {\n  wikiPageId: mockSelfSignAccessRequirementWikiPage.id,\n  ownerObjectId: mockSelfSignAccessRequirement.id.toString(),\n  ownerObjectType: ObjectType.ACCESS_REQUIREMENT,\n}\n\nexport const mockACTAccessRequirement: ACTAccessRequirement = {\n  ...defaultAccessRequirement,\n  id: 4,\n  concreteType: 'org.sagebionetworks.repo.model.ACTAccessRequirement',\n  actContactInfo:\n    'This is the contact info for the ACTAccessRequirement. You would probably email some documentation to act@sagebase.org, or something like that. **Markdown is supported**.',\n  openJiraIssue: true,\n}\n\nexport const mockLockAccessRequirement = {\n  ...defaultAccessRequirement,\n  id: 5,\n  concreteType: 'org.sagebionetworks.repo.model.LockAccessRequirement',\n}\n\nexport const mockSearchResults: AccessRequirementSearchResponse = {\n  results: [\n    {\n      id: mockManagedACTAccessRequirement.id.toString(),\n      createdOn: mockManagedACTAccessRequirement.createdOn,\n      modifiedOn: mockManagedACTAccessRequirement.modifiedOn,\n      name: mockManagedACTAccessRequirement.name,\n      version: mockManagedACTAccessRequirement.versionNumber.toString(),\n      relatedProjectIds: [MOCK_PROJECT_ID],\n      reviewerIds: [MOCK_USER_ID.toString()],\n    },\n    {\n      id: '9603055',\n      createdOn: '2017-08-23T18:48:20.892Z',\n      modifiedOn: '2022-05-20T22:26:44.406Z',\n      name: 'Access Requiremnent 2',\n      version: '269',\n      relatedProjectIds: [MOCK_PROJECT_ID],\n      reviewerIds: [],\n    },\n    {\n      id: '9605257',\n      createdOn: '2021-01-15T17:05:10.544Z',\n      modifiedOn: '2021-01-15T17:13:06.767Z',\n      name: 'Another AR',\n      version: '3',\n      relatedProjectIds: [],\n      reviewerIds: [],\n    },\n    {\n      id: '9605529',\n      createdOn: '2021-12-20T17:42:32.822Z',\n      modifiedOn: '2021-12-20T18:17:46.904Z',\n      name: 'Some mock ARs',\n      version: '5',\n      relatedProjectIds: [],\n      reviewerIds: [],\n    },\n  ],\n}\n\nexport const mockAccessRequirements: AccessRequirement[] = [\n  mockManagedACTAccessRequirement,\n  mockToUAccessRequirement,\n  mockSelfSignAccessRequirement,\n  mockACTAccessRequirement,\n  mockLockAccessRequirement,\n]\n\nexport const mockAccessRequirementWikiPageKeys: WikiPageKey[] = [\n  mockManagedACTAccessRequirementWikiPageKey,\n  mockSelfSignAccessRequirementWikiPageKey,\n]\n","import { rest } from 'msw'\nimport { ACCESS_REQUIREMENT_WIKI_PAGE } from '../../../src/utils/APIConstants'\nimport { WikiPage } from '@sage-bionetworks/synapse-types'\nimport { SynapseApiResponse } from '../handlers'\nimport { mockWikiPages } from '../../mockWiki'\n\nexport const getWikiHandlers = (backendOrigin: string) => [\n  rest.get(\n    `${backendOrigin}${ACCESS_REQUIREMENT_WIKI_PAGE(':arId', ':wikiId')}`,\n    async (req, res, ctx) => {\n      let status = 404\n      let response: SynapseApiResponse<WikiPage> = {\n        reason: `Mock Service worker could not find a wiki page with ID ${req.params.wikiId}`,\n      }\n\n      const wikiPage = mockWikiPages.find(wp => wp.id === req.params.wikiId)\n      if (wikiPage) {\n        response = wikiPage\n        status = 200\n      }\n      return res(ctx.status(status), ctx.json(response))\n    },\n  ),\n]\n","import {\n  AccessType,\n  RestrictableObjectType,\n  SubmissionState,\n} from '@sage-bionetworks/synapse-types'\nimport { EvaluationSubmission } from '@sage-bionetworks/synapse-types'\nimport { MOCK_USER_ID, MOCK_USER_ID_2 } from '../user/mock_user_profile'\n\nexport const mockRejectedSubmission: EvaluationSubmission = {\n  id: '3',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.RENEW_ACCESS,\n    },\n    {\n      userId: MOCK_USER_ID_2.toString(),\n      type: AccessType.REVOKE_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9602626',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Nick G',\n    intendedDataUseStatement: 'Updated IDU',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-11T13:25:06.021Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '8d0d4ec8-4cd9-45a7-b09d-390cd64cfca4',\n  },\n  isRenewalSubmission: true,\n  publication: '',\n  summaryOfUse: '',\n  submittedOn: '2022-05-11T13:25:20.262Z',\n  modifiedOn: '2022-05-11T13:26:18.583Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.REJECTED,\n  rejectedReason:\n    'Thank you for submitting your data access request. Before I can accept your request, please address the following:\\n\\nFix incorrect data.\\n\\nPlease contact us at act@sagebionetworks.org if you have any questions.\\n\\nRegards,\\nAccess and Compliance Team (ACT)\\nact@sagebionetworks.org',\n  etag: '626f9567-bf5f-41e0-9bbf-cf1cd23e6b54',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\nexport const mockSubmittedSubmission: EvaluationSubmission = {\n  id: '1',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  attachments: ['123456', '123457'],\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n    {\n      userId: MOCK_USER_ID_2.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9602626',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Nick G',\n    intendedDataUseStatement:\n      'I plan to see if the data is real data, because I suspect that this is really fake data created solely for a testing environment where software engineers pretend to be the users for whom they are trying to build features.',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-10T15:49:56.292Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '7ea28f9e-81cb-43be-a614-9eb1a0dabafc',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T15:50:19.275Z',\n  modifiedOn: '2022-05-10T15:50:19.275Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.SUBMITTED,\n  etag: '40820b64-c436-486b-8fb8-afef931fbcb3',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\nexport const mockApprovedSubmission: EvaluationSubmission = {\n  id: '2',\n  accessRequirementId: '9602626',\n  accessRequirementVersion: 1,\n  requestId: '2',\n  ducFileHandleId: '3997211',\n  irbFileHandleId: '3997213',\n  attachments: ['3997211'],\n  accessorChanges: [\n    {\n      userId: MOCK_USER_ID.toString(),\n      type: AccessType.GAIN_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '2',\n    accessRequirementId: '9602626',\n    institution: 'None',\n    projectLead: 'NickACT',\n    intendedDataUseStatement: 'Give me data pls',\n    createdOn: '2022-05-10T17:17:14.757Z',\n    modifiedOn: '2022-05-10T17:18:17.913Z',\n    createdBy: MOCK_USER_ID.toString(),\n    modifiedBy: MOCK_USER_ID.toString(),\n    etag: '270234fd-da28-4098-8fd2-5693fee82c19',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T17:18:28.801Z',\n  modifiedOn: '2022-05-10T17:20:09.356Z',\n  submittedBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  state: SubmissionState.APPROVED,\n  etag: '5fefb2d1-8600-4e1e-96e1-cf57f2ff7fd0',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\n\nexport const mockDemoSubmission: EvaluationSubmission = {\n  id: '4',\n  accessRequirementId: '9603055',\n  accessRequirementVersion: 1,\n  requestId: '1',\n  ducFileHandleId: '3997203',\n  irbFileHandleId: '3997205',\n  attachments: ['123456', '123457'],\n  accessorChanges: [\n    {\n      userId: '3431185',\n      type: AccessType.RENEW_ACCESS,\n    },\n    {\n      userId: '3350396',\n      type: AccessType.GAIN_ACCESS,\n    },\n    {\n      userId: '3371908',\n      type: AccessType.REVOKE_ACCESS,\n    },\n  ],\n  researchProjectSnapshot: {\n    id: '1',\n    accessRequirementId: '9603055',\n    institution: 'Bage Sionetworks',\n    projectLead: 'Adam H',\n    intendedDataUseStatement:\n      'I plan to see if the data is real data, because I suspect that this is really fake data created solely for a testing environment.',\n    createdOn: '2022-05-10T15:49:56.292Z',\n    modifiedOn: '2022-05-10T15:49:56.292Z',\n    createdBy: '3431185',\n    modifiedBy: '3431185',\n    etag: '7ea28f9e-81cb-43be-a614-9eb1a0dabafc',\n  },\n  isRenewalSubmission: false,\n  submittedOn: '2022-05-10T15:50:19.275Z',\n  modifiedOn: '2022-05-10T15:50:19.275Z',\n  submittedBy: '3431185',\n  modifiedBy: '3431185',\n  state: SubmissionState.SUBMITTED,\n  etag: '40820b64-c436-486b-8fb8-afef931fbcb3',\n  subjectId: 'syn12156790',\n  subjectType: RestrictableObjectType.ENTITY,\n}\n\nexport const mockSubmissions: EvaluationSubmission[] = [\n  mockApprovedSubmission,\n  mockRejectedSubmission,\n  mockSubmittedSubmission,\n  mockDemoSubmission,\n]\n"],"names":["MOCK_PROJECT_ID","mockProjectData","defaultAccessRequirement","RestrictableObjectType","ACCESS_TYPE","mockManagedACTAccessRequirement","mockDucTemplateFileHandle","mockManagedACTAccessRequirementWikiPageKey","mockManagedACTAccessRequirementWikiPage","ObjectType","mockToUAccessRequirement","mockSelfSignAccessRequirement","mockSelfSignAccessRequirementWikiPageKey","mockSelfSignAccessRequirementWikiPage","mockACTAccessRequirement","mockLockAccessRequirement","MOCK_USER_ID","mockAccessRequirements","mockAccessRequirementWikiPageKeys","getWikiHandlers","backendOrigin","rest","ACCESS_REQUIREMENT_WIKI_PAGE","req","res","ctx","status","response","wikiPage","mockWikiPages","wp","mockRejectedSubmission","AccessType","MOCK_USER_ID_2","SubmissionState","mockSubmittedSubmission","mockApprovedSubmission","mockDemoSubmission","mockSubmissions"],"mappings":"8SAoBA,MAAMA,EAAkBC,EAAgB,GAElCC,EAA2B,CAC/B,GAAI,EACJ,KAAM,4BACN,KAAM,uCACN,UAAW,2BACX,WAAY,2BACZ,cAAe,EACf,WAAY,CACV,CACE,GAAI,cACJ,KAAMC,EAAuB,MAC/B,CACF,EACA,UAAW,UACX,WAAY,UACZ,WAAYC,EAAY,QAC1B,EAEaC,EAA+D,CAC1E,GAAGH,EACH,GAAI,EACJ,aAAc,6DACd,4BAA6B,GAC7B,wBAAyB,GACzB,cAAe,GACf,YAAa,GACb,cAAe,GACf,wBAAyBI,EAA0B,GACnD,iBAAkB,IAAO,GAAK,GAAK,GACnC,sBAAuB,GACvB,2BAA4B,GAC5B,gBAAiB,GACjB,YAAa,GACb,6BAA8B,EAChC,EAEaC,EAA0D,CACrE,WAAYC,EAAwC,GACpD,cAAeH,EAAgC,GAAG,SAAS,EAC3D,gBAAiBI,EAAW,kBAC9B,EAEaC,EAAwD,CACnE,GAAGR,EACH,GAAI,EACJ,aAAc,6DACd,WACE,oIACJ,EAEaS,EAA2D,CACtE,GAAGT,EACH,GAAI,EACJ,aAAc,2DACd,wBAAyB,GACzB,2BAA4B,EAC9B,EAEaU,EAAwD,CACnE,WAAYC,EAAsC,GAClD,cAAeF,EAA8B,GAAG,SAAS,EACzD,gBAAiBF,EAAW,kBAC9B,EAEaK,EAAiD,CAC5D,GAAGZ,EACH,GAAI,EACJ,aAAc,sDACd,eACE,6KACF,cAAe,EACjB,EAEaa,EAA4B,CACvC,GAAGb,EACH,GAAI,EACJ,aAAc,sDAChB,EAKUG,EAAgC,GAAG,SAAS,EACrCA,EAAgC,UAC/BA,EAAgC,WACtCA,EAAgC,KAC7BA,EAAgC,cAAc,SAAS,EAElDW,EAAa,WAgC1B,MAAMC,EAA8C,CACzDZ,EACAK,EACAC,EACAG,EACAC,CACF,EAEaG,EAAmD,CAC9DX,EACAK,CACF,ECnJaO,EAAmBC,GAA0B,CACxDC,EAAAA,KAAK,IACH,GAAGD,IAAgBE,EAA6B,QAAS,SAAS,IAClE,MAAOC,EAAKC,EAAKC,IAAQ,CACvB,IAAIC,EAAS,IACTC,EAAyC,CAC3C,OAAQ,0DAA0DJ,EAAI,OAAO,QAAA,EAGzE,MAAAK,EAAWC,EAAc,KAAKC,GAAMA,EAAG,KAAOP,EAAI,OAAO,MAAM,EACrE,OAAIK,IACSD,EAAAC,EACFF,EAAA,KAEJF,EAAIC,EAAI,OAAOC,CAAM,EAAGD,EAAI,KAAKE,CAAQ,CAAC,CACnD,CACF,CACF,ECfaI,EAA+C,CAC1D,GAAI,IACJ,oBAAqB,UACrB,yBAA0B,EAC1B,UAAW,IACX,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,CACf,CACE,OAAQf,EAAa,SAAS,EAC9B,KAAMgB,EAAW,YACnB,EACA,CACE,OAAQC,EAAe,SAAS,EAChC,KAAMD,EAAW,aACnB,CACF,EACA,wBAAyB,CACvB,GAAI,IACJ,oBAAqB,UACrB,YAAa,mBACb,YAAa,SACb,yBAA0B,cAC1B,UAAW,2BACX,WAAY,2BACZ,UAAWhB,EAAa,SAAS,EACjC,WAAYA,EAAa,SAAS,EAClC,KAAM,sCACR,EACA,oBAAqB,GACrB,YAAa,GACb,aAAc,GACd,YAAa,2BACb,WAAY,2BACZ,YAAaA,EAAa,SAAS,EACnC,WAAYA,EAAa,SAAS,EAClC,MAAOkB,EAAgB,SACvB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACF,KAAM,uCACN,UAAW,cACX,YAAa/B,EAAuB,MACtC,EACagC,EAAgD,CAC3D,GAAI,IACJ,oBAAqB,UACrB,yBAA0B,EAC1B,UAAW,IACX,gBAAiB,UACjB,gBAAiB,UACjB,YAAa,CAAC,SAAU,QAAQ,EAChC,gBAAiB,CACf,CACE,OAAQnB,EAAa,SAAS,EAC9B,KAAMgB,EAAW,WACnB,EACA,CACE,OAAQC,EAAe,SAAS,EAChC,KAAMD,EAAW,WACnB,CACF,EACA,wBAAyB,CACvB,GAAI,IACJ,oBAAqB,UACrB,YAAa,mBACb,YAAa,SACb,yBACE,gOACF,UAAW,2BACX,WAAY,2BACZ,UAAWhB,EAAa,SAAS,EACjC,WAAYA,EAAa,SAAS,EAClC,KAAM,sCACR,EACA,oBAAqB,GACrB,YAAa,2BACb,WAAY,2BACZ,YAAaA,EAAa,SAAS,EACnC,WAAYA,EAAa,SAAS,EAClC,MAAOkB,EAAgB,UACvB,KAAM,uCACN,UAAW,cACX,YAAa/B,EAAuB,MACtC,EACaiC,EAA+C,CAC1D,GAAI,IACJ,oBAAqB,UACrB,yBAA0B,EAC1B,UAAW,IACX,gBAAiB,UACjB,gBAAiB,UACjB,YAAa,CAAC,SAAS,EACvB,gBAAiB,CACf,CACE,OAAQpB,EAAa,SAAS,EAC9B,KAAMgB,EAAW,WACnB,CACF,EACA,wBAAyB,CACvB,GAAI,IACJ,oBAAqB,UACrB,YAAa,OACb,YAAa,UACb,yBAA0B,mBAC1B,UAAW,2BACX,WAAY,2BACZ,UAAWhB,EAAa,SAAS,EACjC,WAAYA,EAAa,SAAS,EAClC,KAAM,sCACR,EACA,oBAAqB,GACrB,YAAa,2BACb,WAAY,2BACZ,YAAaA,EAAa,SAAS,EACnC,WAAYA,EAAa,SAAS,EAClC,MAAOkB,EAAgB,SACvB,KAAM,uCACN,UAAW,cACX,YAAa/B,EAAuB,MACtC,EAEakC,EAA2C,CACtD,GAAI,IACJ,oBAAqB,UACrB,yBAA0B,EAC1B,UAAW,IACX,gBAAiB,UACjB,gBAAiB,UACjB,YAAa,CAAC,SAAU,QAAQ,EAChC,gBAAiB,CACf,CACE,OAAQ,UACR,KAAML,EAAW,YACnB,EACA,CACE,OAAQ,UACR,KAAMA,EAAW,WACnB,EACA,CACE,OAAQ,UACR,KAAMA,EAAW,aACnB,CACF,EACA,wBAAyB,CACvB,GAAI,IACJ,oBAAqB,UACrB,YAAa,mBACb,YAAa,SACb,yBACE,oIACF,UAAW,2BACX,WAAY,2BACZ,UAAW,UACX,WAAY,UACZ,KAAM,sCACR,EACA,oBAAqB,GACrB,YAAa,2BACb,WAAY,2BACZ,YAAa,UACb,WAAY,UACZ,MAAOE,EAAgB,UACvB,KAAM,uCACN,UAAW,cACX,YAAa/B,EAAuB,MACtC,EAEamC,EAA0C,CACrDF,EACAL,EACAI,EACAE,CACF"}