{"version":3,"file":"TwoFactorBackupCodes.stories-8866567f.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Alert/alertClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/Close.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Alert/Alert.js","../../src/lib/assets/icons/FrontHand.tsx","../../src/lib/containers/auth/RegenerateBackupCodesWarning.tsx","../../src/lib/containers/auth/RecoveryCodeGrid.tsx","../../src/lib/utils/hooks/useMediaPrintOnly.ts","../../src/lib/containers/auth/TwoFactorBackupCodes.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import React from 'react'\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\n\nexport default function FrontHand(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props} width={55} height={55} viewBox=\"0 0 55 55\">\n      <mask\n        id=\"mask0_1990_47824\"\n        style={{ maskType: 'alpha' }}\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0\"\n        y=\"0\"\n        width=\"55\"\n        height=\"55\"\n      >\n        <rect x=\"0.0234375\" y=\"0.27832\" width=\"54\" height=\"54\" fill=\"#D9D9D9\" />\n      </mask>\n      <g mask=\"url(#mask0_1990_47824)\">\n        <path\n          d=\"M28.1484 54.2783C22.8234 54.2783 18.3047 52.4221 14.5922 48.7096C10.8797 44.9971 9.02344 40.4783 9.02344 35.1533V16.0283C9.02344 14.4533 9.56719 13.1221 10.6547 12.0346C11.7422 10.9471 13.0734 10.4033 14.6484 10.4033C14.8359 10.4033 15.0234 10.4123 15.2109 10.4303C15.3984 10.4498 15.5859 10.4783 15.7734 10.5158V9.27832C15.7734 7.70332 16.3172 6.37207 17.4047 5.28457C18.4922 4.19707 19.8234 3.65332 21.3984 3.65332C21.6609 3.65332 21.9144 3.67207 22.1589 3.70957C22.4019 3.74707 22.6547 3.80332 22.9172 3.87832C23.3297 2.79082 24.0047 1.91932 24.9422 1.26382C25.8797 0.60682 26.9484 0.27832 28.1484 0.27832C29.5359 0.27832 30.7457 0.71857 31.7777 1.59907C32.8082 2.48107 33.4359 3.57832 33.6609 4.89082C33.8484 4.85332 34.0457 4.82482 34.2527 4.80532C34.4582 4.78732 34.6734 4.77832 34.8984 4.77832C36.4734 4.77832 37.8047 5.32207 38.8922 6.40957C39.9797 7.49707 40.5234 8.82832 40.5234 10.4033V18.3908C40.7109 18.3533 40.8984 18.3248 41.0859 18.3053C41.2734 18.2873 41.4609 18.2783 41.6484 18.2783C43.2234 18.2783 44.5547 18.8221 45.6422 19.9096C46.7297 20.9971 47.2734 22.3283 47.2734 23.9033V35.1533C47.2734 40.4783 45.4172 44.9971 41.7047 48.7096C37.9922 52.4221 33.4734 54.2783 28.1484 54.2783ZM28.1484 49.7783C30.1734 49.7783 32.0769 49.3943 33.8589 48.6263C35.6394 47.8568 37.1859 46.8158 38.4984 45.5033C39.8109 44.1908 40.8519 42.6443 41.6214 40.8638C42.3894 39.0818 42.7734 37.1783 42.7734 35.1533V23.9033C42.7734 23.6033 42.6609 23.3408 42.4359 23.1158C42.2109 22.8908 41.9484 22.7783 41.6484 22.7783C41.3484 22.7783 41.0859 22.8908 40.8609 23.1158C40.6359 23.3408 40.5234 23.6033 40.5234 23.9033V34.0283L39.7359 34.0846C38.0484 34.2721 36.6332 35.0033 35.4902 36.2783C34.3457 37.5533 33.7734 39.0533 33.7734 40.7783H29.2734C29.2734 38.4533 29.8922 36.3721 31.1297 34.5346C32.3672 32.6971 33.9984 31.3471 36.0234 30.4846V10.4033C36.0234 10.1033 35.9109 9.84082 35.6859 9.61582C35.4609 9.39082 35.1984 9.27832 34.8984 9.27832C34.5984 9.27832 34.3359 9.39082 34.1109 9.61582C33.8859 9.84082 33.7734 10.1033 33.7734 10.4033V25.0283H29.2734V5.90332C29.2734 5.60332 29.1609 5.34082 28.9359 5.11582C28.7109 4.89082 28.4484 4.77832 28.1484 4.77832C27.8484 4.77832 27.5859 4.89082 27.3609 5.11582C27.1359 5.34082 27.0234 5.60332 27.0234 5.90332V25.0283H22.5234V9.27832C22.5234 8.97832 22.4109 8.71582 22.1859 8.49082C21.9609 8.26582 21.6984 8.15332 21.3984 8.15332C21.0984 8.15332 20.8359 8.26582 20.6109 8.49082C20.3859 8.71582 20.2734 8.97832 20.2734 9.27832V27.2783H15.7734V16.0283C15.7734 15.7283 15.6609 15.4658 15.4359 15.2408C15.2109 15.0158 14.9484 14.9033 14.6484 14.9033C14.3484 14.9033 14.0859 15.0158 13.8609 15.2408C13.6359 15.4658 13.5234 15.7283 13.5234 16.0283V35.1533C13.5234 37.1783 13.9082 39.0818 14.6777 40.8638C15.4457 42.6443 16.4859 44.1908 17.7984 45.5033C19.1109 46.8158 20.6582 47.8568 22.4402 48.6263C24.2207 49.3943 26.1234 49.7783 28.1484 49.7783Z\"\n          fill=\"white\"\n        />\n      </g>\n    </SvgIcon>\n  )\n}\n","import { Avatar, Box, Button, Paper, Typography, useTheme } from '@mui/material'\nimport FrontHand from '../../assets/icons/FrontHand'\nimport React from 'react'\n\ntype RegenerateBackupCodesWarningProps = {\n  onConfirm: () => void\n  onCancel: () => void\n}\n\nexport function RegenerateBackupCodesWarning(\n  props: RegenerateBackupCodesWarningProps,\n) {\n  const { onConfirm, onCancel } = props\n  const theme = useTheme()\n  return (\n    <Paper sx={{ m: 'auto', maxWidth: '500px', p: 8 }}>\n      <Avatar\n        sx={{\n          bgcolor: theme.palette.primary[500],\n          height: '100px',\n          width: '100px',\n        }}\n      >\n        <FrontHand sx={{ height: '54px', width: '54px' }} />\n      </Avatar>\n      <Box sx={{ my: 5 }}>\n        <Typography variant={'headline1'} sx={{ mb: 2 }}>\n          Really regenerate backup codes?\n        </Typography>\n        <Typography variant={'body1'} sx={{ my: 1 }}>\n          This will invalidate your old backup codes\n        </Typography>\n        <Typography variant={'body1'} sx={{ my: 1 }}>\n          If you click “yes”, below, we will generate 10 new backup codes,\n          replacing your old ones, which will no longer function.\n        </Typography>\n      </Box>\n      <Button\n        fullWidth\n        variant=\"contained\"\n        onClick={onConfirm}\n        sx={{ height: '50px', my: 1 }}\n      >\n        Yes, regenerate backup codes\n      </Button>\n      <Button\n        fullWidth\n        variant=\"text\"\n        onClick={onCancel}\n        sx={{ height: '50px', my: 1 }}\n      >\n        Nevermind\n      </Button>\n    </Paper>\n  )\n}\n","import { Box } from '@mui/material'\nimport ConditionalWrapper from '../utils/ConditionalWrapper'\nimport Skeleton from '@mui/material/Skeleton'\nimport React from 'react'\nimport { TwoFactorAuthRecoveryCodes } from '../../utils/synapseTypes/TwoFactorAuthRecoveryCodes'\n\nconst DEFAULT_RECOVERY_CODE_COUNT = 10\n\n// Placeholder codes used to render skeletons while loading\nconst PLACEHOLDER_RECOVERY_CODE = '1234-5678-9012-3456'\nconst PLACEHOLDER_RECOVERY_CODES = Array(DEFAULT_RECOVERY_CODE_COUNT).fill(\n  PLACEHOLDER_RECOVERY_CODE,\n)\n\ntype RecoveryCodeGridProps = {\n  recoveryCodes?: TwoFactorAuthRecoveryCodes\n}\n\nexport function RecoveryCodeGrid(props: RecoveryCodeGridProps) {\n  const { recoveryCodes } = props\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '47.5% 47.5%',\n        columnGap: '5%',\n        gridTemplateRows: 'repeat(5, 1fr)',\n        fontFamily: 'Menlo, Courier New, Courier, monospace',\n        my: 2,\n      }}\n    >\n      {(recoveryCodes?.codes ?? PLACEHOLDER_RECOVERY_CODES).map(\n        (code, index) => {\n          return (\n            <ConditionalWrapper\n              key={index}\n              condition={!recoveryCodes}\n              wrapper={Skeleton}\n              wrapperProps={{ width: '100%', height: '100%' }}\n            >\n              <Box\n                sx={{\n                  my: 1,\n                  fontSize: '13px',\n                }}\n              >\n                {code}\n              </Box>\n            </ConditionalWrapper>\n          )\n        },\n      )}\n    </Box>\n  )\n}\n","import { useEffect } from 'react'\n\n/**\n * Adds a temporary style sheet to the document that hides all elements except those with the `visibleOnPrintClassName`.\n *\n * Also provides a `hiddenOnPrintClassName` that can be used to hide elements within the `visibleOnPrintClassName` elements.\n *\n * The style sheet is removed when the component unmounts.\n */\nexport function useMediaPrintOnly() {\n  const visibleOnPrintClassName = 'printable'\n  const hiddenOnPrintClassName = 'noPrint'\n\n  useEffect(() => {\n    const temporaryPrintStyle = document.createElement('style')\n    temporaryPrintStyle.innerHTML = `@media print {\n    * {\n        visibility: hidden;\n    }\n\n    .${visibleOnPrintClassName} {\n        visibility: visible;\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    .${visibleOnPrintClassName} * {\n        visibility: visible;\n    }\n    \n    .${visibleOnPrintClassName} .${hiddenOnPrintClassName} {\n        display: none;\n        visibility: hidden;\n    }\n    \n    .${visibleOnPrintClassName} .${hiddenOnPrintClassName} * {\n        display: none;\n        visibility: hidden;\n    }\n}`\n\n    document.head.append(temporaryPrintStyle)\n    return () => {\n      temporaryPrintStyle.remove()\n    }\n  }, [])\n\n  return { visibleOnPrintClassName, hiddenOnPrintClassName }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  Alert,\n  Box,\n  Button,\n  IconButton,\n  Typography,\n  useTheme,\n} from '@mui/material'\nimport {\n  LeftRightPanel,\n  StyledOuterContainer,\n} from '../../components/styled/LeftRightPanel'\nimport IconSvg from '../IconSvg'\nimport { useMutation } from 'react-query'\nimport { createRecoveryCodes } from '../../utils/SynapseClient'\nimport { useSynapseContext } from '../../utils/SynapseContext'\nimport { displayToast } from '../ToastMessage'\nimport { RegenerateBackupCodesWarning } from './RegenerateBackupCodesWarning'\nimport { RecoveryCodeGrid } from './RecoveryCodeGrid'\nimport { TwoFactorAuthRecoveryCodes } from '../../utils/synapseTypes/TwoFactorAuthRecoveryCodes'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useMediaPrintOnly } from '../../utils/hooks/useMediaPrintOnly'\n\nexport type TwoFactorBackupCodesProps = {\n  /* Whether to show a warning before generating new codes, to prevent users from overwriting their existing codes */\n  showReplaceOldCodesWarning?: boolean\n  /* Invoked when the user decides not to generate new codes, or has acknowledged new codes. */\n  onClose: () => void\n}\n\nexport default function TwoFactorBackupCodes(props: TwoFactorBackupCodesProps) {\n  const { showReplaceOldCodesWarning, onClose } = props\n  const theme = useTheme()\n  const [hasConfirmedRegeneration, setHasConfirmedRegeneration] = useState(\n    !showReplaceOldCodesWarning,\n  )\n\n  const { accessToken } = useSynapseContext()\n\n  const {\n    mutate: generateCodes,\n    data: recoveryCodes,\n    error,\n  } = useMutation<TwoFactorAuthRecoveryCodes, SynapseClientError>({\n    mutationFn: () => createRecoveryCodes(accessToken),\n    onMutate: () => {\n      setHasConfirmedRegeneration(true)\n    },\n  })\n\n  // Generate codes on mount if no warning is shown\n  useEffect(() => {\n    if (!showReplaceOldCodesWarning) {\n      generateCodes()\n    }\n    // Run on mount only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const { visibleOnPrintClassName, hiddenOnPrintClassName } =\n    useMediaPrintOnly()\n\n  const copyCodesToClipboard = React.useCallback(() => {\n    const codes = (recoveryCodes?.codes || []).join('\\n')\n    navigator.clipboard.writeText(codes).then(() => {\n      displayToast('Recovery codes copied to clipboard', 'success')\n    })\n  }, [recoveryCodes])\n\n  if (showReplaceOldCodesWarning && !hasConfirmedRegeneration) {\n    return (\n      <StyledOuterContainer sx={{ display: 'flex', flexDirection: 'column' }}>\n        <RegenerateBackupCodesWarning\n          onConfirm={generateCodes}\n          onCancel={onClose}\n        />\n      </StyledOuterContainer>\n    )\n  }\n\n  return (\n    <LeftRightPanel\n      className={visibleOnPrintClassName}\n      leftContent={\n        <Box\n          sx={{\n            py: 10,\n            px: 8,\n            height: '100%',\n            position: 'relative',\n          }}\n        >\n          <IconButton\n            type=\"button\"\n            onClick={onClose}\n            className={hiddenOnPrintClassName}\n            sx={{\n              position: 'absolute',\n              top: theme.spacing(2),\n              left: theme.spacing(2),\n            }}\n          >\n            <IconSvg\n              icon=\"arrowBack\"\n              wrap={false}\n              sx={{ height: '24px', width: '24px' }}\n            />\n          </IconButton>\n          <Typography variant=\"headline1\" sx={{ mt: 7 }}>\n            Backup codes\n          </Typography>\n          {showReplaceOldCodesWarning && (\n            <Alert\n              severity=\"warning\"\n              className={hiddenOnPrintClassName}\n              sx={{\n                my: 2,\n              }}\n              icon={false}\n            >\n              <strong>These new codes have replaced your old codes.</strong>{' '}\n              Please save these codes and use them from now on.\n            </Alert>\n          )}\n          <RecoveryCodeGrid recoveryCodes={recoveryCodes} />\n          {error && (\n            <Alert severity={'error'} sx={{ my: 2 }} icon={false}>\n              {error.message}\n            </Alert>\n          )}\n          <Box\n            className={hiddenOnPrintClassName}\n            sx={{\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gap: '10px',\n              mb: '10px',\n            }}\n          >\n            <Button\n              variant={'outlined'}\n              onClick={copyCodesToClipboard}\n              disabled={!recoveryCodes}\n            >\n              Copy to Clipboard\n            </Button>\n            <Button\n              variant={'outlined'}\n              disabled={!recoveryCodes}\n              onClick={window.print}\n            >\n              Print Codes\n            </Button>\n          </Box>\n          <Button\n            variant={'contained'}\n            className={hiddenOnPrintClassName}\n            fullWidth\n            disabled={!recoveryCodes}\n            onClick={onClose}\n          >\n            Done\n          </Button>\n        </Box>\n      }\n      rightContent={\n        <Box\n          sx={{\n            py: 10,\n            height: '100%',\n            background: `url(https://s3.amazonaws.com/static.synapse.org/images/twofactor-graphic.svg) no-repeat right bottom`,\n            backgroundSize: '100%',\n          }}\n        >\n          <Box\n            sx={{\n              mt: 7,\n              px: 9,\n            }}\n          >\n            <Typography variant=\"headline1\" sx={{ mb: 2.5 }}>\n              Save these codes\n            </Typography>\n            <Typography variant=\"body1\" sx={{ my: 2 }}>\n              You can use these 10 backup codes to access your account if you\n              ever lose access to your authentication device.\n            </Typography>\n            <Typography variant=\"body1\" sx={{ my: 2 }}>\n              Each code can only be used once.\n            </Typography>\n          </Box>\n        </Box>\n      }\n    />\n  )\n}\n"],"names":["getAlertUtilityClass","slot","generateUtilityClass","alertClasses","generateUtilityClasses","alertClasses$1","SuccessOutlinedIcon","createSvgIcon","_jsx","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","ClearIcon","_excluded","useUtilityClasses","ownerState","variant","color","severity","classes","slots","capitalize","composeClasses","AlertRoot","styled","Paper","props","styles","theme","getColor","darken","lighten","getBackgroundColor","_extends","AlertIcon","AlertMessage","AlertAction","defaultIconMapping","Alert","React.forwardRef","inProps","ref","_ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","action","children","className","closeText","components","componentsProps","icon","iconMapping","onClose","role","slotProps","other","_objectWithoutPropertiesLoose","AlertCloseButton","IconButton","AlertCloseIcon","CloseIcon","closeButtonProps","closeIconProps","_jsxs","clsx","Alert$1","FrontHand","jsxs","SvgIcon","jsx","RegenerateBackupCodesWarning","onConfirm","onCancel","useTheme","Avatar","Box","Typography","Button","DEFAULT_RECOVERY_CODE_COUNT","PLACEHOLDER_RECOVERY_CODE","PLACEHOLDER_RECOVERY_CODES","RecoveryCodeGrid","recoveryCodes","code","index","ConditionalWrapper","Skeleton","useMediaPrintOnly","visibleOnPrintClassName","hiddenOnPrintClassName","useEffect","temporaryPrintStyle","TwoFactorBackupCodes","showReplaceOldCodesWarning","hasConfirmedRegeneration","setHasConfirmedRegeneration","useState","accessToken","useSynapseContext","generateCodes","error","useMutation","createRecoveryCodes","copyCodesToClipboard","React","codes","displayToast","StyledOuterContainer","LeftRightPanel","IconSvg"],"mappings":"ugEAEO,SAASA,GAAqBC,EAAM,CACzC,OAAOC,GAAqB,WAAYD,CAAI,CAC9C,CACA,MAAME,GAAeC,GAAuB,WAAY,CAAC,OAAQ,SAAU,OAAQ,UAAW,SAAU,gBAAiB,aAAc,gBAAiB,cAAe,WAAY,kBAAmB,eAAgB,kBAAmB,gBAAiB,WAAY,kBAAmB,eAAgB,kBAAmB,eAAe,CAAC,EAC5UC,EAAeF,GCCfG,GAAeC,EAA4BC,EAAK,OAAQ,CACtD,EAAG,2OACL,CAAC,EAAG,iBAAiB,ECFrBC,GAAeF,EAA4BC,EAAK,OAAQ,CACtD,EAAG,kFACL,CAAC,EAAG,uBAAuB,ECF3BE,GAAeH,EAA4BC,EAAK,OAAQ,CACtD,EAAG,yKACL,CAAC,EAAG,cAAc,ECFlBG,GAAeJ,EAA4BC,EAAK,OAAQ,CACtD,EAAG,2MACL,CAAC,EAAG,cAAc,ECAlBI,GAAeL,EAA4BC,EAAK,OAAQ,CACtD,EAAG,uGACL,CAAC,EAAG,OAAO,ECTLK,GAAY,CAAC,SAAU,WAAY,YAAa,YAAa,QAAS,aAAc,kBAAmB,OAAQ,cAAe,UAAW,OAAQ,WAAY,YAAa,QAAS,SAAS,EAmB5LC,GAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,CACD,EAAGJ,EACEK,EAAQ,CACZ,KAAM,CAAC,OAAQ,GAAGJ,IAAUK,EAAWJ,GAASC,CAAQ,IAAK,GAAGF,GAAS,EACzE,KAAM,CAAC,MAAM,EACb,QAAS,CAAC,SAAS,EACnB,OAAQ,CAAC,QAAQ,CACrB,EACE,OAAOM,GAAeF,EAAOpB,GAAsBmB,CAAO,CAC5D,EACMI,GAAYC,EAAOC,EAAO,CAC9B,KAAM,WACN,KAAM,OACN,kBAAmB,CAACC,EAAOC,IAAW,CACpC,KAAM,CACJ,WAAAZ,CACD,EAAGW,EACJ,MAAO,CAACC,EAAO,KAAMA,EAAOZ,EAAW,OAAO,EAAGY,EAAO,GAAGZ,EAAW,UAAUM,EAAWN,EAAW,OAASA,EAAW,QAAQ,GAAG,CAAC,CACvI,CACH,CAAC,EAAE,CAAC,CACF,MAAAa,EACA,WAAAb,CACF,IAAM,CACJ,MAAMc,EAAWD,EAAM,QAAQ,OAAS,QAAUE,EAASC,EACrDC,EAAqBJ,EAAM,QAAQ,OAAS,QAAUG,EAAUD,EAChEb,EAAQF,EAAW,OAASA,EAAW,SAC7C,OAAOkB,EAAS,CAAE,EAAEL,EAAM,WAAW,MAAO,CAC1C,gBAAiB,cACjB,QAAS,OACT,QAAS,UACV,EAAEX,GAASF,EAAW,UAAY,YAAc,CAC/C,MAAOa,EAAM,KAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,QAAY,EAAIY,EAASD,EAAM,QAAQX,CAAK,EAAE,MAAO,EAAG,EACxG,gBAAiBW,EAAM,KAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,aAAiB,EAAIe,EAAmBJ,EAAM,QAAQX,CAAK,EAAE,MAAO,EAAG,EACjI,CAAC,MAAMd,EAAa,MAAM,EAAGyB,EAAM,KAAO,CACxC,MAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,YAAgB,CACzD,EAAQ,CACF,MAAOW,EAAM,QAAQX,CAAK,EAAE,IAC7B,CACF,EAAEA,GAASF,EAAW,UAAY,YAAc,CAC/C,MAAOa,EAAM,KAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,QAAY,EAAIY,EAASD,EAAM,QAAQX,CAAK,EAAE,MAAO,EAAG,EACxG,OAAQ,cAAcW,EAAM,MAAQA,GAAO,QAAQX,CAAK,EAAE,QAC1D,CAAC,MAAMd,EAAa,MAAM,EAAGyB,EAAM,KAAO,CACxC,MAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,YAAgB,CACzD,EAAQ,CACF,MAAOW,EAAM,QAAQX,CAAK,EAAE,IAC7B,CACF,EAAEA,GAASF,EAAW,UAAY,UAAYkB,EAAS,CACtD,WAAYL,EAAM,WAAW,gBACjC,EAAKA,EAAM,KAAO,CACd,MAAOA,EAAM,KAAK,QAAQ,MAAM,GAAGX,cAAkB,EACrD,gBAAiBW,EAAM,KAAK,QAAQ,MAAM,GAAGX,WAAe,CAChE,EAAM,CACF,gBAAiBW,EAAM,QAAQ,OAAS,OAASA,EAAM,QAAQX,CAAK,EAAE,KAAOW,EAAM,QAAQX,CAAK,EAAE,KAClG,MAAOW,EAAM,QAAQ,gBAAgBA,EAAM,QAAQX,CAAK,EAAE,IAAI,CAC/D,CAAA,CAAC,CACJ,CAAC,EACKiB,GAAYV,EAAO,MAAO,CAC9B,KAAM,WACN,KAAM,OACN,kBAAmB,CAACE,EAAOC,IAAWA,EAAO,IAC/C,CAAC,EAAE,CACD,YAAa,GACb,QAAS,QACT,QAAS,OACT,SAAU,GACV,QAAS,EACX,CAAC,EACKQ,GAAeX,EAAO,MAAO,CACjC,KAAM,WACN,KAAM,UACN,kBAAmB,CAACE,EAAOC,IAAWA,EAAO,OAC/C,CAAC,EAAE,CACD,QAAS,QACT,SAAU,EACV,SAAU,MACZ,CAAC,EACKS,EAAcZ,EAAO,MAAO,CAChC,KAAM,WACN,KAAM,SACN,kBAAmB,CAACE,EAAOC,IAAWA,EAAO,MAC/C,CAAC,EAAE,CACD,QAAS,OACT,WAAY,aACZ,QAAS,eACT,WAAY,OACZ,YAAa,EACf,CAAC,EACKU,EAAqB,CACzB,QAAsB7B,EAAKF,GAAqB,CAC9C,SAAU,SACd,CAAG,EACD,QAAsBE,EAAKC,GAA2B,CACpD,SAAU,SACd,CAAG,EACD,MAAoBD,EAAKE,GAAkB,CACzC,SAAU,SACd,CAAG,EACD,KAAmBF,EAAKG,GAAkB,CACxC,SAAU,SACd,CAAG,CACH,EACM2B,GAAqBC,EAAAA,WAAiB,SAAeC,EAASC,EAAK,CACvE,IAAIC,EAAMC,EAAoBC,EAAOC,EAAkBC,EAAuBC,EAC9E,MAAMrB,EAAQsB,GAAc,CAC1B,MAAOR,EACP,KAAM,UACV,CAAG,EACK,CACF,OAAAS,EACA,SAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,QACZ,MAAAnC,EACA,WAAAoC,EAAa,CAAE,EACf,gBAAAC,EAAkB,CAAE,EACpB,KAAAC,EACA,YAAAC,EAAcnB,EACd,QAAAoB,EACA,KAAAC,EAAO,QACP,SAAAxC,EAAW,UACX,UAAAyC,EAAY,CAAE,EACd,MAAAvC,EAAQ,CAAE,EACV,QAAAJ,EAAU,UAChB,EAAQU,EACJkC,GAAQC,GAA8BnC,EAAOb,EAAS,EAClDE,EAAakB,EAAS,CAAE,EAAEP,EAAO,CACrC,MAAAT,EACA,SAAAC,EACA,QAAAF,CACJ,CAAG,EACKG,EAAUL,GAAkBC,CAAU,EACtC+C,IAAoBpB,GAAQC,EAAqBvB,EAAM,cAAgB,KAAOuB,EAAqBU,EAAW,cAAgB,KAAOX,EAAOqB,EAC5IC,IAAkBpB,GAASC,EAAmBzB,EAAM,YAAc,KAAOyB,EAAmBQ,EAAW,YAAc,KAAOT,EAAQqB,GACpIC,IAAoBpB,EAAwBa,EAAU,cAAgB,KAAOb,EAAwBQ,EAAgB,YACrHa,IAAkBpB,EAAuBY,EAAU,YAAc,KAAOZ,EAAuBO,EAAgB,UACrH,OAAoBc,EAAM7C,GAAWU,EAAS,CAC5C,KAAMyB,EACN,UAAW,EACX,WAAY3C,EACZ,UAAWsD,GAAKlD,EAAQ,KAAMgC,CAAS,EACvC,IAAKV,CACN,EAAEmB,GAAO,CACR,SAAU,CAACL,IAAS,GAAqB/C,EAAK0B,GAAW,CACvD,WAAYnB,EACZ,UAAWI,EAAQ,KACnB,SAAUoC,GAAQC,EAAYtC,CAAQ,GAAKmB,EAAmBnB,CAAQ,CAC5E,CAAK,EAAI,KAAmBV,EAAK2B,GAAc,CACzC,WAAYpB,EACZ,UAAWI,EAAQ,QACnB,SAAU+B,CACX,CAAA,EAAGD,GAAU,KAAoBzC,EAAK4B,EAAa,CAClD,WAAYrB,EACZ,UAAWI,EAAQ,OACnB,SAAU8B,CAChB,CAAK,EAAI,KAAMA,GAAU,MAAQQ,EAAuBjD,EAAK4B,EAAa,CACpE,WAAYrB,EACZ,UAAWI,EAAQ,OACnB,SAAuBX,EAAKsD,GAAkB7B,EAAS,CACrD,KAAM,QACN,aAAcmB,EACd,MAAOA,EACP,MAAO,UACP,QAASK,CACV,EAAES,GAAkB,CACnB,SAAuB1D,EAAKwD,GAAgB/B,EAAS,CACnD,SAAU,OACX,EAAEkC,EAAc,CAAC,CAC1B,CAAO,CAAC,CACH,CAAA,EAAI,IAAI,CACV,CAAA,CAAC,CACJ,CAAC,EA+HDG,EAAehC,GChUf,SAAAiC,EAAA7C,EAAA,CACE,OAAA8C,EAAAC,GAAA,CAAA,GAAA/C,EAAA,MAAA,GAAA,OAAA,GAAA,QAAA,YAAA,SAAA,CAEIgD,EAAA,OAAC,CAAA,GAAA,mBACI,MAAA,CAAA,SAAA,OAAA,EACwB,UAAA,iBACjB,EAAA,IACR,EAAA,IACA,MAAA,KACI,OAAA,KACC,SAAAA,EAAA,OAAA,CAAA,EAAA,YAAA,EAAA,UAAA,MAAA,KAAA,OAAA,KAAA,KAAA,SAAA,CAAA,CAE+D,CAAA,EACxEA,EAAA,IAAA,CAAA,KAAA,yBAAA,SAAAA,EAEE,OAAC,CAAA,EAAA,q0FACG,KAAA,OACG,CAAA,EAAA,CAET,CAAA,CAAA,CAGN;;;;;;;;;;8QChBO,SAAAC,EAAAjD,EAAA,CAGL,KAAA,CAAA,UAAAkD,EAAA,SAAAC,CAAA,EAAAnD,EACAE,EAAAkD,IACA,OAAAN,EAAA/C,EAAA,CAAA,GAAA,CAAA,EAAA,OAAA,SAAA,QAAA,EAAA,CAAA,EAAA,SAAA,CAEIiD,EAAAK,GAAC,CAAA,GAAA,CACK,QAAAnD,EAAA,QAAA,QAAA,GAAA,EACgC,OAAA,QAC1B,MAAA,OACD,EACT,SAAA8C,EAAAH,EAAA,CAAA,GAAA,CAAA,OAAA,OAAA,MAAA,MAAA,EAAA,CAEkD,CAAA,EACpDC,EAAAQ,EAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,CAEEN,EAAAO,EAAA,CAAA,QAAA,YAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,iCAAA,CAAA,EAEAP,EAAAO,EAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,4CAAA,CAAA,EAGAP,EAAAO,EAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,0HAAA,CAAA,CAIA,EAAA,EACFP,EACAQ,EAAC,CAAA,UAAA,GACU,QAAA,YACD,QAAAN,EACC,GAAA,CAAA,OAAA,OAAA,GAAA,CAAA,EACmB,SAAA,8BAC7B,CAAA,EAEDF,EACAQ,EAAC,CAAA,UAAA,GACU,QAAA,OACD,QAAAL,EACC,GAAA,CAAA,OAAA,OAAA,GAAA,CAAA,EACmB,SAAA,WAC7B,CAAA,CAED,CAAA,CAAA,CAGN,gVCjDA,MAAAM,GAAA,GAGAC,GAAA,sBACAC,GAAA,MAAAF,EAAA,EAAA,KAAsEC,EAEtE,EAMO,SAAAE,EAAA5D,EAAA,CACL,KAAA,CAAA,cAAA6D,CAAA,EAAA7D,EACA,OAAAgD,EACEM,EAAC,CAAA,GAAA,CACK,QAAA,OACO,oBAAA,cACY,UAAA,KACV,iBAAA,iBACO,WAAA,yCACN,GAAA,CACR,EACN,WAAAO,GAAA,YAAAA,EAAA,QAAAF,IAAA,IAEsD,CAAAG,EAAAC,IAElDf,EACEgB,GAAC,CAAA,UAAA,CAAAH,EAEa,QAAAI,GACH,aAAA,CAAA,MAAA,OAAA,OAAA,MAAA,EACqC,SAAAjB,EAE9CM,EAAC,CAAA,GAAA,CACK,GAAA,EACE,SAAA,MACM,EACZ,SAAAQ,CAEC,CAAA,CACH,EAAAC,CAZK,CAeX,CACF,CAAA,CAGN,+OC7CO,SAASG,IAAoB,CAClC,MAAMC,EAA0B,YAC1BC,EAAyB,UAE/BC,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAsB,SAAS,cAAc,OAAO,EAC1D,OAAAA,EAAoB,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,OAK7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOAA;AAAA;AAAA;AAAA;AAAA,OAIAA,MAA4BC;AAAA;AAAA;AAAA;AAAA;AAAA,OAK5BD,MAA4BC;AAAA;AAAA;AAAA;AAAA,GAMtB,SAAA,KAAK,OAAOE,CAAmB,EACjC,IAAM,CACXA,EAAoB,OAAO,CAAA,CAE/B,EAAG,CAAE,CAAA,EAEE,CAAE,wBAAAH,EAAyB,uBAAAC,EACpC,CClBA,SAAAG,EAAAvE,EAAA,CACE,KAAA,CAAA,2BAAAwE,EAAA,QAAAzC,CAAA,EAAA/B,EACAE,EAAAkD,IACA,CAAAqB,EAAAC,CAAA,EAAAC,EAAA,SAAgE,CAAAH,CAC7D,EAGH,CAAA,YAAAI,GAAAC,KAEA,CAAM,OAAAC,EACI,KAAAjB,EACF,MAAAkB,CACN,EAAAC,GAAA,CAC8D,WAAA,IAAAC,GAAAL,CAAA,EACb,SAAA,IAAA,CAE/CF,EAAA,EAAA,CAAgC,CAClC,CAAA,EAIFL,EAAAA,UAAA,IAAA,CACEG,GACEM,GACF,EAAA,CAAA,CAAA,EAKF,KAAA,CAAA,wBAAAX,EAAA,uBAAAC,CAAA,EAAAF,GAAA,EAGAgB,EAAAC,GAAA,YAAA,IAAA,CACE,MAAAC,IAAAvB,GAAA,YAAAA,EAAA,QAAA,CAAA,GAAA,KAAA;AAAA,CAAA,EACA,UAAA,UAAA,UAAAuB,CAAA,EAAA,KAAA,IAAA,CACEC,GAAA,qCAAA,SAAA,CAA4D,CAAA,CAC7D,EAAA,CAAAxB,CAAA,CAAA,EAGH,OAAAW,GAAA,CAAAC,EACEzB,EAAAsC,GAAA,CAAA,GAAA,CAAA,QAAA,OAAA,cAAA,UAAA,SAAAtC,EAEIC,EAAC,CAAA,UAAA6B,EACY,SAAA/C,CACD,CAAA,CAAA,CAAA,EAMlBiB,EACEuC,GAAC,CAAA,UAAApB,EACY,YAAArB,EAETQ,EAAC,CAAA,GAAA,CACK,GAAA,GACE,GAAA,EACA,OAAA,OACI,SAAA,UACE,EACZ,SAAA,CAEAN,EAAAX,EAAC,CAAA,KAAA,SACM,QAAAN,EACI,UAAAqC,EACE,GAAA,CACP,SAAA,WACQ,IAAAlE,EAAA,QAAA,CAAA,EACU,KAAAA,EAAA,QAAA,CAAA,CACC,EACvB,SAAA8C,EAEAwC,GAAC,CAAA,KAAA,YACM,KAAA,GACC,GAAA,CAAA,OAAA,OAAA,MAAA,MAAA,CAC8B,CAAA,CACtC,CAAA,EACFxC,EAAAO,EAAA,CAAA,QAAA,YAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,cAAA,CAAA,EAGAiB,GAAA1B,EAEElC,EAAC,CAAA,SAAA,UACU,UAAAwD,EACE,GAAA,CACP,GAAA,CACE,EACN,KAAA,GACM,SAAA,CAENpB,EAAA,SAAA,CAAA,SAAA,+CAAA,CAAA,EAAqD,IAAU,mDAAI,CAAA,CAAA,EAErEA,EAAAY,EAAA,CAAA,cAAAC,EAAA,EAE8CkB,GAAA/B,EAAApC,EAAA,CAAA,SAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EAAA,KAAA,GAAA,SAAAmE,EAAA,QAAA,EAI9CjC,EAEFQ,EAAC,CAAA,UAAAc,EACY,GAAA,CACP,QAAA,OACO,oBAAA,UACY,IAAA,OAChB,GAAA,MACD,EACN,SAAA,CAEApB,EAAAQ,EAAC,CAAA,QAAA,WACU,QAAA0B,EACA,SAAA,CAAArB,EACE,SAAA,mBACZ,CAAA,EAEDb,EACAQ,EAAC,CAAA,QAAA,WACU,SAAA,CAAAK,EACE,QAAA,OAAA,MACK,SAAA,aACjB,CAAA,CAED,CAAA,CAAA,EACFb,EACAQ,EAAC,CAAA,QAAA,YACU,UAAAY,EACE,UAAA,GACF,SAAA,CAAAP,EACE,QAAA9B,EACF,SAAA,MACV,CAAA,CAED,CAAA,CAAA,EACF,aAAAiB,EAGAM,EAAC,CAAA,GAAA,CACK,GAAA,GACE,OAAA,OACI,WAAA,uGACI,eAAA,MACI,EAClB,SAAAR,EAEAQ,EAAC,CAAA,GAAA,CACK,GAAA,EACE,GAAA,CACA,EACN,SAAA,CAEAN,EAAAO,EAAA,CAAA,QAAA,YAAA,GAAA,CAAA,GAAA,GAAA,EAAA,SAAA,kBAAA,CAAA,EAEAP,EAAAO,EAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,iHAAA,CAAA,EAIAP,EAAAO,EAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EAAA,SAAA,kCAAA,CAAA,CAGA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAIR;;;;"}