{"version":3,"file":"useAccessRequirements-6eca9c35.js","sources":["../../src/lib/utils/hooks/SynapseAPI/dataaccess/useAccessRequirements.ts"],"sourcesContent":["import {\n  UseInfiniteQueryOptions,\n  useInfiniteQuery,\n  useQuery,\n  UseQueryOptions,\n  useQueryClient,\n  useMutation,\n  UseMutationOptions,\n} from 'react-query'\nimport { SynapseClient } from '../../..'\nimport { SynapseClientError } from '../../../SynapseClientError'\nimport { useSynapseContext } from '../../../SynapseContext'\nimport {\n  AccessControlList,\n  AccessRequirement,\n  RestrictionInformationRequest,\n  RestrictionInformationResponse,\n  WikiPageKey,\n} from '../../../synapseTypes'\nimport {\n  AccessRequirementSearchRequest,\n  AccessRequirementSearchResponse,\n} from '../../../synapseTypes/AccessRequirement/AccessRequirementSearch'\n\nexport function useGetAccessRequirements<T extends AccessRequirement>(\n  accessRequirementId: string | number,\n  options?: UseQueryOptions<T, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<T, SynapseClientError>(\n    keyFactory.getAccessRequirementQueryKey(String(accessRequirementId)),\n    () =>\n      SynapseClient.getAccessRequirementById<T>(\n        accessToken,\n        accessRequirementId,\n      ),\n    options,\n  )\n}\n\nexport function useGetAccessRequirementWikiPageKey(\n  accessRequirementId: string,\n  options?: UseQueryOptions<WikiPageKey, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<WikiPageKey, SynapseClientError>(\n    keyFactory.getAccessRequirementWikiPageKey(accessRequirementId),\n    () =>\n      SynapseClient.getWikiPageKeyForAccessRequirement(\n        accessToken,\n        accessRequirementId,\n      ),\n    options,\n  )\n}\n\nexport function useGetAccessRequirementACL(\n  accessRequirementId: string,\n  options?: UseQueryOptions<AccessControlList | null, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useQuery<AccessControlList | null, SynapseClientError>(\n    keyFactory.getAccessRequirementAclQueryKey(accessRequirementId),\n    () =>\n      SynapseClient.getAccessRequirementAcl(accessToken, accessRequirementId),\n    options,\n  )\n}\n\nexport function useSearchAccessRequirementsInfinite(\n  params: Omit<AccessRequirementSearchRequest, 'nextPageToken'>,\n  options?: UseInfiniteQueryOptions<\n    AccessRequirementSearchResponse,\n    SynapseClientError\n  >,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useInfiniteQuery<AccessRequirementSearchResponse, SynapseClientError>(\n    keyFactory.searchAccessRequirementsQueryKey(params),\n    async context => {\n      return await SynapseClient.searchAccessRequirements(accessToken, {\n        ...params,\n        nextPageToken: context.pageParam,\n      })\n    },\n    {\n      ...options,\n      getNextPageParam: page => page.nextPageToken,\n    },\n  )\n}\n\nexport function useGetRestrictionInformation(\n  request: RestrictionInformationRequest,\n  options?: UseQueryOptions<RestrictionInformationResponse, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useQuery<RestrictionInformationResponse, SynapseClientError>(\n    keyFactory.getAccessRequirementRestrictionInformationQueryKey(request),\n    () => SynapseClient.getRestrictionInformation(request, accessToken),\n    options,\n  )\n}\n\nexport function useCreateLockAccessRequirement(\n  options?: UseMutationOptions<AccessRequirement, SynapseClientError, string>,\n) {\n  const { accessToken } = useSynapseContext()\n  const queryClient = useQueryClient()\n  const { keyFactory } = useSynapseContext()\n\n  return useMutation<AccessRequirement, SynapseClientError, string>({\n    ...options,\n    mutationFn: (entityId: string) =>\n      SynapseClient.createLockAccessRequirement(entityId, accessToken),\n    mutationKey: ['createLockAccessRequirement'],\n    onSuccess: async (data, variables, ctx) => {\n      // Invalidate all access requirement queries\n      await queryClient.invalidateQueries(\n        keyFactory.getAccessRequirementQueryKey(),\n      )\n      // Invalidate all entity queries (not just the current entity because the new AR may apply to this entity's children)\n      await queryClient.invalidateQueries(keyFactory.getAllEntityDataQueryKey())\n      if (options?.onSuccess) {\n        return options.onSuccess(data, variables, ctx)\n      }\n    },\n  })\n}\n"],"names":["useGetAccessRequirements","accessRequirementId","options","accessToken","keyFactory","useSynapseContext","useQuery","SynapseClient.getAccessRequirementById","useGetAccessRequirementWikiPageKey","SynapseClient.getWikiPageKeyForAccessRequirement","useGetAccessRequirementACL","SynapseClient.getAccessRequirementAcl","useSearchAccessRequirementsInfinite","params","useInfiniteQuery","context","SynapseClient.searchAccessRequirements","page","useGetRestrictionInformation","request","SynapseClient.getRestrictionInformation","useCreateLockAccessRequirement","queryClient","useQueryClient","useMutation","entityId","SynapseClient.createLockAccessRequirement","data","variables","ctx"],"mappings":"mNAwBgB,SAAAA,EACdC,EACAC,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAC/C,OAAAC,EACLF,EAAW,6BAA6B,OAAOH,CAAmB,CAAC,EACnE,IACEM,EACEJ,EACAF,CACF,EACFC,CAAA,CAEJ,CAEgB,SAAAM,EACdP,EACAC,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAC/C,OAAAC,EACLF,EAAW,gCAAgCH,CAAmB,EAC9D,IACEQ,EACEN,EACAF,CACF,EACFC,CAAA,CAEJ,CAEgB,SAAAQ,EACdT,EACAC,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAE/C,OAAAC,EACLF,EAAW,gCAAgCH,CAAmB,EAC9D,IACEU,EAAsCR,EAAaF,CAAmB,EACxEC,CAAA,CAEJ,CAEgB,SAAAU,EACdC,EACAX,EAIA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAC/C,OAAAS,EACLV,EAAW,iCAAiCS,CAAM,EAClD,MAAME,GACG,MAAMC,EAAuCb,EAAa,CAC/D,GAAGU,EACH,cAAeE,EAAQ,SAAA,CACxB,EAEH,CACE,GAAGb,EACH,oBAA0Be,EAAK,aACjC,CAAA,CAEJ,CAEgB,SAAAC,EACdC,EACAjB,EACA,CACA,KAAM,CAAE,YAAAC,EAAa,WAAAC,CAAW,EAAIC,EAAkB,EAE/C,OAAAC,EACLF,EAAW,mDAAmDe,CAAO,EACrE,IAAMC,EAAwCD,EAAShB,CAAW,EAClED,CAAA,CAEJ,CAEO,SAASmB,EACdnB,EACA,CACM,KAAA,CAAE,YAAAC,GAAgBE,IAClBiB,EAAcC,IACd,CAAE,WAAAnB,GAAeC,IAEvB,OAAOmB,EAA2D,CAChE,GAAGtB,EACH,WAAauB,GACXC,EAA0CD,EAAUtB,CAAW,EACjE,YAAa,CAAC,6BAA6B,EAC3C,UAAW,MAAOwB,EAAMC,EAAWC,IAAQ,CAOzC,GALA,MAAMP,EAAY,kBAChBlB,EAAW,6BAA6B,CAAA,EAG1C,MAAMkB,EAAY,kBAAkBlB,EAAW,yBAA0B,CAAA,EACrEF,GAAA,MAAAA,EAAS,UACX,OAAOA,EAAQ,UAAUyB,EAAMC,EAAWC,CAAG,CAEjD,CAAA,CACD,CACH"}