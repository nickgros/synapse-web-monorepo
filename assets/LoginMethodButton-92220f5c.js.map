{"version":3,"file":"LoginMethodButton-92220f5c.js","sources":["../../src/components/Authentication/LoginMethodButton.tsx"],"sourcesContent":["import { Box, Button, SxProps } from '@mui/material'\nimport React from 'react'\nimport IconSvg, { IconName } from '../IconSvg'\nimport LastLoginInfo, { useLastLoginInfo } from './LastLoginInfo'\nimport { LoginMethod, getLoginMethodFriendlyName } from './LoginMethod'\n\nconst buttonSx: SxProps = {\n  color: 'grey.800',\n  mb: '10px',\n}\n\nconst iconSx: SxProps = {\n  width: '28px',\n  height: '28px',\n}\n\nexport type LoginMethodButtonProps = {\n  loginMethod: LoginMethod\n  iconName: IconName\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nexport default function LoginMethodButton(props: LoginMethodButtonProps) {\n  const { loginMethod, iconName, onClick } = props\n\n  const { lastLoginMethod, ...rest } = useLastLoginInfo()\n  const lastLoginInfo = LastLoginInfo({\n    lastLoginMethod: lastLoginMethod,\n    display: 'sentence',\n    ...rest,\n  })\n\n  const shouldShowLastLoginInfo =\n    lastLoginMethod === loginMethod && lastLoginInfo\n\n  const buttonText = `Sign in with ${getLoginMethodFriendlyName(loginMethod)}`\n\n  return (\n    <>\n      {shouldShowLastLoginInfo ? (\n        <Button\n          fullWidth\n          variant=\"outlined\"\n          onClick={onClick}\n          sx={{ ...buttonSx, height: '74px', py: 1.5 }}\n          data-testid=\"button-with-last-login-info\"\n        >\n          <Box flexDirection=\"column\">\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              mb=\"10px\"\n            >\n              <IconSvg icon={iconName} sx={{ ...iconSx, mr: 1, ml: -0.5 }} />\n              {buttonText}\n            </Box>\n            {lastLoginInfo}\n          </Box>\n        </Button>\n      ) : (\n        <Button\n          fullWidth\n          variant=\"outlined\"\n          onClick={onClick}\n          sx={{ ...buttonSx, height: '50px' }}\n          startIcon={<IconSvg icon={iconName} sx={iconSx} />}\n          data-testid=\"button-without-last-login-info\"\n        >\n          {buttonText}\n        </Button>\n      )}\n    </>\n  )\n}\n"],"names":["buttonSx","iconSx","LoginMethodButton","props","loginMethod","iconName","onClick","lastLoginMethod","rest","useLastLoginInfo","lastLoginInfo","LastLoginInfo","shouldShowLastLoginInfo","buttonText","getLoginMethodFriendlyName","jsx","Fragment","Button","jsxs","Box","IconSvg"],"mappings":"mPAMA,MAAAA,EAAA,CAA0B,MAAA,WACjB,GAAA,MAET,EAEAC,EAAA,CAAwB,MAAA,OACf,OAAA,MAET,EAQA,SAAAC,EAAAC,EAAA,CACE,KAAA,CAAA,YAAAC,EAAA,SAAAC,EAAA,QAAAC,CAAA,EAAAH,EAEA,CAAA,gBAAAI,EAAA,GAAAC,CAAA,EAAAC,EAAA,EACAC,EAAAC,EAAA,CAAoC,gBAAAJ,EAClC,QAAA,WACS,GAAAC,CACN,CAAA,EAGLI,EAAAL,IAAAH,GAAAM,EAGAG,EAAA,gBAAAC,EAAAV,CAAA,CAAA,GAEA,OAAAW,EAAAC,EAAA,CAAA,SAAAJ,EAAAG,EAGME,EAAC,CAAA,UAAA,GACU,QAAA,WACD,QAAAX,EACR,GAAA,CAAA,GAAAN,EAAA,OAAA,OAAA,GAAA,GAAA,EAC2C,cAAA,8BAC/B,SAAAkB,EAAAC,EAAA,CAAA,cAAA,SAAA,SAAA,CAGVD,EAAAC,EAAC,CAAA,QAAA,OACS,eAAA,SACO,WAAA,SACJ,GAAA,OACR,SAAA,CAEHJ,EAAAK,EAAA,CAAA,KAAAf,EAAA,GAAA,CAAA,GAAAJ,EAAA,GAAA,EAAA,GAAA,GAAA,CAAA,CAAA,EAA6DY,CAC5D,CAAA,CAAA,EACHH,CACC,EAAA,CACH,CAAA,EAAAK,EAGFE,EAAC,CAAA,UAAA,GACU,QAAA,WACD,QAAAX,EACR,GAAA,CAAA,GAAAN,EAAA,OAAA,MAAA,EACkC,UAAAe,EAAAK,EAAA,CAAA,KAAAf,EAAA,GAAAJ,EAAA,EACc,cAAA,iCACpC,SAAAY,CAEX,CAAA,CAAA,CAAA,CAKX"}