{"version":3,"file":"IconList-f5ad5ea1.js","sources":["../../src/components/IconList.tsx"],"sourcesContent":["import React from 'react'\nimport IconSvg, { IconSvgProps } from './IconSvg/IconSvg'\n\nexport type IconListProps = {\n  iconConfigs: {\n    [index: string]: IconSvgProps // if the icon option has the \"label\" set, it will show tooltip in IconSvg\n  }\n  iconNames: string[]\n  useTheme?: boolean\n  useBackground?: boolean\n}\n\nconst IconList: React.FunctionComponent<IconListProps> = props => {\n  const { iconConfigs, iconNames, useTheme, useBackground } = props\n  let noMatch: boolean = false\n  const css = useTheme ? 'icon-list themed' : 'icon-list'\n  const componentCss = useBackground ? `${css} bg-circle` : css\n\n  const buildIconList = () => {\n    const unique = Array.from(new Set(iconNames))\n    return unique.map((el: any) => {\n      const iconConfig = iconConfigs[el]\n      // if this data type value doesn't have a matching icon, we use the \"other\" icon\n      if (!iconConfig) {\n        noMatch = true\n        return\n      } else {\n        return <IconSvg key={el} {...iconConfig} />\n      }\n    })\n  }\n\n  return (\n    <span className={componentCss}>\n      {buildIconList()}\n      {noMatch && iconConfigs['other'] ? (\n        <IconSvg {...iconConfigs['other']} />\n      ) : (\n        <></>\n      )}\n    </span>\n  )\n}\n\nexport default IconList\n"],"names":["IconList","props","iconConfigs","iconNames","useTheme","useBackground","noMatch","css","componentCss","jsxs","el","iconConfig","jsx","IconSvg","Fragment"],"mappings":"sGAYA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,YAAAC,EAAA,UAAAC,EAAA,SAAAC,EAAA,cAAAC,CAAA,EAAAJ,EACA,IAAAK,EAAA,GACA,MAAAC,EAAAH,EAAA,mBAAA,YACAI,EAAAH,EAAA,GAAAE,cAAAA,EAgBA,OAAAE,EAAA,OAAA,CAAA,UAAAD,EAAA,SAAA,EAdA,IACE,MAAA,KAAA,IAAA,IAAAL,CAAA,CAAA,EACA,IAAAO,GAAA,CACE,MAAAC,EAAAT,EAAAQ,CAAA,EAEA,GAAAC,EAIE,OAAAC,EAAAC,EAAA,CAAA,GAAAF,CAAA,EAAAD,CAAA,EAHAJ,EAAA,EAIF,CAAA,GAMC,EAAcA,GAAAJ,EAAA,MAAAU,EAAAC,EAAA,CAAA,GAAAX,EAAA,KAAA,CAAA,EAAAU,EAAAE,EAAA,CAAA,CAAA,CAIX,CAAA,CAAA,CAIV"}