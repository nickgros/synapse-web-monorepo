import{a5 as o,a6 as s,a7 as n,a8 as E,a9 as c,i as _,aa as l}from"./SynapseClient-773213a5.js";const i="Synapse Storage",g=1;function u(e){switch(e.concreteType){case c:return{endpoint:e.endpointUrl,bucket:e.bucket,fileKey:e.fileKey};case E:case n:return{url:a(e)};case s:case o:return{location:a(e)};default:throw new Error(`Couldn't determine location name for file handle: ${JSON.stringify(e)}`)}}function a(e){switch(e.concreteType){case E:return e.filePath;case c:return e.bucket;case n:return e.externalURL;case s:return[null,g].includes(e.storageLocationId)?i:`s3://${e.bucketName}`;case o:return`gs://${e.bucketName}`;default:throw new Error(`Couldn't determine location name for file handle: ${JSON.stringify(e)}`)}}function L(e){let r;return e.entityType===_.FILE&&(r=e.fileHandles.filter(t=>t.id===e.entity.dataFileHandleId)[0]),r}function T(e){let r=null;if(e)switch(e.concreteType){case"org.sagebionetworks.repo.model.file.S3UploadDestination":r=i;break;case"org.sagebionetworks.repo.model.file.ExternalUploadDestination":if(r=e.url,e.uploadType===l.SFTP){const t=r.lastIndexOf("/");t&&(r=r.substring(0,t))}break;case"org.sagebionetworks.repo.model.file.ExternalS3UploadDestination":r="s3://"+e.bucket+"/",e.baseKey!=null&&(r+=e.baseKey);break;case"org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination":r="gs://"+e.bucket+"/",e.baseKey!=null&&(r+=e.baseKey);break;case"org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination":r=e.endpointUrl+"/"+e.bucket;break}return r}export{a,u as b,T as c,L as g};
//# sourceMappingURL=FileHandleUtils-9cac4c54.js.map
