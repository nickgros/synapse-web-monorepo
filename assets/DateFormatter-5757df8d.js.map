{"version":3,"file":"DateFormatter-5757df8d.js","sources":["../../src/utils/functions/DateFormatter.ts"],"sourcesContent":["import SynapseClient from '../../synapse-client'\nimport dayjs, { Dayjs } from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport localizedFormat from 'dayjs/plugin/localizedFormat'\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(advancedFormat)\ndayjs.extend(localizedFormat)\n\nexport function formatDate(time: Dayjs, pattern?: string): string {\n  if (!pattern) {\n    // By default, only show timezone if using UTC time\n    pattern = 'M/D/YYYY h:mm A'\n    if (SynapseClient.getUseUtcTimeFromCookie()) {\n      pattern += ' z'\n    }\n  }\n  if (SynapseClient.getUseUtcTimeFromCookie()) {\n    return dayjs(time).tz('utc').format(pattern)\n  } else {\n    return dayjs(time).tz(dayjs.tz.guess()).format(pattern)\n  }\n}\n"],"names":["dayjs","utc","timezone","advancedFormat","localizedFormat","formatDate","time","pattern","SynapseClient"],"mappings":"sOAOAA,EAAM,OAAOC,CAAG,EAChBD,EAAM,OAAOE,CAAQ,EACrBF,EAAM,OAAOG,CAAc,EAC3BH,EAAM,OAAOI,CAAe,EAEZ,SAAAC,EAAWC,EAAaC,EAA0B,CAQ5D,OAPCA,IAEOA,EAAA,kBACNC,EAAc,4BACLD,GAAA,OAGXC,EAAc,0BACTR,EAAMM,CAAI,EAAE,GAAG,KAAK,EAAE,OAAOC,CAAO,EAEpCP,EAAMM,CAAI,EAAE,GAAGN,EAAM,GAAG,OAAO,EAAE,OAAOO,CAAO,CAE1D"}