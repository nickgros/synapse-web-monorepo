import{l as m}from"./index-8a3c600e.js";import{cL as s,ar as I,as as _}from"./SynapseClient-a57981a2.js";import{g as E,h as S,m as e}from"./MockSubmission-09305ad4.js";import{M as i}from"./getEndpoint-ac94413e.js";import{g as R}from"./tableQueryHandlers-9932a0e2.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-59be1fd8.js";import{S as g}from"./SubmissionPage-4ddbf414.js";import{a as C}from"./userProfileHandlers-0412dbcf.js";import"./_commonjsHelpers-042e6b4d.js";import"./util-07d2b794.js";import"./SynapseConstants-351603e3.js";import"./OrientationBanner-646a27ec.js";import"./jsx-runtime-095bf462.js";import"./index-8db94870.js";import"./FullWidthAlert-4144e1c5.js";import"./AlertTitle-2a627105.js";import"./styled-29603136.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-8498a53a.js";import"./createSvgIcon-cc5dda5a.js";import"./Paper-e7d00d51.js";import"./IconButton-5d241967.js";import"./ButtonBase-2d6e1c83.js";import"./emotion-react.browser.esm-f80eee79.js";import"./assertThisInitialized-081f9914.js";import"./inheritsLoose-c82a83d4.js";import"./TransitionGroupContext-979937b1.js";import"./useForkRef-1b9aecd1.js";import"./useIsFocusVisible-bbf13f29.js";import"./Typography-387311b4.js";import"./extendSxProp-51f2db60.js";import"./Stack-16937500.js";import"./Box-653de305.js";import"./useTheme-81f60015.js";import"./Grow-e114a38b.js";import"./isHostComponent-fa76b8d9.js";import"./index-8ce4a492.js";import"./utils-6fd1852e.js";import"./ClickAwayListener-ce43512b.js";import"./Tooltip-f9c1481b.js";import"./Button-5c815620.js";import"./Link-c02845c3.js";import"./isArray-5e3f9107.js";import"./dayjs.min-8d4ef725.js";import"./index-58d3fd43.js";import"./CheckCircleTwoTone-0531502d.js";import"./inputBaseClasses-dd60d6ee.js";import"./Fade-59e1463e.js";import"./mock_file_handle-ac49ece2.js";import"./mock_user_profile-4c1267b7.js";import"./times-5a4c1d15.js";import"./_baseTimes-8cccc40f.js";import"./isSymbol-7c514724.js";import"./mockWiki-d6bbba7e.js";import"./uniqueId-4d05949d.js";import"./toString-cc90cb98.js";import"./cloneDeep-2b196a89.js";import"./_baseClone-a72e7d91.js";import"./_Uint8Array-4f995914.js";import"./_MapCache-31fd85eb.js";import"./_isIndex-af14b756.js";import"./DateFormatter-67e11a32.js";import"./useDataAccessSubmission-7edd4c4a.js";import"./useMutation-4912c071.js";import"./useInfiniteQuery-e2e29633.js";import"./useAccessRequirements-812f67b3.js";import"./sortBy-d5f22d2f.js";import"./hasIn-f3277cc0.js";import"./_cacheHas-cc896dc2.js";import"./_setToArray-3d6ec6fd.js";import"./_baseFor-d254fa1e.js";import"./_baseRest-dc4e4b33.js";import"./_isIterateeCall-2963c416.js";import"./ConfirmationDialog-5e04f820.js";import"./jsx-runtime_commonjs-proxy-255f87f5.js";import"./createChainedFunction-0bab83cf.js";import"./ownerWindow-2c76219e.js";import"./isMuiElement-08f54e3c.js";import"./WideButton-f1365c73.js";import"./IsType-924faa40.js";import"./LoadingScreen-7013a393.js";import"./LinearProgress-b19ca625.js";import"./Backdrop-678bb8a2.js";import"./UserCard-5f8566fa.js";import"./SkeletonTable-5d74bfad.js";import"./Skeleton-877784f8.js";import"./IconSvg-084c7972.js";import"./ErrorOutlined-44a893d4.js";import"./InfoOutlined-43adcfd5.js";import"./ToastMessage-27c60e7f.js";import"./hasClass-ec9efd32.js";import"./Popover-c1ae6992.js";import"./Modal-47901d1e.js";import"./getScrollbarSize-ac846fe6.js";import"./useTeamMembers-d4e4449d.js";import"./RegularExpressions-bc0adf55.js";import"./react-intersection-observer.modern-64b519d2.js";import"./EntityTypeUtils-28f5c3c2.js";import"./EntityIcon-5689870f.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./index.modern-3065d269.js";import"./mapValues-983fc0db.js";import"./isPlainObject-419b8fb9.js";import"./now-7dd5f6e5.js";import"./unCamelCase-16efb97c.js";import"./without-a640ab3f.js";import"./isArrayLikeObject-62d8341a.js";import"./pick-2397acfc.js";import"./_baseSlice-cf92e063.js";import"./uniq-52460d17.js";import"./RequestDownloadCard-f8248846.js";import"./ActionRequiredCard-f8c2b910.js";import"./Icon-4235ae4b.js";import"./factory-837f2467.js";import"./SqlFunctions-e9b055be.js";import"./useEntity-2dac4a36.js";import"./SynapseTableConstants-942d2b0b.js";import"./use-deep-compare-effect.esm-08e85271.js";import"./index-5d0cf067.js";import"./useDownloadList-1ce749d3.js";import"./useGetQueryResultBundle-0745a0f4.js";import"./merge-7d2955f1.js";import"./NoSearchResults-460db635.js";import"./NoData-59ea70fa.js";import"./index-953d39fd.js";import"./queryUtils-2f4c3cc4.js";import"./UserSearchBoxV2-9fc74695.js";import"./Select-457c486b.esm-8a18d265.js";import"./isNativeReflectConstruct-e378569d.js";import"./UserOrTeamBadge-2d51297a.js";import"./StandaloneLoginForm-c8cd047a.js";import"./LoginFlowBackButton-3ed86f71.js";import"./TextField-ffa078b8.js";import"./InputLabel-fc988d78.js";import"./MenuList-524109eb.js";import"./TextField-4b9e68d2.js";import"./DialogTitle-baf4ba5a.js";import"./RadioGroup-18e2828d.js";import"./Form-3a0caad7.js";import"./ThemeProvider-c7f6a893.js";import"./Col-43777690.js";import"./createWithBsPrefix-b23c829e.js";import"./FileUpload-b35efd14.js";import"./Divider-96abe89d.js";import"./dividerClasses-045a8bec.js";import"./AuthenticatedRequirement-a92d11d8.js";import"./RequirementItem-552772fc.js";import"./ConditionalWrapper-51b8d1ed.js";import"./Avatar-00f136a8.js";import"./CertificationRequirement-cbc832b6.js";import"./ValidationRequirement-a8a2b49e.js";import"./TwoFactorAuthEnabledRequirement-fa7a2c1d.js";import"./TwoFactorEnrollmentForm-8f3458a1.js";import"./LeftRightPanel-bf2dbd43.js";import"./ElementWithTooltip-d9007d60.js";import"./Tabs-5a3a3764.js";import"./QueryCount-f284583d.js";import"./RangeSlider-8eb02b35.js";import"./react-sizeme-0d7fb727.js";import"./ColorGradient-fc5a110b.js";import"./colorPalette-43310703.js";import"./SelectionCriteriaPill-82633648.js";import"./ErrorChip-4d6639ce.js";import"./IconList-c5cc03ef.js";import"./UserCardList-f5c78a33.js";import"./EntityLink-9173de6c.js";import"./SynapseVideo-607d2704.js";import"./WarningDialog-39f2b51e.js";import"./RejectDataAccessRequestModal-f83d096d.js";import"./immutable.es-400ccb6d.js";import"./FormControlLabel-d1d0ee28.js";import"./upperFirst-79e605a3.js";import"./toLower-271fcf43.js";import"./mockFileEntity-022cc6e0.js";const ko={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",parameters:{msw:{handlers:[...C(i),...E(i),m.rest.get(`${i}${s(":id")}`,async(o,t,r)=>{const d=S.find(u=>o.params.id===u.id);return t(r.status(200),r.json(d))}),m.rest.get(`${i}${I(":id")}`,async(o,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${i}${_(":id")}`,async(o,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${i}/repo/v1/accessRequirement/:id/acl`,async(o,t,r)=>t(r.status(200),r.json({id:o.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...R(O),m.rest.put(`${i}${s(":id")}`,async(o,t,r)=>t(r.status(201),r.json(await o.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(mockRejectionReasonsTableQueryResultBundle), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Do=["Demo"];export{p as Demo,Do as __namedExportsOrder,ko as default};
//# sourceMappingURL=SubmissionPage.stories-448d87d2.js.map
