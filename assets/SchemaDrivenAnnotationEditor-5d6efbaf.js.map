{"version":3,"file":"SchemaDrivenAnnotationEditor-5d6efbaf.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormGroup/formGroupClasses.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormGroup/FormGroup.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItem/listItemClasses.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemSecondaryAction/listItemSecondaryActionClasses.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItemSecondaryAction/ListItemSecondaryAction.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ListItem/ListItem.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/useRadioGroup.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/radioClasses.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/Radio.js","../../../../node_modules/.pnpm/@mui+material@5.13.7_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/Add.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/ArrowDownward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/ArrowUpward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/esm/HelpOutline.js","../../src/synapse-queries/entity/useEntityBoundSchema.ts","../../src/synapse-queries/entity/useSchema.ts","../../../../node_modules/.pnpm/@rjsf+core@5.12.1_@rjsf+utils@5.12.1_react@18.2.0/node_modules/@rjsf/core/lib/withTheme.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Add.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/AddButton/AddButton.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/ArrayFieldItemTemplate/ArrayFieldItemTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/ArrayFieldTemplate/ArrayFieldTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/BaseInputTemplate/BaseInputTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/DescriptionField/DescriptionField.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Error.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/ErrorList/ErrorList.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/ArrowDownward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/ArrowUpward.js","../../../../node_modules/.pnpm/@mui+icons-material@5.13.7_@mui+material@5.13.7_@types+react@18.0.27_react@18.2.0/node_modules/@mui/icons-material/Remove.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/IconButton/IconButton.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/FieldErrorTemplate/FieldErrorTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/FieldHelpTemplate/FieldHelpTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/FieldTemplate/FieldTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/ObjectFieldTemplate/ObjectFieldTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/SubmitButton/SubmitButton.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/TitleField/TitleField.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/Templates/Templates.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/CheckboxWidget/CheckboxWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/CheckboxesWidget/CheckboxesWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/RadioWidget/RadioWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/RangeWidget/RangeWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/SelectWidget/SelectWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/TextareaWidget/TextareaWidget.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/Widgets/Widgets.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/Theme/Theme.js","../../../../node_modules/.pnpm/@rjsf+mui@5.12.1_@emotion+react@11.11.1_@emotion+styled@11.11.0_@mui+icons-material@5.13.7_@m_xtiekk75f3tpvg5e224ahtepae/node_modules/@rjsf/mui/lib/MuiForm/MuiForm.js","../../src/assets/icons/AddToList.tsx","../../src/components/SchemaDrivenAnnotationEditor/AnnotationEditorUtils.ts","../../src/components/SchemaDrivenAnnotationEditor/template/AdditionalPropertyContext.tsx","../../src/components/SchemaDrivenAnnotationEditor/field/AdditionalPropertiesSchemaField.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/BooleanWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/DateTimeWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ObjectFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/widget/TextWidget.tsx","../../src/components/SchemaDrivenAnnotationEditor/field/CustomObjectField.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldItemTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/WrapIfAdditionalTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldTitleTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ButtonTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldDescriptionTable.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/DescriptionFieldTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/ArrayFieldDescriptionTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/BaseInputTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/template/FieldErrorTemplate.tsx","../../src/components/SchemaDrivenAnnotationEditor/SchemaDrivenAnnotationEditor.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemUtilityClass(slot) {\n  return generateUtilityClass('MuiListItem', slot);\n}\nconst listItemClasses = generateUtilityClasses('MuiListItem', ['root', 'container', 'focusVisible', 'dense', 'alignItemsFlexStart', 'disabled', 'divider', 'gutters', 'padding', 'button', 'secondaryAction', 'selected']);\nexport default listItemClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemSecondaryActionClassesUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemSecondaryAction', slot);\n}\nconst listItemSecondaryActionClasses = generateUtilityClasses('MuiListItemSecondaryAction', ['root', 'disableGutters']);\nexport default listItemSecondaryActionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport { getListItemSecondaryActionClassesUtilityClass } from './listItemSecondaryActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disableGutters,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getListItemSecondaryActionClassesUtilityClass, classes);\n};\nconst ListItemSecondaryActionRoot = styled('div', {\n  name: 'MuiListItemSecondaryAction',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  right: 16,\n  top: '50%',\n  transform: 'translateY(-50%)'\n}, ownerState.disableGutters && {\n  right: 0\n}));\n\n/**\n * Must be used as the last child of ListItem to function properly.\n */\nconst ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemSecondaryAction'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    disableGutters: context.disableGutters\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemSecondaryActionRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default ListItemSecondaryAction;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"],\n  _excluded2 = [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"disablePadding\", \"divider\", \"focusVisibleClassName\", \"secondaryAction\", \"selected\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@mui/utils';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemClasses, { getListItemUtilityClass } from './listItemClasses';\nimport { listItemButtonClasses } from '../ListItemButton';\nimport ListItemSecondaryAction from '../ListItemSecondaryAction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters, !ownerState.disablePadding && styles.padding, ownerState.button && styles.button, ownerState.hasSecondaryAction && styles.secondaryAction];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    button,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', !disablePadding && 'padding', divider && 'divider', disabled && 'disabled', button && 'button', alignItems === 'flex-start' && 'alignItemsFlexStart', hasSecondaryAction && 'secondaryAction', selected && 'selected'],\n    container: ['container']\n  };\n  return composeClasses(slots, getListItemUtilityClass, classes);\n};\nexport const ListItemRoot = styled('div', {\n  name: 'MuiListItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  width: '100%',\n  boxSizing: 'border-box',\n  textAlign: 'left'\n}, !ownerState.disablePadding && _extends({\n  paddingTop: 8,\n  paddingBottom: 8\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, !!ownerState.secondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}), !!ownerState.secondaryAction && {\n  [`& > .${listItemButtonClasses.root}`]: {\n    paddingRight: 48\n  }\n}, {\n  [`&.${listItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.button && {\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  }\n}, ownerState.hasSecondaryAction && {\n  // Add some space to avoid collision as `ListItemSecondaryAction`\n  // is absolutely positioned.\n  paddingRight: 48\n}));\nconst ListItemContainer = styled('li', {\n  name: 'MuiListItem',\n  slot: 'Container',\n  overridesResolver: (props, styles) => styles.container\n})({\n  position: 'relative'\n});\n\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItem'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      button = false,\n      children: childrenProp,\n      className,\n      component: componentProp,\n      components = {},\n      componentsProps = {},\n      ContainerComponent = 'li',\n      ContainerProps: {\n        className: ContainerClassName\n      } = {},\n      dense = false,\n      disabled = false,\n      disableGutters = false,\n      disablePadding = false,\n      divider = false,\n      focusVisibleClassName,\n      secondaryAction,\n      selected = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    autoFocus,\n    button,\n    dense: childContext.dense,\n    disabled,\n    disableGutters,\n    disablePadding,\n    divider,\n    hasSecondaryAction,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  const Root = slots.root || components.Root || ListItemRoot;\n  const rootProps = slotProps.root || componentsProps.root || {};\n  const componentProps = _extends({\n    className: clsx(classes.root, rootProps.className, className),\n    disabled\n  }, other);\n  let Component = componentProp || 'li';\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(listItemClasses.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  // v4 implementation, deprecated in v5, will be removed in v6\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component;\n\n    // Avoid nesting of li > li.\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n    return /*#__PURE__*/_jsx(ListContext.Provider, {\n      value: childContext,\n      children: /*#__PURE__*/_jsxs(ListItemContainer, _extends({\n        as: ContainerComponent,\n        className: clsx(classes.container, ContainerClassName),\n        ref: handleRef,\n        ownerState: ownerState\n      }, ContainerProps, {\n        children: [/*#__PURE__*/_jsx(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n          as: Component,\n          ownerState: _extends({}, ownerState, rootProps.ownerState)\n        }, componentProps, {\n          children: children\n        })), children.pop()]\n      }))\n    });\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      as: Component,\n      ref: handleRef\n    }, !isHostComponent(Root) && {\n      ownerState: _extends({}, ownerState, rootProps.ownerState)\n    }, componentProps, {\n      children: [children, secondaryAction && /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: secondaryAction\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the list item is a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  button: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children);\n\n    // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n    let secondaryActionIndex = -1;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    }\n\n    //  is ListItemSecondaryAction the last child of ListItem\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('MUI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   * @deprecated\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   * @deprecated\n   */\n  ContainerProps: PropTypes.object,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, all padding is removed.\n   * @default false\n   */\n  disablePadding: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The element to display at the end of ListItem.\n   */\n  secondaryAction: PropTypes.node,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   * @deprecated checkout [ListItemButton](/material-ui/api/list-item-button/) instead\n   */\n  selected: PropTypes.bool,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItem;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span')({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary']);\nexport default radioClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n}), 'HelpOutline');","import { UseQueryOptions, useQuery } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\nimport { JsonSchemaObjectBinding } from '@sage-bionetworks/synapse-types'\nimport { ValidationResults } from '@sage-bionetworks/synapse-types'\n\nexport function useGetSchemaBinding(\n  entityId: string,\n  options?: UseQueryOptions<JsonSchemaObjectBinding | null, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n  return useQuery<JsonSchemaObjectBinding | null, SynapseClientError>(\n    keyFactory.getEntityBoundJsonSchemaQueryKey(entityId),\n    () => SynapseClient.getSchemaBinding(entityId, accessToken),\n    options,\n  )\n}\n\nexport function useGetValidationResults(\n  entityId: string,\n  options?: UseQueryOptions<ValidationResults, SynapseClientError>,\n) {\n  const { accessToken, keyFactory } = useSynapseContext()\n\n  return useQuery<ValidationResults, SynapseClientError>(\n    keyFactory.getEntitySchemaValidationResultsQueryKey(entityId),\n    () => SynapseClient.getSchemaValidationResults(entityId, accessToken),\n    options,\n  )\n}\n","/*\n * Hooks for accessing services related to JSON Schemas in the Synapse REST API\n */\n\nimport { JSONSchema7 } from 'json-schema'\nimport { useQuery, UseQueryOptions } from 'react-query'\nimport SynapseClient from '../../synapse-client'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { useSynapseContext } from '../../utils/context/SynapseContext'\n\nexport function useGetSchema(\n  schema$id: string,\n  options?: UseQueryOptions<JSONSchema7, SynapseClientError>,\n) {\n  const { keyFactory } = useSynapseContext()\n  return useQuery<JSONSchema7, SynapseClientError>(\n    keyFactory.getValidationSchemaQueryKey(schema$id),\n    async () => {\n      const response = await SynapseClient.getValidationSchema(schema$id)\n      return response.validationSchema\n    },\n    options,\n  )\n}\n","import { __rest } from \"tslib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport Form from './components/Form';\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme(themeProps) {\n    return forwardRef((_a, ref) => {\n        var _b;\n        var { fields, widgets, templates } = _a, directProps = __rest(_a, [\"fields\", \"widgets\", \"templates\"]);\n        fields = Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.fields), fields);\n        widgets = Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.widgets), widgets);\n        templates = Object.assign(Object.assign(Object.assign({}, themeProps === null || themeProps === void 0 ? void 0 : themeProps.templates), templates), { ButtonTemplates: Object.assign(Object.assign({}, (_b = themeProps === null || themeProps === void 0 ? void 0 : themeProps.templates) === null || _b === void 0 ? void 0 : _b.ButtonTemplates), templates === null || templates === void 0 ? void 0 : templates.ButtonTemplates) });\n        return (_jsx(Form, Object.assign({}, themeProps, directProps, { fields: fields, widgets: widgets, templates: templates, ref: ref })));\n    });\n}\n//# sourceMappingURL=withTheme.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","import { __rest } from \"tslib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport AddIcon from '@mui/icons-material/Add';\nimport IconButton from '@mui/material/IconButton';\nimport { TranslatableString } from '@rjsf/utils';\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton(_a) {\n    var { uiSchema, registry } = _a, props = __rest(_a, [\"uiSchema\", \"registry\"]);\n    const { translateString } = registry;\n    return (_jsx(IconButton, Object.assign({ title: translateString(TranslatableString.AddItemButton) }, props, { color: 'primary' }, { children: _jsx(AddIcon, {}) })));\n}\n//# sourceMappingURL=AddButton.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate(props) {\n    const { children, disabled, hasToolbar, hasCopy, hasMoveDown, hasMoveUp, hasRemove, index, onCopyIndexClick, onDropIndexClick, onReorderClick, readonly, uiSchema, registry, } = props;\n    const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } = registry.templates.ButtonTemplates;\n    const btnStyle = {\n        flex: 1,\n        paddingLeft: 6,\n        paddingRight: 6,\n        fontWeight: 'bold',\n        minWidth: 0,\n    };\n    return (_jsxs(Grid, Object.assign({ container: true, alignItems: 'center' }, { children: [_jsx(Grid, Object.assign({ item: true, xs: true, style: { overflow: 'auto' } }, { children: _jsx(Box, Object.assign({ mb: 2 }, { children: _jsx(Paper, Object.assign({ elevation: 2 }, { children: _jsx(Box, Object.assign({ p: 2 }, { children: children })) })) })) })), hasToolbar && (_jsxs(Grid, Object.assign({ item: true }, { children: [(hasMoveUp || hasMoveDown) && (_jsx(MoveUpButton, { style: btnStyle, disabled: disabled || readonly || !hasMoveUp, onClick: onReorderClick(index, index - 1), uiSchema: uiSchema, registry: registry })), (hasMoveUp || hasMoveDown) && (_jsx(MoveDownButton, { style: btnStyle, disabled: disabled || readonly || !hasMoveDown, onClick: onReorderClick(index, index + 1), uiSchema: uiSchema, registry: registry })), hasCopy && (_jsx(CopyButton, { style: btnStyle, disabled: disabled || readonly, onClick: onCopyIndexClick(index), uiSchema: uiSchema, registry: registry })), hasRemove && (_jsx(RemoveButton, { style: btnStyle, disabled: disabled || readonly, onClick: onDropIndexClick(index), uiSchema: uiSchema, registry: registry }))] })))] })));\n}\n//# sourceMappingURL=ArrayFieldItemTemplate.js.map","import { __rest } from \"tslib\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport { getTemplate, getUiOptions, } from '@rjsf/utils';\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate(props) {\n    const { canAdd, disabled, idSchema, uiSchema, items, onAddClick, readonly, registry, required, schema, title } = props;\n    const uiOptions = getUiOptions(uiSchema);\n    const ArrayFieldDescriptionTemplate = getTemplate('ArrayFieldDescriptionTemplate', registry, uiOptions);\n    const ArrayFieldItemTemplate = getTemplate('ArrayFieldItemTemplate', registry, uiOptions);\n    const ArrayFieldTitleTemplate = getTemplate('ArrayFieldTitleTemplate', registry, uiOptions);\n    // Button templates are not overridden in the uiSchema\n    const { ButtonTemplates: { AddButton }, } = registry.templates;\n    return (_jsx(Paper, Object.assign({ elevation: 2 }, { children: _jsxs(Box, Object.assign({ p: 2 }, { children: [_jsx(ArrayFieldTitleTemplate, { idSchema: idSchema, title: uiOptions.title || title, schema: schema, uiSchema: uiSchema, required: required, registry: registry }), _jsx(ArrayFieldDescriptionTemplate, { idSchema: idSchema, description: uiOptions.description || schema.description, schema: schema, uiSchema: uiSchema, registry: registry }), _jsxs(Grid, Object.assign({ container: true }, { children: [items &&\n                            items.map((_a) => {\n                                var { key } = _a, itemProps = __rest(_a, [\"key\"]);\n                                return (_jsx(ArrayFieldItemTemplate, Object.assign({}, itemProps), key));\n                            }), canAdd && (_jsx(Grid, Object.assign({ container: true, justifyContent: 'flex-end' }, { children: _jsx(Grid, Object.assign({ item: true }, { children: _jsx(Box, Object.assign({ mt: 2 }, { children: _jsx(AddButton, { className: 'array-item-add', onClick: onAddClick, disabled: disabled || readonly, uiSchema: uiSchema, registry: registry }) })) })) })))] }), `array-item-list-${idSchema.$id}`)] })) })));\n}\n//# sourceMappingURL=ArrayFieldTemplate.js.map","import { __rest } from \"tslib\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport TextField from '@mui/material/TextField';\nimport { ariaDescribedByIds, examplesId, getInputProps, labelValue, } from '@rjsf/utils';\nconst TYPES_THAT_SHRINK_LABEL = ['date', 'datetime-local', 'file', 'time'];\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate(props) {\n    const { id, name, // remove this from textFieldProps\n    placeholder, required, readonly, disabled, type, label, hideLabel, value, onChange, onChangeOverride, onBlur, onFocus, autofocus, options, schema, uiSchema, rawErrors = [], formContext, registry, InputLabelProps } = props, textFieldProps = __rest(props, [\"id\", \"name\", \"placeholder\", \"required\", \"readonly\", \"disabled\", \"type\", \"label\", \"hideLabel\", \"value\", \"onChange\", \"onChangeOverride\", \"onBlur\", \"onFocus\", \"autofocus\", \"options\", \"schema\", \"uiSchema\", \"rawErrors\", \"formContext\", \"registry\", \"InputLabelProps\"]);\n    const inputProps = getInputProps(schema, type, options);\n    // Now we need to pull out the step, min, max into an inner `inputProps` for material-ui\n    const { step, min, max } = inputProps, rest = __rest(inputProps, [\"step\", \"min\", \"max\"]);\n    const otherProps = Object.assign({ inputProps: Object.assign({ step,\n            min,\n            max }, (schema.examples ? { list: examplesId(id) } : undefined)) }, rest);\n    const _onChange = ({ target: { value } }) => onChange(value === '' ? options.emptyValue : value);\n    const _onBlur = ({ target: { value } }) => onBlur(id, value);\n    const _onFocus = ({ target: { value } }) => onFocus(id, value);\n    const DisplayInputLabelProps = TYPES_THAT_SHRINK_LABEL.includes(type)\n        ? Object.assign(Object.assign({}, InputLabelProps), { shrink: true }) : InputLabelProps;\n    return (_jsxs(_Fragment, { children: [_jsx(TextField, Object.assign({ id: id, name: id, placeholder: placeholder, label: labelValue(label || undefined, hideLabel, false), autoFocus: autofocus, required: required, disabled: disabled || readonly }, otherProps, { value: value || value === 0 ? value : '', error: rawErrors.length > 0, onChange: onChangeOverride || _onChange, onBlur: _onBlur, onFocus: _onFocus, InputLabelProps: DisplayInputLabelProps }, textFieldProps, { \"aria-describedby\": ariaDescribedByIds(id, !!schema.examples) })), Array.isArray(schema.examples) && (_jsx(\"datalist\", Object.assign({ id: examplesId(id) }, { children: schema.examples\n                    .concat(schema.default && !schema.examples.includes(schema.default) ? [schema.default] : [])\n                    .map((example) => {\n                    return _jsx(\"option\", { value: example }, example);\n                }) })))] }));\n}\n//# sourceMappingURL=BaseInputTemplate.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Typography from '@mui/material/Typography';\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField(props) {\n    const { id, description } = props;\n    if (description) {\n        return (_jsx(Typography, Object.assign({ id: id, variant: 'subtitle2', style: { marginTop: '5px' } }, { children: description })));\n    }\n    return null;\n}\n//# sourceMappingURL=DescriptionField.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\nexports.default = _default;","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport ErrorIcon from '@mui/icons-material/Error';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { TranslatableString } from '@rjsf/utils';\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList({ errors, registry, }) {\n    const { translateString } = registry;\n    return (_jsx(Paper, Object.assign({ elevation: 2 }, { children: _jsxs(Box, Object.assign({ mb: 2, p: 2 }, { children: [_jsx(Typography, Object.assign({ variant: 'h6' }, { children: translateString(TranslatableString.ErrorsLabel) })), _jsx(List, Object.assign({ dense: true }, { children: errors.map((error, i) => {\n                        return (_jsxs(ListItem, { children: [_jsx(ListItemIcon, { children: _jsx(ErrorIcon, { color: 'error' }) }), _jsx(ListItemText, { primary: error.stack })] }, i));\n                    }) }))] })) })));\n}\n//# sourceMappingURL=ErrorList.js.map","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexports.default = _default;","import { __rest } from \"tslib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport IconButton from '@mui/material/IconButton';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport CopyIcon from '@mui/icons-material/ContentCopy';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { TranslatableString } from '@rjsf/utils';\nexport default function MuiIconButton(props) {\n    const { icon, color, uiSchema, registry } = props, otherProps = __rest(props, [\"icon\", \"color\", \"uiSchema\", \"registry\"]);\n    return (_jsx(IconButton, Object.assign({}, otherProps, { size: 'small', color: color }, { children: icon })));\n}\nexport function CopyButton(props) {\n    const { registry: { translateString }, } = props;\n    return (_jsx(MuiIconButton, Object.assign({ title: translateString(TranslatableString.CopyButton) }, props, { icon: _jsx(CopyIcon, { fontSize: 'small' }) })));\n}\nexport function MoveDownButton(props) {\n    const { registry: { translateString }, } = props;\n    return (_jsx(MuiIconButton, Object.assign({ title: translateString(TranslatableString.MoveDownButton) }, props, { icon: _jsx(ArrowDownwardIcon, { fontSize: 'small' }) })));\n}\nexport function MoveUpButton(props) {\n    const { registry: { translateString }, } = props;\n    return (_jsx(MuiIconButton, Object.assign({ title: translateString(TranslatableString.MoveUpButton) }, props, { icon: _jsx(ArrowUpwardIcon, { fontSize: 'small' }) })));\n}\nexport function RemoveButton(props) {\n    const { iconType } = props, otherProps = __rest(props, [\"iconType\"]);\n    const { registry: { translateString }, } = otherProps;\n    return (_jsx(MuiIconButton, Object.assign({ title: translateString(TranslatableString.RemoveButton) }, otherProps, { color: 'error', icon: _jsx(RemoveIcon, { fontSize: iconType === 'default' ? undefined : 'small' }) })));\n}\n//# sourceMappingURL=IconButton.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport ListItem from '@mui/material/ListItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport List from '@mui/material/List';\nimport { errorId } from '@rjsf/utils';\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate(props) {\n    const { errors = [], idSchema } = props;\n    if (errors.length === 0) {\n        return null;\n    }\n    const id = errorId(idSchema);\n    return (_jsx(List, Object.assign({ dense: true, disablePadding: true }, { children: errors.map((error, i) => {\n            return (_jsx(ListItem, Object.assign({ disableGutters: true }, { children: _jsx(FormHelperText, Object.assign({ id: id }, { children: error })) }), i));\n        }) })));\n}\n//# sourceMappingURL=FieldErrorTemplate.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { helpId } from '@rjsf/utils';\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate(props) {\n    const { idSchema, help } = props;\n    if (!help) {\n        return null;\n    }\n    const id = helpId(idSchema);\n    return _jsx(FormHelperText, Object.assign({ id: id }, { children: help }));\n}\n//# sourceMappingURL=FieldHelpTemplate.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport FormControl from '@mui/material/FormControl';\nimport Typography from '@mui/material/Typography';\nimport { getTemplate, getUiOptions, } from '@rjsf/utils';\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate(props) {\n    const { id, children, classNames, style, disabled, displayLabel, hidden, label, onDropPropertyClick, onKeyChange, readonly, required, rawErrors = [], errors, help, description, rawDescription, schema, uiSchema, registry, } = props;\n    const uiOptions = getUiOptions(uiSchema);\n    const WrapIfAdditionalTemplate = getTemplate('WrapIfAdditionalTemplate', registry, uiOptions);\n    if (hidden) {\n        return _jsx(\"div\", Object.assign({ style: { display: 'none' } }, { children: children }));\n    }\n    return (_jsx(WrapIfAdditionalTemplate, Object.assign({ classNames: classNames, style: style, disabled: disabled, id: id, label: label, onDropPropertyClick: onDropPropertyClick, onKeyChange: onKeyChange, readonly: readonly, required: required, schema: schema, uiSchema: uiSchema, registry: registry }, { children: _jsxs(FormControl, Object.assign({ fullWidth: true, error: rawErrors.length ? true : false, required: required }, { children: [children, displayLabel && rawDescription ? (_jsx(Typography, Object.assign({ variant: 'caption', color: 'textSecondary' }, { children: description }))) : null, errors, help] })) })));\n}\n//# sourceMappingURL=FieldTemplate.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport Grid from '@mui/material/Grid';\nimport { canExpand, descriptionId, getTemplate, getUiOptions, titleId, } from '@rjsf/utils';\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate(props) {\n    const { description, title, properties, required, disabled, readonly, uiSchema, idSchema, schema, formData, onAddClick, registry, } = props;\n    const uiOptions = getUiOptions(uiSchema);\n    const TitleFieldTemplate = getTemplate('TitleFieldTemplate', registry, uiOptions);\n    const DescriptionFieldTemplate = getTemplate('DescriptionFieldTemplate', registry, uiOptions);\n    // Button templates are not overridden in the uiSchema\n    const { ButtonTemplates: { AddButton }, } = registry.templates;\n    return (_jsxs(_Fragment, { children: [title && (_jsx(TitleFieldTemplate, { id: titleId(idSchema), title: title, required: required, schema: schema, uiSchema: uiSchema, registry: registry })), description && (_jsx(DescriptionFieldTemplate, { id: descriptionId(idSchema), description: description, schema: schema, uiSchema: uiSchema, registry: registry })), _jsxs(Grid, Object.assign({ container: true, spacing: 2, style: { marginTop: '10px' } }, { children: [properties.map((element, index) => \n                    // Remove the <Grid> if the inner element is hidden as the <Grid>\n                    // itself would otherwise still take up space.\n                    element.hidden ? (element.content) : (_jsx(Grid, Object.assign({ item: true, xs: 12, style: { marginBottom: '10px' } }, { children: element.content }), index))), canExpand(schema, uiSchema, formData) && (_jsx(Grid, Object.assign({ container: true, justifyContent: 'flex-end' }, { children: _jsx(Grid, Object.assign({ item: true }, { children: _jsx(AddButton, { className: 'object-property-expand', onClick: onAddClick(schema), disabled: disabled || readonly, uiSchema: uiSchema, registry: registry }) })) })))] }))] }));\n}\n//# sourceMappingURL=ObjectFieldTemplate.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { getSubmitButtonOptions } from '@rjsf/utils';\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton({ uiSchema }) {\n    const { submitText, norender, props: submitButtonProps = {} } = getSubmitButtonOptions(uiSchema);\n    if (norender) {\n        return null;\n    }\n    return (_jsx(Box, Object.assign({ marginTop: 3 }, { children: _jsx(Button, Object.assign({ type: 'submit', variant: 'contained', color: 'primary' }, submitButtonProps, { children: submitText })) })));\n}\n//# sourceMappingURL=SubmitButton.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField({ id, title, }) {\n    return (_jsxs(Box, Object.assign({ id: id, mb: 1, mt: 1 }, { children: [_jsx(Typography, Object.assign({ variant: 'h5' }, { children: title })), _jsx(Divider, {})] })));\n}\n//# sourceMappingURL=TitleField.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { ADDITIONAL_PROPERTY_FLAG, TranslatableString, } from '@rjsf/utils';\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate(props) {\n    const { children, classNames, style, disabled, id, label, onDropPropertyClick, onKeyChange, readonly, required, schema, uiSchema, registry, } = props;\n    const { templates, translateString } = registry;\n    // Button templates are not overridden in the uiSchema\n    const { RemoveButton } = templates.ButtonTemplates;\n    const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n    const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n    const btnStyle = {\n        flex: 1,\n        paddingLeft: 6,\n        paddingRight: 6,\n        fontWeight: 'bold',\n    };\n    if (!additional) {\n        return (_jsx(\"div\", Object.assign({ className: classNames, style: style }, { children: children })));\n    }\n    const handleBlur = ({ target }) => onKeyChange(target.value);\n    return (_jsxs(Grid, Object.assign({ container: true, alignItems: 'center', spacing: 2, className: classNames, style: style }, { children: [_jsx(Grid, Object.assign({ item: true, xs: true }, { children: _jsx(TextField, { fullWidth: true, required: required, label: keyLabel, defaultValue: label, disabled: disabled || readonly, id: `${id}-key`, name: `${id}-key`, onBlur: !readonly ? handleBlur : undefined, type: 'text' }) })), _jsx(Grid, Object.assign({ item: true, xs: true }, { children: children })), _jsx(Grid, Object.assign({ item: true }, { children: _jsx(RemoveButton, { iconType: 'default', style: btnStyle, disabled: disabled || readonly, onClick: onDropPropertyClick(label), uiSchema: uiSchema, registry: registry }) }))] }), `${id}-key`));\n}\n//# sourceMappingURL=WrapIfAdditionalTemplate.js.map","import AddButton from '../AddButton';\nimport ArrayFieldItemTemplate from '../ArrayFieldItemTemplate';\nimport ArrayFieldTemplate from '../ArrayFieldTemplate';\nimport BaseInputTemplate from '../BaseInputTemplate';\nimport DescriptionField from '../DescriptionField';\nimport ErrorList from '../ErrorList';\nimport { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } from '../IconButton';\nimport FieldErrorTemplate from '../FieldErrorTemplate';\nimport FieldHelpTemplate from '../FieldHelpTemplate';\nimport FieldTemplate from '../FieldTemplate';\nimport ObjectFieldTemplate from '../ObjectFieldTemplate';\nimport SubmitButton from '../SubmitButton';\nimport TitleField from '../TitleField';\nimport WrapIfAdditionalTemplate from '../WrapIfAdditionalTemplate';\nexport function generateTemplates() {\n    return {\n        ArrayFieldItemTemplate,\n        ArrayFieldTemplate,\n        BaseInputTemplate,\n        ButtonTemplates: {\n            AddButton,\n            CopyButton,\n            MoveDownButton,\n            MoveUpButton,\n            RemoveButton,\n            SubmitButton,\n        },\n        DescriptionFieldTemplate: DescriptionField,\n        ErrorListTemplate: ErrorList,\n        FieldErrorTemplate,\n        FieldHelpTemplate,\n        FieldTemplate,\n        ObjectFieldTemplate,\n        TitleFieldTemplate: TitleField,\n        WrapIfAdditionalTemplate,\n    };\n}\nexport default generateTemplates();\n//# sourceMappingURL=Templates.js.map","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { ariaDescribedByIds, descriptionId, getTemplate, labelValue, schemaRequiresTrueValue, } from '@rjsf/utils';\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function CheckboxWidget(props) {\n    var _a;\n    const { schema, id, value, disabled, readonly, label = '', hideLabel, autofocus, onChange, onBlur, onFocus, registry, options, uiSchema, } = props;\n    const DescriptionFieldTemplate = getTemplate('DescriptionFieldTemplate', registry, options);\n    // Because an unchecked checkbox will cause html5 validation to fail, only add\n    // the \"required\" attribute if the field value must be \"true\", due to the\n    // \"const\" or \"enum\" keywords\n    const required = schemaRequiresTrueValue(schema);\n    const _onChange = (_, checked) => onChange(checked);\n    const _onBlur = ({ target: { value } }) => onBlur(id, value);\n    const _onFocus = ({ target: { value } }) => onFocus(id, value);\n    const description = (_a = options.description) !== null && _a !== void 0 ? _a : schema.description;\n    return (_jsxs(_Fragment, { children: [!hideLabel && !!description && (_jsx(DescriptionFieldTemplate, { id: descriptionId(id), description: description, schema: schema, uiSchema: uiSchema, registry: registry })), _jsx(FormControlLabel, { control: _jsx(Checkbox, { id: id, name: id, checked: typeof value === 'undefined' ? false : Boolean(value), required: required, disabled: disabled || readonly, autoFocus: autofocus, onChange: _onChange, onBlur: _onBlur, onFocus: _onFocus, \"aria-describedby\": ariaDescribedByIds(id) }), label: labelValue(label, hideLabel, false) })] }));\n}\n//# sourceMappingURL=CheckboxWidget.js.map","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport { ariaDescribedByIds, enumOptionsDeselectValue, enumOptionsIsSelected, enumOptionsSelectValue, enumOptionsValueForIndex, labelValue, optionId, } from '@rjsf/utils';\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function CheckboxesWidget({ label, hideLabel, id, disabled, options, value, autofocus, readonly, required, onChange, onBlur, onFocus, }) {\n    const { enumOptions, enumDisabled, inline, emptyValue } = options;\n    const checkboxesValues = Array.isArray(value) ? value : [value];\n    const _onChange = (index) => ({ target: { checked } }) => {\n        if (checked) {\n            onChange(enumOptionsSelectValue(index, checkboxesValues, enumOptions));\n        }\n        else {\n            onChange(enumOptionsDeselectValue(index, checkboxesValues, enumOptions));\n        }\n    };\n    const _onBlur = ({ target: { value } }) => onBlur(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n    const _onFocus = ({ target: { value } }) => onFocus(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n    return (_jsxs(_Fragment, { children: [labelValue(_jsx(FormLabel, Object.assign({ required: required, htmlFor: id }, { children: label || undefined })), hideLabel), _jsx(FormGroup, Object.assign({ id: id, row: !!inline }, { children: Array.isArray(enumOptions) &&\n                    enumOptions.map((option, index) => {\n                        const checked = enumOptionsIsSelected(option.value, checkboxesValues);\n                        const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n                        const checkbox = (_jsx(Checkbox, { id: optionId(id, index), name: id, checked: checked, disabled: disabled || itemDisabled || readonly, autoFocus: autofocus && index === 0, onChange: _onChange(index), onBlur: _onBlur, onFocus: _onFocus, \"aria-describedby\": ariaDescribedByIds(id) }));\n                        return _jsx(FormControlLabel, { control: checkbox, label: option.label }, index);\n                    }) }))] }));\n}\n//# sourceMappingURL=CheckboxesWidget.js.map","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { ariaDescribedByIds, enumOptionsIndexForValue, enumOptionsValueForIndex, labelValue, optionId, } from '@rjsf/utils';\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RadioWidget({ id, options, value, required, disabled, readonly, label, hideLabel, onChange, onBlur, onFocus, }) {\n    var _a;\n    const { enumOptions, enumDisabled, emptyValue } = options;\n    const _onChange = (_, value) => onChange(enumOptionsValueForIndex(value, enumOptions, emptyValue));\n    const _onBlur = ({ target: { value } }) => onBlur(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n    const _onFocus = ({ target: { value } }) => onFocus(id, enumOptionsValueForIndex(value, enumOptions, emptyValue));\n    const row = options ? options.inline : false;\n    const selectedIndex = (_a = enumOptionsIndexForValue(value, enumOptions)) !== null && _a !== void 0 ? _a : null;\n    return (_jsxs(_Fragment, { children: [labelValue(_jsx(FormLabel, Object.assign({ required: required, htmlFor: id }, { children: label || undefined })), hideLabel), _jsx(RadioGroup, Object.assign({ id: id, name: id, value: selectedIndex, row: row, onChange: _onChange, onBlur: _onBlur, onFocus: _onFocus, \"aria-describedby\": ariaDescribedByIds(id) }, { children: Array.isArray(enumOptions) &&\n                    enumOptions.map((option, index) => {\n                        const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n                        const radio = (_jsx(FormControlLabel, { control: _jsx(Radio, { name: id, id: optionId(id, index), color: 'primary' }), label: option.label, value: String(index), disabled: disabled || itemDisabled || readonly }, index));\n                        return radio;\n                    }) }))] }));\n}\n//# sourceMappingURL=RadioWidget.js.map","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport FormLabel from '@mui/material/FormLabel';\nimport Slider from '@mui/material/Slider';\nimport { ariaDescribedByIds, labelValue, rangeSpec, } from '@rjsf/utils';\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget(props) {\n    const { value, readonly, disabled, onBlur, onFocus, options, schema, onChange, required, label, hideLabel, id } = props;\n    const sliderProps = Object.assign({ value, label, id, name: id }, rangeSpec(schema));\n    const _onChange = (_, value) => {\n        onChange(value !== null && value !== void 0 ? value : options.emptyValue);\n    };\n    const _onBlur = ({ target: { value } }) => onBlur(id, value);\n    const _onFocus = ({ target: { value } }) => onFocus(id, value);\n    return (_jsxs(_Fragment, { children: [labelValue(_jsx(FormLabel, Object.assign({ required: required, htmlFor: id }, { children: label || undefined })), hideLabel), _jsx(Slider, Object.assign({ disabled: disabled || readonly, onChange: _onChange, onBlur: _onBlur, onFocus: _onFocus, valueLabelDisplay: 'auto' }, sliderProps, { \"aria-describedby\": ariaDescribedByIds(id) }))] }));\n}\n//# sourceMappingURL=RangeWidget.js.map","import { __rest } from \"tslib\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport { ariaDescribedByIds, enumOptionsIndexForValue, enumOptionsValueForIndex, labelValue, } from '@rjsf/utils';\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function SelectWidget(_a) {\n    var { schema, id, name, // remove this from textFieldProps\n    options, label, hideLabel, required, disabled, placeholder, readonly, value, multiple, autofocus, onChange, onBlur, onFocus, rawErrors = [], registry, uiSchema, hideError, formContext } = _a, textFieldProps = __rest(_a, [\"schema\", \"id\", \"name\", \"options\", \"label\", \"hideLabel\", \"required\", \"disabled\", \"placeholder\", \"readonly\", \"value\", \"multiple\", \"autofocus\", \"onChange\", \"onBlur\", \"onFocus\", \"rawErrors\", \"registry\", \"uiSchema\", \"hideError\", \"formContext\"]);\n    const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n    multiple = typeof multiple === 'undefined' ? false : !!multiple;\n    const emptyValue = multiple ? [] : '';\n    const isEmpty = typeof value === 'undefined' || (multiple && value.length < 1) || (!multiple && value === emptyValue);\n    const _onChange = ({ target: { value } }) => onChange(enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n    const _onBlur = ({ target: { value } }) => onBlur(id, enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n    const _onFocus = ({ target: { value } }) => onFocus(id, enumOptionsValueForIndex(value, enumOptions, optEmptyVal));\n    const selectedIndexes = enumOptionsIndexForValue(value, enumOptions, multiple);\n    return (_jsx(TextField, Object.assign({ id: id, name: id, label: labelValue(label || undefined, hideLabel, false), value: isEmpty ? emptyValue : selectedIndexes, required: required, disabled: disabled || readonly, autoFocus: autofocus, placeholder: placeholder, error: rawErrors.length > 0, onChange: _onChange, onBlur: _onBlur, onFocus: _onFocus }, textFieldProps, { select // Apply this and the following props after the potential overrides defined in textFieldProps\n        : true, InputLabelProps: Object.assign(Object.assign({}, textFieldProps.InputLabelProps), { shrink: !isEmpty }), SelectProps: Object.assign(Object.assign({}, textFieldProps.SelectProps), { multiple }), \"aria-describedby\": ariaDescribedByIds(id) }, { children: Array.isArray(enumOptions) &&\n            enumOptions.map(({ value, label }, i) => {\n                const disabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(value) !== -1;\n                return (_jsx(MenuItem, Object.assign({ value: String(i), disabled: disabled }, { children: label }), i));\n            }) })));\n}\n//# sourceMappingURL=SelectWidget.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getTemplate } from '@rjsf/utils';\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextareaWidget(props) {\n    const { options, registry } = props;\n    const BaseInputTemplate = getTemplate('BaseInputTemplate', registry, options);\n    let rows = 5;\n    if (typeof options.rows === 'string' || typeof options.rows === 'number') {\n        rows = options.rows;\n    }\n    return _jsx(BaseInputTemplate, Object.assign({}, props, { multiline: true, rows: rows }));\n}\n//# sourceMappingURL=TextareaWidget.js.map","import CheckboxWidget from '../CheckboxWidget/CheckboxWidget';\nimport CheckboxesWidget from '../CheckboxesWidget/CheckboxesWidget';\nimport RadioWidget from '../RadioWidget/RadioWidget';\nimport RangeWidget from '../RangeWidget/RangeWidget';\nimport SelectWidget from '../SelectWidget/SelectWidget';\nimport TextareaWidget from '../TextareaWidget/TextareaWidget';\nexport function generateWidgets() {\n    return {\n        CheckboxWidget,\n        CheckboxesWidget,\n        RadioWidget,\n        RangeWidget,\n        SelectWidget,\n        TextareaWidget,\n    };\n}\nexport default generateWidgets();\n//# sourceMappingURL=Widgets.js.map","import { generateTemplates } from '../Templates';\nimport { generateWidgets } from '../Widgets';\nexport function generateTheme() {\n    return {\n        templates: generateTemplates(),\n        widgets: generateWidgets(),\n    };\n}\nexport default generateTheme();\n//# sourceMappingURL=Theme.js.map","import { withTheme } from '@rjsf/core';\nimport { generateTheme } from '../Theme';\nexport function generateForm() {\n    return withTheme(generateTheme());\n}\nexport default generateForm();\n//# sourceMappingURL=MuiForm.js.map","import React from 'react'\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon'\n\nconst AddToList = (props: SvgIconProps) => {\n  return (\n    <SvgIcon\n      {...props}\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M14 10H2V12H14V10ZM14 6H2V8H14V6ZM18 14V10H16V14H12V16H16V20H18V16H22V14H18ZM2 16H10V14H2V16Z\" />\n    </SvgIcon>\n  )\n}\n\nexport default AddToList\n","import { RJSFValidationError } from '@rjsf/utils'\nimport { flatMap, groupBy, isEmpty } from 'lodash-es'\nimport { ENTITY_CONCRETE_TYPE } from '@sage-bionetworks/synapse-types'\nimport { entityJsonKeys } from '../../utils/functions/EntityTypeUtils'\n\n/**\n * Strips null values from arrays in the provided form data. If the array is empty after\n * removing null values, the key is removed from the form data.\n *\n * This allows users to submit forms with empty array fields (SWC-5762)\n */\nexport function dropNullishArrayValues(\n  formData: Record<string, unknown>,\n): Record<string, unknown> {\n  const newFormData: Record<string, unknown> = {}\n  Object.keys(formData).forEach(key => {\n    let value = formData[key]\n    if (Array.isArray(value)) {\n      value = value.filter((item: any) => item != null)\n      if (!isEmpty(value)) {\n        newFormData[key] = value\n      }\n    } else {\n      newFormData[key] = value\n    }\n  })\n  return newFormData\n}\n\n/**\n * Inspects the property of the AjvError and modifies it to be comparable to simple key strings, like entity property keys.\n * @param error\n * @returns\n */\nexport function getFriendlyPropertyName(error: RJSFValidationError): string {\n  if (error.property?.startsWith('[')) {\n    // Additional properties are surrounded by brackets and quotations, so let's remove them\n    return error.property.substring(2, error.property.length - 2)\n  } else if (error.property?.startsWith('.')) {\n    return error.property.substring(1)\n  } else {\n    return error.property || ''\n  }\n}\n\nexport function getTransformErrors(concreteType?: ENTITY_CONCRETE_TYPE) {\n  return (errors: RJSFValidationError[]): RJSFValidationError[] => {\n    // Transform the errors in the following ways:\n    // - Simplify the set of errors when failing to select an enumeration defined with an anyOf (SWC-5724)\n    // - Show a custom error message when using a property that collides with an internal entity property (SWC-5678)\n\n    // Fixing anyOf errors\n    // Group the errors by the property that the error applies to\n    const grouped = groupBy(errors, error => error.property)\n    Object.keys(grouped).map(property => {\n      const errorGroup = grouped[property]\n\n      // First, see if it is an anyOf error\n      const hasAnyOfError = errorGroup.some(\n        e => e.message === 'should match some schema in anyOf',\n      )\n\n      // We determine if it's an anyOf *enum* error if all error messages in the property match one of these three messages:\n      const isEnumError =\n        hasAnyOfError &&\n        errorGroup.every(error => {\n          if (error.message === 'should be string') {\n            return true\n          } else if (error.message === 'should be equal to constant') {\n            return true\n          } else if (error.message === 'should match some schema in anyOf') {\n            return true\n          } else {\n            return false\n          }\n        })\n\n      // If it's an anyOf enum error, we just modify the first message and drop the rest\n      if (isEnumError && errorGroup.length > 0) {\n        errorGroup[0].message = 'should be equal to one of the allowed values'\n        grouped[property] = [errorGroup[0]]\n      }\n    })\n\n    // Ungroup the errors after potentially modifying them\n    errors = flatMap(grouped)\n\n    // Custom error message if the custom annotation key collides with an internal entity property\n    if (concreteType) {\n      errors = errors.map(error => {\n        const propertyName = getFriendlyPropertyName(error)\n        if (\n          propertyName &&\n          entityJsonKeys[concreteType].includes(propertyName)\n        ) {\n          error.message = `\"${propertyName}\" is a reserved internal key and cannot be used.`\n        }\n        return error\n      })\n    }\n\n    // Return the transformed errors.\n    return errors\n  }\n}\n\n/**\n * Custom annotations in Synapse are always arrays. This function converts initial data to be an array type.\n * If the initial data is an array, return the data itself.\n * If the initial data is a string, returns an array of substrings separated by commas.\n * Otherwise, wrap the data in an array.\n */\nexport function convertToArray<T>(value: T): Array<unknown> {\n  if (Array.isArray(value)) {\n    return value\n  } else if (typeof value === 'string') {\n    return value.split(',').map(s => s.trim()) // split a string of comma-separated values, then trim whitespace\n  } else {\n    return [value]\n  }\n}\n","import React, { useContext } from 'react'\n\nexport type AdditionalPropertyContextType = {\n  dropProperty: (event?: any) => void\n}\n\n/**\n * The `AdditionalPropertyContext` is a custom context object used to pass the `dropProperty` handler to the items within\n * a particular additional property.\n *\n * In RJSF, dropping an entire additional property is handled at the `object` level. In this Synapse UI,\n * we treat all additional properties (a.k.a. custom annotations) as arrays, and render the delete control at the `array`\n * level. RJSF does not normally provide the drop property handler at the `array` level, so we capture it and pass it\n * along using this context.\n */\nexport const AdditionalPropertyContext = React.createContext<\n  AdditionalPropertyContextType | undefined\n>(undefined)\n\nexport type AdditionalPropertyContextProviderProps = React.PropsWithChildren<{\n  value: AdditionalPropertyContextType\n}>\n\nexport function AdditionalPropertyContextProvider(\n  props: AdditionalPropertyContextProviderProps,\n) {\n  return (\n    <AdditionalPropertyContext.Provider value={props.value}>\n      {props.children}\n    </AdditionalPropertyContext.Provider>\n  )\n}\n\nexport const AdditionalPropertyContextConsumer =\n  AdditionalPropertyContext.Consumer\n\nexport function useAdditionalPropertyContext():\n  | AdditionalPropertyContextType\n  | undefined {\n  return useContext(AdditionalPropertyContext)\n}\n","import {\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { isEqual } from 'lodash-es'\nimport React, { useEffect, useState } from 'react'\nimport FullWidthAlert from '../../FullWidthAlert/FullWidthAlert'\nimport { convertToArray } from '../AnnotationEditorUtils'\nimport { Grid, InputLabel } from '@mui/material'\nimport { AdditionalPropertyContextProvider } from '../template/AdditionalPropertyContext'\n\n// Matches ####-##-##T##:##:##.###Z, e.g. 1970-01-01T12:00:000Z\nconst ISO_TIMESTAMP_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/\n\n// Types that correspond to the different input fields that the annotation editor supports\nconst propertyTypeArray = [\n  'String',\n  'Integer',\n  'Float',\n  'Boolean',\n  'Datetime',\n] as const\n\nexport type PropertyType = (typeof propertyTypeArray)[number]\n\nexport function guessPropertyType(list: Array<unknown>): PropertyType {\n  if (list.length === 0) {\n    // The field was just added, so default to string\n    return 'String'\n  } else if (\n    list.every(\n      item => typeof item === 'number' || item === 'NaN', // \"NaN\" is technically a float value\n    )\n  ) {\n    if (list.every(item => Number.isInteger(item))) {\n      return 'Integer'\n    } else {\n      return 'Float'\n    }\n  } else if (list.every(item => typeof item === 'boolean')) {\n    return 'Boolean'\n  } else if (\n    list.every(item => typeof item === 'string') &&\n    (list as string[]).every((item: string) => !!ISO_TIMESTAMP_REGEX.exec(item))\n  ) {\n    return 'Datetime'\n  }\n  // otherwise, default type is 'string'\n  return 'String'\n}\n\nexport function transformDataFromPropertyType(\n  list: Array<any>,\n  propertyType: PropertyType,\n) {\n  switch (propertyType) {\n    case 'Integer':\n      return list.map(item =>\n        Number.isNaN(Number(item)) ? 0 : Math.floor(Number(item)),\n      )\n\n    case 'Float':\n      return list.map(item => {\n        const asFloat = parseFloat(item as string)\n        if (Number.isNaN(asFloat)) {\n          return 'NaN'\n        } else if (Number.isInteger(asFloat)) {\n          return asFloat.toFixed(1)\n        } else {\n          return asFloat\n        }\n      })\n    case 'Datetime':\n      return list.map(item => {\n        if (typeof item === 'string' && ISO_TIMESTAMP_REGEX.exec(item)) {\n          return item\n        } else {\n          return new Date().toISOString()\n        }\n      })\n    case 'Boolean':\n      return list.map(item => !!item)\n    case 'String':\n    default:\n      return list.map(item => String(item))\n  }\n}\n\n/**\n * Maps a Synapse Annotation PropertyType to a JSON Schema that captures the type and format.\n * @param propertyType\n */\nexport function getSchemaForPropertyType(propertyType: PropertyType) {\n  switch (propertyType) {\n    case 'Datetime':\n      return { type: 'string', format: 'datetime' }\n    case 'Boolean':\n      return { type: 'boolean' }\n    case 'Float':\n      return { type: 'number' }\n    case 'Integer':\n      return { type: 'integer' }\n    case 'String':\n    default:\n      return { type: 'string' }\n  }\n}\n\n/**\n * react-jsonschema-form SchemaField override for \"additionalProperties\" only. In Synapse these are \"custom annotations\".\n * Modifies the data to provide full compatibility with Synapse annotations features.\n *\n * This component provides these enhancements to the SchemaField:\n * - Supports selecting a type, and changing the input widget appropriately\n * - Identifying the type on mount\n * - Treat all field values as arrays\n * - When the last array value is removed, remove the entire key from the form.\n * @param props\n * @returns\n */\nexport function AdditionalPropertiesSchemaField<\n  T extends Array<unknown> = Array<unknown>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(\n  props: FieldProps<T, S, F> & {\n    onDropPropertyClick: (key: string) => (event: any) => void\n  },\n) {\n  const {\n    formData,\n    onChange,\n    registry,\n    schema,\n    name,\n    onDropPropertyClick,\n    idSchema,\n  } = props\n  const id = idSchema.$id\n  const { ArrayField } = registry.fields\n  const { SelectWidget } = registry.widgets\n\n  // The type determines which widget we show.\n  const [propertyType, setPropertyType] = useState(\n    guessPropertyType(convertToArray(formData)),\n  )\n\n  // If the property type is updated, store it in a new variable where we'll show a warning if data may be lost on coersion\n  const [nextPropertyType, setNextPropertyType] = useState(propertyType)\n\n  /**\n   * This effect is invoked whenever the user attempts to change the datatype of a custom annotation.\n   */\n  useEffect(() => {\n    function onNextPropertyTypeUpdate() {\n      if (Array.isArray(formData)) {\n        const dataIsEmpty =\n          formData.length === 0 ||\n          formData.every(item => item == null || item == '')\n        const coercedList = transformDataFromPropertyType(\n          formData,\n          nextPropertyType,\n        )\n        // if the data is empty or identical after conversion, then just update the property type\n        if (dataIsEmpty || nextPropertyType !== propertyType) {\n          if (isEqual(formData, coercedList)) {\n            setPropertyType(nextPropertyType)\n          }\n        }\n      }\n    }\n\n    onNextPropertyTypeUpdate()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nextPropertyType])\n\n  /**\n   * This effect is invoked whenever the propertyType changes.\n   */\n  useEffect(() => {\n    function coerceDataAndUpdateWidget() {\n      if (Array.isArray(formData)) {\n        if (formData.every(item => item == null)) {\n          onDropPropertyClick(name)(new CustomEvent('dropEmptyProperty'))\n        } else {\n          const coercedList = transformDataFromPropertyType(\n            formData,\n            nextPropertyType,\n          ) as unknown as T\n\n          // Data conversion is non-destructive or has been confirmed by the user\n          setPropertyType(nextPropertyType)\n          // Coerce the data to match the new type\n          onChange(coercedList)\n        }\n      }\n    }\n\n    coerceDataAndUpdateWidget()\n    // Don't add other properties to dependency array because we don't want to automatically coerce input\n    // i.e. Only coerce data when the type changes, which should only be on mount or when the user explicitly chooses a new type.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propertyType])\n\n  const itemsSchema = getSchemaForPropertyType(propertyType)\n\n  // If the additional property has not yet been coerced to an array, trigger an update to coerce and render nothing.\n  // We must do this because RJSF does not currently batch these kinds of updates\n  // See https://github.com/rjsf-team/react-jsonschema-form/issues/3367\n  if (!Array.isArray(formData)) {\n    onChange(convertToArray(formData) as unknown as T)\n    return <></>\n  }\n\n  return (\n    <AdditionalPropertyContextProvider\n      value={{\n        dropProperty: e => {\n          onDropPropertyClick(name)(e)\n        },\n      }}\n    >\n      <Grid item xs={2}>\n        <InputLabel htmlFor={`${id}-type`}>Type</InputLabel>\n        <SelectWidget\n          name={'Type'}\n          id={`${id}-type`}\n          schema={{} as S}\n          options={{\n            enumOptions: propertyTypeArray.map(type => ({\n              label: type,\n              value: type,\n            })),\n          }}\n          value={propertyType}\n          onChange={value => {\n            setNextPropertyType(value as PropertyType)\n          }}\n          disabled={props.disabled}\n          readOnly={props.readonly}\n          required={true}\n          isClearable={false}\n          onBlur={() => {}}\n          onFocus={() => {}}\n          registry={registry}\n          label={'Type'}\n        />\n      </Grid>\n      <Grid item xs={7}>\n        <ArrayField\n          {...props}\n          schema={{\n            ...schema,\n            items: {\n              ...itemsSchema,\n            },\n          }}\n        />\n      </Grid>\n      {propertyType !== nextPropertyType && (\n        <FullWidthAlert\n          variant=\"warning\"\n          title=\"Data may be lost when converting types\"\n          description={`Are you sure you want to convert ${name} from ${propertyType} to ${nextPropertyType}? Current values may be lost on conversion.`}\n          primaryButtonConfig={{\n            text: 'Convert',\n            onClick: () => {\n              setPropertyType(nextPropertyType)\n            },\n          }}\n          secondaryButtonConfig={{\n            text: 'Cancel',\n            onClick: () => {\n              setNextPropertyType(propertyType)\n            },\n          }}\n          isGlobal={false}\n        />\n      )}\n    </AdditionalPropertyContextProvider>\n  )\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport React from 'react'\n\n/**\n * Select widget compatible with react-jsonschema-form booleans\n */\nexport const BooleanWidget: Widget = (props: WidgetProps) => {\n  const { SelectWidget } = props.registry.widgets\n\n  const options = {\n    enumOptions: [\n      { value: true, label: 'true' },\n      { value: false, label: 'false' },\n    ],\n  }\n  return <SelectWidget {...props} options={options} />\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport dayjs, { Dayjs } from 'dayjs'\nimport React from 'react'\nimport { CalendarWithIconFormGroup } from '../../Evaluation/CalendarWithIconFormGroup'\n\n/**\n * DateTime picker widget compatible with react-jsonschema-form and Synapse Datetime annotations.\n */\nexport const DateTimeWidget: Widget = ({\n  disabled,\n  value,\n  onChange,\n}: WidgetProps) => {\n  return (\n    <CalendarWithIconFormGroup\n      disabled={disabled}\n      value={value ? dayjs(value) : ''}\n      setterCallback={(newValue: string | Dayjs | null) => {\n        if (newValue == null || typeof newValue === 'string') {\n          onChange(newValue)\n        } else {\n          onChange(newValue.toISOString())\n        }\n      }}\n    ></CalendarWithIconFormGroup>\n  )\n}\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  canExpand,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React, { useRef } from 'react'\nimport { Button, Tooltip } from '@mui/material'\nimport { useDeepCompareEffectNoCheck } from 'use-deep-compare-effect'\nimport { displayToast } from '../../ToastMessage'\nimport AddToList from '../../../assets/icons/AddToList'\nimport { JSONSchema7Definition } from 'json-schema'\n\n/**\n * Derived from the base ObjectFieldTemplate with annotations-editor-specific changes\n * - Custom button for adding additional properties\n * - Tracks properties to show a toast message if a property is converted to an additionalProperty because it was\n *   dropped from the schema (e.g. in a conditional schema)\n *\n * See https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/mui/src/ObjectFieldTemplate/ObjectFieldTemplate.tsx\n * @param props\n * @returns\n */\nexport function ObjectFieldTemplate<\n  T extends Record<string, any> | null | undefined = Record<string, any>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props\n\n  const options = getUiOptions<T, S, F>(uiSchema)\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options,\n  )\n  const DescriptionFieldTemplate = getTemplate<\n    'DescriptionFieldTemplate',\n    T,\n    S,\n    F\n  >('DescriptionFieldTemplate', registry, options)\n\n  /*\n     Tracks the property keys that were last known to exist in the object.\n     */\n  const previousSchemaDefinedProperties = useRef<Set<string>>(new Set())\n\n  /**\n   * We track how the schema changes as the user enters data, causing conditional subschemas to be evaluated.\n   *\n   * If a property exists in the previous version of the schema and has user data, and then is dropped from the schema due to a data update, then\n   * we need to prompt the user whether they want to undo the change, or continue and keep/remove those fields\n   *\n   * In this component, we can identify when one or more fields with user data are dropped (the field gains the additional property flag in the schema prop).\n   * We then use a function provided by the context to report which fields were lost.\n   */\n  useDeepCompareEffectNoCheck(() => {\n    if ('properties' in schema && schema.properties) {\n      const propertyKeys = Object.keys(schema.properties)\n      // Schema-defined properties are those properties in the schema without the additional property flag.\n      const schemaDefinedProperties = new Set<string>(\n        propertyKeys.filter(key => {\n          const propertyObject = schema.properties![\n            key\n          ] as JSONSchema7Definition &\n            Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n          return !propertyObject[ADDITIONAL_PROPERTY_FLAG]\n        }),\n      )\n\n      if (previousSchemaDefinedProperties.current != null) {\n        // Compare the schema defined properties with the previous version to see if any were lost.\n        const lostProperties = Array.from(\n          previousSchemaDefinedProperties.current,\n        ).filter(schemaDefinedProperty => {\n          return (\n            // Property is no longer in schema\n            !schemaDefinedProperties.has(schemaDefinedProperty) &&\n            // Form data exists\n            !!formData &&\n            // Property still exists in form data and is not null\n            // if the data is null, then we don't need to worry about it; user data wasn't lost\n            formData[schemaDefinedProperty] != null &&\n            // Property matches `additionalProperties` requirements: is an array and contains non-null values\n            Array.isArray(formData[schemaDefinedProperty]) &&\n            (formData[schemaDefinedProperty] as Array<never>).filter(\n              item => item != null,\n            ).length > 0\n          )\n        })\n        if (lostProperties.length > 0) {\n          // Report the converted fields in a toast message\n          displayToast(\n            `The following annotations are no longer specified by the schema and have been converted to custom fields: ${lostProperties.join(\n              ', ',\n            )}.`,\n            'warning',\n            {\n              title: 'Fields No Longer Specified By Schema',\n            },\n          )\n        }\n      }\n      // Update the last known properties to match the current properties\n      previousSchemaDefinedProperties.current = schemaDefinedProperties\n    }\n  }, [schema.properties])\n\n  return (\n    <fieldset id={idSchema.$id}>\n      {(options.title || title) && (\n        <TitleFieldTemplate\n          id={`${idSchema.$id}__title`}\n          schema={schema}\n          title={options.title || title}\n          required={required}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(options.description || description) && (\n        <DescriptionFieldTemplate\n          id={`${idSchema.$id}__description`}\n          description={options.description || description!}\n          registry={registry}\n          schema={schema}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n\n      {canExpand(schema, uiSchema, formData) && (\n        <Tooltip title=\"Add a new custom field\" placement=\"top\">\n          <Button\n            sx={{ my: 2 }}\n            variant=\"contained\"\n            className=\"object-property-expand\"\n            onClick={onAddClick(schema)}\n            disabled={disabled || readonly}\n            aria-label={'Add Custom Field'}\n          >\n            <AddToList />\n          </Button>\n        </Tooltip>\n      )}\n    </fieldset>\n  )\n}\n","import { Widget, WidgetProps } from '@rjsf/utils'\nimport React from 'react'\n\n/**\n * This TextWidget is almost identical to the rjsf TextWidget, except we handle numbers like strings to prevent issues if\n * the actual annotation data is not a string.\n */\nexport const TextWidget: Widget = (props: WidgetProps) => {\n  const { BaseInputTemplate } = props.registry.templates\n\n  // options.inputType will override the input type determined via schema\n  let inputType: string | undefined = undefined\n  if (props.schema.type === 'number' || props.schema.type === 'integer') {\n    inputType = 'text'\n  }\n\n  return (\n    <BaseInputTemplate\n      {...props}\n      options={{ ...props.options, inputType: inputType }}\n    />\n  )\n}\n\nexport default TextWidget\n","import React, { useEffect } from 'react'\nimport { getDefaultRegistry } from '@rjsf/core'\nimport { convertToArray } from '../AnnotationEditorUtils'\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  FieldProps,\n  FormContextType,\n  PROPERTIES_KEY,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { JSONSchema7Definition } from 'json-schema'\n\n/**\n * Extends the @rjsf/core `ObjectField` and just adds a custom hook for Synapse annotation business logic\n */\nexport function CustomObjectField<\n  T extends Record<string, any> | null | undefined = Record<string, any>,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldProps<T, S, F>) {\n  const {\n    fields: { ObjectField },\n  } = getDefaultRegistry<T, S, F>()\n  /**\n   * For an object, this will\n   * - convert additionalProperties formData to arrays\n   * - convert schema-defined formData from an array to a non-array if the schema type is not an array\n   * @param props\n   */\n  useEffect(() => {\n    const { schema, formData, onChange } = props\n    const newFormData: Record<string, any> = { ...formData }\n    if (schema[PROPERTIES_KEY]) {\n      Object.entries(schema[PROPERTIES_KEY]).forEach(\n        ([key, propertySchema]) => {\n          const data = newFormData[key]\n          if (\n            (\n              propertySchema as JSONSchema7Definition &\n                Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n            )[ADDITIONAL_PROPERTY_FLAG]\n          ) {\n            /**\n             * All additional properties should be converted to arrays.\n             *\n             * We need to convert it right away because the order of items is not stable, and seems to depend on if the item is an array or not\n             */\n            if (!Array.isArray(data)) {\n              newFormData[key] = convertToArray(data)\n            }\n          } else {\n            /**\n             * If the schema does not call for an array, but the formData is an array, then this will coerce it to a string.\n             *\n             * This can occur when a formData value is an additionalProperty, which we always treat as an array, then the key\n             * is added to the schema (e.g. conditionally).\n             */\n            if (\n              typeof propertySchema === 'object' &&\n              'type' in propertySchema &&\n              propertySchema.type !== 'array' &&\n              Array.isArray(data)\n            ) {\n              newFormData[key] = data.map(v => `${v}`).join(', ')\n            }\n          }\n        },\n      )\n      if (!deepEquals(formData, newFormData)) {\n        onChange(newFormData as T)\n      }\n    }\n  })\n\n  return <ObjectField {...props} />\n}\n\nexport default CustomObjectField\n","import React from 'react'\nimport { Box, Grid } from '@mui/material'\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    disabled,\n    hasToolbar,\n    hasCopy,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onCopyIndexClick,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    uiSchema,\n    registry,\n    onAddIndexClick,\n  } = props\n  const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton, AddButton } =\n    registry.templates.ButtonTemplates\n\n  return (\n    <Grid\n      container\n      gap={2}\n      justifyContent={'space-between'}\n      className={`array-item`}\n    >\n      <Grid item={true} xs>\n        <Box mb={2}>{children}</Box>\n      </Grid>\n      {hasToolbar && (\n        <Grid\n          item={true}\n          sx={{ alignSelf: 'start', my: 1 }}\n          display={'flex'}\n          flexDirection={'row'}\n          gap={1}\n          justifyContent={'flex-start'}\n        >\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveUpButton\n              disabled={disabled || readonly || !hasMoveUp}\n              onClick={onReorderClick(index, index - 1)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveDownButton\n              disabled={disabled || readonly || !hasMoveDown}\n              onClick={onReorderClick(index, index + 1)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {hasCopy && (\n            <CopyButton\n              disabled={disabled || readonly}\n              onClick={onCopyIndexClick(index)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          {hasRemove && (\n            <RemoveButton\n              aria-label={`Remove`}\n              disabled={disabled || readonly}\n              onClick={onDropIndexClick(index)}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          )}\n          <AddButton\n            disabled={disabled || readonly}\n            uiSchema={uiSchema}\n            registry={registry}\n            aria-label={`Add New`}\n            onClick={onAddIndexClick(index + 1)}\n          />\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  ArrayFieldTemplateItemType,\n  ArrayFieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React, { useEffect, useState } from 'react'\nimport { Box, Collapse, IconButton, Tooltip } from '@mui/material'\nimport { HelpOutline } from '@mui/icons-material'\nimport { useAdditionalPropertyContext } from './AdditionalPropertyContext'\nimport { JSONSchema7 } from 'json-schema'\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nfunction ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const { idSchema, uiSchema, items, registry, schema } = props\n  const uiOptions = getUiOptions<T, S, F>(uiSchema)\n  const ArrayFieldTitleTemplate = getTemplate<\n    'ArrayFieldTitleTemplate',\n    T,\n    S,\n    F\n  >('ArrayFieldTitleTemplate', registry, uiOptions)\n\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    'ArrayFieldDescriptionTemplate',\n    T,\n    S,\n    F\n  >('ArrayFieldDescriptionTemplate', registry, uiOptions)\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions,\n  )\n\n  const isAdditionalProperty = !!(\n    props.schema as JSONSchema7 & Record<typeof ADDITIONAL_PROPERTY_FLAG, any>\n  )[ADDITIONAL_PROPERTY_FLAG]\n  const additionalPropertyContext = useAdditionalPropertyContext()\n\n  const [showDetails, setShowDetails] = useState(false)\n  /**\n   * If we have an array of 0 items, go ahead and add one.\n   */\n  useEffect(() => {\n    if (props.items.length === 0) {\n      props.onAddClick()\n    }\n  }, [props])\n\n  return (\n    <Box id={idSchema.$id} className={props.className}>\n      <div className=\"LabelContainer\">\n        <ArrayFieldTitleTemplate {...props} />\n        {!isAdditionalProperty && (\n          <Tooltip title={'More Info'}>\n            <IconButton\n              onClick={e => {\n                e.preventDefault()\n                setShowDetails(!showDetails)\n              }}\n              aria-expanded={showDetails}\n              size={'small'}\n            >\n              <HelpOutline\n                color={'primary'}\n                sx={{ width: '16px', height: '16px' }}\n              />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n      {items && (\n        <>\n          {items.map(\n            ({\n              key,\n              index,\n              ...itemProps\n            }: ArrayFieldTemplateItemType<T, S, F>) => (\n              <ArrayFieldItemTemplate\n                key={key}\n                index={index}\n                {...itemProps}\n                hasCopy={true}\n                hasMoveUp={items.length > 1 && index != 0}\n                hasMoveDown={items.length > 1 && index != items.length - 1}\n                hasRemove={isAdditionalProperty || items.length > 1}\n                onDropIndexClick={\n                  isAdditionalProperty &&\n                  items.length == 1 &&\n                  additionalPropertyContext\n                    ? i => {\n                        return e => {\n                          additionalPropertyContext.dropProperty(e)\n                        }\n                      }\n                    : itemProps.onDropIndexClick\n                }\n              />\n            ),\n          )}\n        </>\n      )}\n      <Collapse className=\"field-description\" in={showDetails}>\n        <ArrayFieldDescriptionTemplate\n          idSchema={idSchema}\n          schema={schema}\n          description={(uiOptions.description || schema.description) ?? ''}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      </Collapse>\n    </Box>\n  )\n}\n\nexport default ArrayFieldTemplate\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils'\nimport React, { FocusEventHandler } from 'react'\nimport { Grid, TextField } from '@mui/material'\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    disabled,\n    label,\n    onKeyChange,\n    readonly,\n    required,\n    schema,\n    children,\n    registry,\n  } = props\n  const { translateString } = registry\n  const keyLabel = translateString(TranslatableString.KeyLabel, [''])\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema\n\n  if (!additional) {\n    return <div className={classNames}>{children}</div>\n  }\n\n  const handleBlur: FocusEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = ({ target }) => {\n    if (target) onKeyChange(target.value)\n  }\n\n  return (\n    <div className={classNames}>\n      <Grid container sx={{ my: 2 }} columnSpacing={2} rowSpacing={0}>\n        <Grid item xs={3}>\n          <TextField\n            fullWidth={true}\n            required={required}\n            label={keyLabel}\n            defaultValue={label}\n            disabled={disabled || readonly}\n            id={`${id}-key`}\n            name={`${id}-key`}\n            onBlur={!readonly ? handleBlur : undefined}\n            type=\"text\"\n          />\n        </Grid>\n        {children}\n        {/* All additional properties are treated as arrays, so we don't show a remove button here. */}\n        {/* To drop the property, drop the last array item. */}\n      </Grid>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport { HelpOutline } from '@mui/icons-material'\nimport { Collapse, Grid, IconButton, InputLabel, Tooltip } from '@mui/material'\n\n// TODO: Wrap and pull out class names to remove bootstrap classes\n//  https://rjsf-team.github.io/react-jsonschema-form/docs/advanced-customization/custom-templates/#baseinputtemplate\n\nexport function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldTemplateProps<T, S, F>) {\n  const {\n    id,\n    label,\n    children,\n    errors,\n    help,\n    description,\n    hidden,\n    required,\n    displayLabel,\n    registry,\n    uiSchema,\n    schema,\n  } = props\n  const uiOptions = getUiOptions<T, S, F>(uiSchema)\n  const WrapIfAdditionalTemplate = getTemplate<\n    'WrapIfAdditionalTemplate',\n    T,\n    S,\n    F\n  >('WrapIfAdditionalTemplate', registry, uiOptions)\n  const [showDetails, setShowDetails] = useState(false)\n\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {/* RJSF hides labels for boolean checkboxes, but since we replaced checkboxes with a custom component, we want to show them */}\n      {(displayLabel || schema.type === 'boolean') && (\n        <div className=\"LabelContainer\">\n          <InputLabel htmlFor={id}>\n            {label}\n            {required && <span className=\"required\">*</span>}\n          </InputLabel>\n          <Tooltip title={'More Info'}>\n            <IconButton\n              onClick={e => {\n                e.preventDefault()\n                setShowDetails(!showDetails)\n              }}\n              aria-expanded={showDetails}\n              size={'small'}\n            >\n              <HelpOutline\n                color={'primary'}\n                sx={{ width: '16px', height: '16px' }}\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n      )}\n      {children}\n      <Grid item xs={12}>\n        {errors}\n      </Grid>\n      <Collapse className=\"field-description\" in={showDetails}>\n        {description}\n      </Collapse>\n      {help}\n    </WrapIfAdditionalTemplate>\n  )\n}\n","import {\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\nimport React from 'react'\nimport { InputLabel } from '@mui/material'\n\n/**\n * Custom title template for array fields.\n *\n * @param props\n * @returns\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { title, required } = props\n  return (\n    <InputLabel>\n      {title}\n      {required && <span className=\"required\">*</span>}\n    </InputLabel>\n  )\n}\n","import { Add, ArrowDownward, ArrowUpward, Close } from '@mui/icons-material'\nimport React from 'react'\nimport { Button, IconButton, SxProps } from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils'\n\nconst buttonSx: SxProps = { minWidth: 'unset', width: '40px', height: '40px' }\n\nexport function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>({ uiSchema, registry, ...props }: IconButtonProps<T, S, F>) {\n  const { translateString } = registry\n  return (\n    <Button\n      title={translateString(TranslatableString.AddItemButton)}\n      {...props}\n      color=\"primary\"\n      variant={'contained'}\n      sx={buttonSx}\n    >\n      <Add />\n    </Button>\n  )\n}\n\ntype IconButtonTemplateProps = {\n  buttonType: 'copy' | 'moveUp' | 'moveDown' | 'remove'\n}\n\nfunction getIcon(buttonType: IconButtonTemplateProps['buttonType']) {\n  switch (buttonType) {\n    case 'copy':\n      return <ContentCopyIcon fontSize=\"inherit\" />\n    case 'moveUp':\n      return <ArrowUpward fontSize=\"inherit\" />\n    case 'moveDown':\n      return <ArrowDownward fontSize=\"inherit\" />\n    case 'remove':\n      return <Close fontSize=\"inherit\" />\n    default:\n      throw new Error(`Unexpected iconType ${buttonType}`)\n  }\n}\n\nfunction IconButtonTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F> & IconButtonTemplateProps) {\n  const { iconType, buttonType, ...otherProps } = props\n\n  const {\n    registry: { translateString },\n  } = otherProps\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      {...otherProps}\n      color={'default'}\n      sx={buttonSx}\n    >\n      {getIcon(buttonType)}\n    </IconButton>\n  )\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'remove'} />\n}\n\nexport function CopyButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'copy'} />\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'moveUp'} />\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: IconButtonProps<T, S, F>) {\n  return <IconButtonTemplate<T, S, F> {...props} buttonType={'moveDown'} />\n}\n\nexport default {\n  AddButton,\n  RemoveButton,\n  MoveUpButton,\n  MoveDownButton,\n  CopyButton,\n}\n","import { Collapse } from '@mui/material'\nimport React from 'react'\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema'\n\nexport type FieldDescriptionTableProps = {\n  schema: JSONSchema7\n  description: React.ReactNode\n}\n\nfunction getTypeAsString(\n  schema: JSONSchema7 | JSONSchema7Definition | JSONSchema7Definition[],\n): string {\n  if (Array.isArray(schema) || typeof schema === 'boolean') {\n    return 'unknown'\n  }\n  const { type, enum: _enum } = schema\n\n  if (type === 'array' && typeof schema.items === 'object') {\n    return `List of ${getTypeAsString(schema.items)}`\n  }\n\n  if (_enum) {\n    return 'enumeration'\n  }\n\n  if (Array.isArray(type)) {\n    return type.reduce(\n      (typesCommaSeparated, nextType) => `${typesCommaSeparated}, ${nextType}`,\n      '',\n    )\n  }\n  return type || 'unknown'\n}\n\nexport default function FieldDescriptionTable(\n  props: FieldDescriptionTableProps,\n) {\n  const { description, schema } = props\n\n  const typeString = getTypeAsString(schema)\n\n  return (\n    <Collapse className=\"field-description\" in={true}>\n      <table className=\"FieldDescriptionTable\">\n        <tbody>\n          {description && (\n            <tr>\n              <th>Description</th>\n              <td>{description}</td>\n            </tr>\n          )}\n          <tr>\n            <th>Type</th>\n            <td>{typeString}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Collapse>\n  )\n}\n","import { DescriptionFieldProps } from '@rjsf/utils'\nimport React from 'react'\nimport { Typography } from '@mui/material'\nimport FieldDescriptionTable from './FieldDescriptionTable'\n\nexport default function DescriptionFieldTemplate(props: DescriptionFieldProps) {\n  const { description, schema = {} } = props\n\n  if (schema.type === 'object') {\n    return (\n      <Typography variant={'body1'} sx={{ my: 2 }}>\n        {description}\n      </Typography>\n    )\n  }\n\n  return <FieldDescriptionTable schema={schema} description={description} />\n}\n","import React from 'react'\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * Identical to @rjsf/core ArrayFieldDescriptionTemplate except this renders something if there is no description.\n * Our description field also includes the type, so it should always be rendered.\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions)\n  const { label: displayLabel } = options\n  if (displayLabel === false) {\n    return null\n  }\n\n  const DescriptionFieldTemplate = getTemplate<\n    'DescriptionFieldTemplate',\n    T,\n    S,\n    F\n  >('DescriptionFieldTemplate', registry, options)\n  const id = `${idSchema.$id}__description`\n  return (\n    <DescriptionFieldTemplate\n      id={id}\n      description={description ?? ''}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  )\n}\n","import React from 'react'\nimport { ChangeEvent, FocusEvent } from 'react'\nimport TextField, { TextFieldProps } from '@mui/material/TextField'\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  labelValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\nconst TYPES_THAT_SHRINK_LABEL = ['date', 'datetime-local', 'file', 'time']\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from textFieldProps\n    placeholder,\n    required,\n    readonly,\n    disabled,\n    type,\n    label,\n    // hideLabel,\n    value,\n    onChange,\n    onChangeOverride,\n    onBlur,\n    onFocus,\n    autofocus,\n    options,\n    schema,\n    uiSchema,\n    rawErrors = [],\n    formContext,\n    registry,\n    InputLabelProps,\n    ...textFieldProps\n  } = props\n  const hideLabel = true\n  const inputProps = getInputProps<T, S, F>(schema, type, options)\n  // Now we need to pull out the step, min, max into an inner `inputProps` for material-ui\n  const { step, min, max, ...rest } = inputProps\n  const otherProps = {\n    inputProps: {\n      step,\n      min,\n      max,\n      ...(schema.examples ? { list: examplesId<T>(id) } : undefined),\n    },\n    ...rest,\n  }\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\n    onChange(value === '' ? options.emptyValue : value)\n  const _onBlur = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value)\n  const _onFocus = ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n    onFocus(id, value)\n  const DisplayInputLabelProps = TYPES_THAT_SHRINK_LABEL.includes(type)\n    ? {\n        ...InputLabelProps,\n        shrink: true,\n      }\n    : InputLabelProps\n\n  let derivedValuePlaceholder: string | undefined = undefined\n  if (schema.default || schema.const) {\n    derivedValuePlaceholder =\n      JSON.stringify(schema.default || schema.const) + ' (derived)'\n  }\n\n  return (\n    <>\n      <TextField\n        id={id}\n        name={id}\n        placeholder={derivedValuePlaceholder || placeholder}\n        label={labelValue(label || undefined, hideLabel, false)}\n        autoFocus={autofocus}\n        required={false}\n        disabled={disabled || readonly}\n        {...otherProps}\n        value={value || value === 0 ? value : ''}\n        error={rawErrors.length > 0}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        InputLabelProps={DisplayInputLabelProps}\n        {...(textFieldProps as TextFieldProps)}\n        inputProps={{\n          'aria-label': id,\n        }}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : [],\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />\n            })}\n        </datalist>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport ListItem from '@mui/material/ListItem'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport List from '@mui/material/List'\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils'\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any,\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props\n  if (errors.length === 0) {\n    return null\n  }\n  const id = errorId<T>(idSchema)\n\n  return (\n    <List dense={true} disablePadding={true}>\n      {errors.map((error, i: number) => {\n        return (\n          <ListItem key={i} disableGutters={true}>\n            <FormHelperText id={id} sx={{ color: 'error.main' }}>\n              {error}\n            </FormHelperText>\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import Form from '@rjsf/mui'\nimport { JSONSchema7, JSONSchema7Definition } from 'json-schema'\nimport isEmpty from 'lodash-es/isEmpty'\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { Alert, Box, Divider, Link, Typography } from '@mui/material'\nimport AddToList from '../../assets/icons/AddToList'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../../utils/functions/getEndpoint'\nimport {\n  useGetJson,\n  useGetSchema,\n  useGetSchemaBinding,\n  useUpdateViaJson,\n} from '../../synapse-queries'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport {\n  ENTITY_CONCRETE_TYPE,\n  EntityJson,\n} from '@sage-bionetworks/synapse-types'\nimport { SynapseSpinner } from '../LoadingScreen/LoadingScreen'\nimport { AdditionalPropertiesSchemaField } from './field/AdditionalPropertiesSchemaField'\nimport {\n  dropNullishArrayValues,\n  getFriendlyPropertyName,\n  getTransformErrors,\n} from './AnnotationEditorUtils'\nimport { BooleanWidget } from './widget/BooleanWidget'\nimport { DateTimeWidget } from './widget/DateTimeWidget'\nimport { ObjectFieldTemplate } from './template/ObjectFieldTemplate'\nimport { SelectWidget } from './widget/SelectWidget'\nimport TextWidget from './widget/TextWidget'\nimport { entityJsonKeys } from '../../utils/functions/EntityTypeUtils'\nimport {\n  ConfirmationButtons,\n  ConfirmationDialog,\n} from '../ConfirmationDialog/ConfirmationDialog'\nimport { RJSFValidationError } from '@rjsf/utils'\nimport validator from '@rjsf/validator-ajv8'\nimport CustomObjectField from './field/CustomObjectField'\nimport ArrayFieldItemTemplate from './template/ArrayFieldItemTemplate'\nimport ArrayFieldTemplate from './template/ArrayFieldTemplate'\nimport WrapIfAdditionalTemplate from './template/WrapIfAdditionalTemplate'\nimport { FieldTemplate } from './template/FieldTemplate'\nimport ArrayFieldTitleTemplate from './template/ArrayFieldTitleTemplate'\nimport ButtonTemplate from './template/ButtonTemplate'\nimport DescriptionFieldTemplate from './template/DescriptionFieldTemplate'\nimport ArrayFieldDescriptionTemplate from './template/ArrayFieldDescriptionTemplate'\nimport BaseInputTemplate from './template/BaseInputTemplate'\nimport RJSF from '@rjsf/core'\nimport FieldErrorTemplate from './template/FieldErrorTemplate'\n\nexport type SchemaDrivenAnnotationEditorProps = {\n  /** The entity whose annotations should be edited with the form */\n  entityId?: string\n  /** If no entity ID is supplied, the schema to use for the form */\n  schemaId?: string\n  /** May be used to directly provide a JSON Schema to use for the form */\n  validationSchema?: JSONSchema7\n  /** Optionally supply a ref to the form to handle submission externally with `formRef.current.submit()`. If provided, the editor will not render its own submit UI. */\n  formRef?: React.RefObject<RJSF>\n  /** Provide live input validation. This can cause major performance degradation. */\n  liveValidate?: boolean\n  /** Invoked after a successful form submission */\n  onSuccess?: () => void\n  /** If defined and formRef is not supplied, shows a 'Cancel' button and runs this effect on click */\n  onCancel?: () => void\n  /** Passes new form data upon each change to the form */\n  onChange?: (annotations: Record<string, any>) => void\n}\n\n/**\n * patternProperties lets us define how to treat additionalProperties in a JSON schema by property name.\n * In all cases, let's ban properties that collide with entity properties by making their schema \"not: {}\"\n */\nfunction getPatternPropertiesBannedKeys(\n  concreteType?: ENTITY_CONCRETE_TYPE,\n): Record<string, JSONSchema7Definition> {\n  if (!concreteType) {\n    return {}\n  }\n  // for each property (e.g. id, name, etag, etc.)\n  //  Add to the JSON Schema `\"^id$\": { \"not\": {} }` to ban the property from being added as an additional property.\n  return entityJsonKeys[concreteType].reduce(\n    (current: Record<string, JSONSchema7Definition>, item) => {\n      current[`^${item}$`] = { not: {} }\n      return current\n    },\n    {},\n  )\n}\n\n/**\n * Renders a form for editing an entity's annotations. The component also supports supplying just a schema ID,\n * but work to support annotation flows without an entity (i.e. before creating entities) is not yet complete.\n */\nexport function SchemaDrivenAnnotationEditor(\n  props: SchemaDrivenAnnotationEditorProps,\n) {\n  const {\n    entityId,\n    schemaId,\n    validationSchema: validationSchemaFromProps,\n    liveValidate = false,\n    onSuccess = () => {\n      /* no-op */\n    },\n    onCancel,\n    formRef: formRefFromParent,\n    onChange,\n  } = props\n  const localRef = useRef<RJSF>(null)\n  const ref = formRefFromParent ?? localRef\n\n  // Client-side validation errors\n  const [validationError, setValidationError] = React.useState<\n    RJSFValidationError[] | undefined\n  >(undefined)\n\n  // Errors from the backend response\n  const [submissionError, setSubmissionError] = React.useState<\n    SynapseClientError | undefined\n  >(undefined)\n  const [showSubmissionError, setShowSubmissionError] = React.useState(false)\n\n  const [showConfirmation, setShowConfirmation] = React.useState(false)\n\n  const { entityMetadata: entityJson, annotations } = useGetJson(entityId!, {\n    // Metadata is being edited, so don't refetch\n    staleTime: Infinity,\n    enabled: !!entityId,\n    useErrorBoundary: true,\n  })\n\n  // Annotation fields fetched and modified via the form\n  const [formData, setFormData] = React.useState<\n    Record<string, unknown> | undefined\n  >(annotations)\n\n  /**\n   * patternProperties lets us define how to treat additionalProperties in a JSON schema by property name.\n   * In all cases, let's ban properties that collide with entity properties by making their schema \"not: {}\"\n   */\n  const patternPropertiesBannedKeys = useMemo(\n    () => getPatternPropertiesBannedKeys(entityJson?.concreteType),\n    [entityJson?.concreteType],\n  )\n\n  const transformErrors = useCallback(\n    getTransformErrors(entityJson?.concreteType),\n    [entityJson?.concreteType],\n  )\n\n  useEffect(() => {\n    if (annotations) {\n      // Put the annotations into a state variable so it can be modified by the form.\n      setFormData(annotations)\n    }\n  }, [annotations])\n\n  const { data: schema, isLoading: isLoadingBinding } = useGetSchemaBinding(\n    entityId!,\n    {\n      enabled: !!entityId,\n      refetchOnWindowFocus: false,\n      useErrorBoundary: true,\n    },\n  )\n\n  const { data: fetchedValidationSchema, isLoading: isLoadingSchema } =\n    useGetSchema(schemaId ?? schema?.jsonSchemaVersionInfo.$id ?? '', {\n      enabled: !!schemaId || !!schema,\n      useErrorBoundary: true,\n    })\n\n  const validationSchema = validationSchemaFromProps || fetchedValidationSchema\n\n  const isLoading = isLoadingBinding || isLoadingSchema\n\n  const mutation = useUpdateViaJson({\n    onSuccess: () => {\n      onSuccess()\n    },\n    onError: error => {\n      setSubmissionError(error)\n      setShowSubmissionError(true)\n    },\n  })\n\n  function submitChangedEntity() {\n    mutation.mutate({\n      ...dropNullishArrayValues(formData ?? {}),\n      ...entityJson,\n    } as EntityJson)\n  }\n\n  return (\n    <div className=\"AnnotationEditor\">\n      {isLoading ? (\n        <div className=\"LoadingPlaceholder\">\n          <SynapseSpinner size={30} />\n        </div>\n      ) : (\n        <>\n          {entityJson && schema && (\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\n              <b>{entityJson.name}</b> requires scientific annotations specified\n              by <b>{schema.jsonSchemaVersionInfo.$id}</b>\n              {'. '}\n              <b>\n                <Link\n                  href={`${getEndpoint(\n                    BackendDestinationEnum.REPO_ENDPOINT,\n                  )}/repo/v1/schema/type/registered/${\n                    schema.jsonSchemaVersionInfo.$id\n                  }`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  View required schema (JSON)\n                </Link>\n              </b>\n            </Alert>\n          )}\n          {entityJson && isEmpty(formData) && schema === null && (\n            <Alert severity=\"info\">\n              <Box display={'flex'} alignItems={'center'} gap={0.5}>\n                <Typography variant={'smallText1'}>\n                  <b>{entityJson.name}</b> has no annotations. Click the{' '}\n                </Typography>\n                <AddToList />\n                <Typography variant={'smallText1'}>\n                  button to annotate.\n                </Typography>\n              </Box>\n            </Alert>\n          )}\n          {formData != undefined && (\n            <Form\n              validator={validator}\n              className=\"AnnotationEditorForm\"\n              liveValidate={liveValidate}\n              noHtml5Validate={true}\n              experimental_defaultFormStateBehavior={{\n                emptyObjectFields: 'skipDefaults',\n              }}\n              fields={{\n                ObjectField: CustomObjectField,\n              }}\n              templates={{\n                ArrayFieldDescriptionTemplate: ArrayFieldDescriptionTemplate,\n                ArrayFieldItemTemplate: ArrayFieldItemTemplate,\n                ArrayFieldTemplate: ArrayFieldTemplate,\n                ArrayFieldTitleTemplate: ArrayFieldTitleTemplate,\n                BaseInputTemplate: BaseInputTemplate,\n                FieldErrorTemplate: FieldErrorTemplate,\n                FieldTemplate: FieldTemplate,\n                ObjectFieldTemplate: ObjectFieldTemplate,\n                WrapIfAdditionalTemplate: WrapIfAdditionalTemplate,\n                ButtonTemplates: ButtonTemplate,\n                DescriptionFieldTemplate: DescriptionFieldTemplate,\n                /* Errors are displayed by an Alert component below, so we don't show the builtin ErrorList */\n                ErrorListTemplate: () => null,\n              }}\n              ref={ref}\n              disabled={mutation.isLoading}\n              schema={\n                {\n                  ...(validationSchema ?? {}),\n                  patternProperties: {\n                    ...(validationSchema?.patternProperties ?? {}),\n                    ...patternPropertiesBannedKeys,\n                  },\n                  additionalProperties:\n                    validationSchema?.additionalProperties ?? true,\n                } as JSONSchema7\n              }\n              uiSchema={{\n                'ui:options': {\n                  copyable: true,\n                  duplicateKeySuffixSeparator: '_',\n                },\n                additionalProperties: {\n                  'ui:field': AdditionalPropertiesSchemaField,\n                },\n              }}\n              transformErrors={transformErrors}\n              formData={formData}\n              onChange={({ formData }) => {\n                if (onChange) {\n                  onChange(formData)\n                }\n                setFormData(formData)\n                setValidationError(undefined)\n              }}\n              onSubmit={({ formData, errors }, event) => {\n                event.preventDefault()\n                if (errors && errors.length > 0) {\n                  setValidationError(errors)\n                }\n                setShowSubmissionError(false)\n                setFormData(formData)\n                submitChangedEntity()\n              }}\n              onError={(errors: RJSFValidationError[]) => {\n                // invoked when submit is clicked and there are client-side validation errors\n                setValidationError(errors)\n                if (validationError && entityId) {\n                  setShowConfirmation(true)\n                }\n              }}\n              widgets={{\n                TextWidget: TextWidget,\n                DateTimeWidget: DateTimeWidget,\n                SelectWidget: SelectWidget,\n                CheckboxWidget: BooleanWidget,\n              }}\n            >\n              {validationError && (\n                <Alert severity=\"error\" sx={{ my: 2 }}>\n                  <b>Validation errors found:</b>\n                  <ul>\n                    {validationError.map(\n                      (e: RJSFValidationError, index: number) => {\n                        return (\n                          <li key={index}>\n                            <b>{`${getFriendlyPropertyName(e)}: `}</b>{' '}\n                            {`${e.message}`}\n                          </li>\n                        )\n                      },\n                    )}\n                  </ul>\n                </Alert>\n              )}\n\n              {submissionError && showSubmissionError && (\n                <Alert severity=\"error\" sx={{ my: 2 }}>\n                  Annotations could not be updated: {submissionError.reason}\n                </Alert>\n              )}\n              {!formRefFromParent && (\n                <>\n                  <Divider sx={{ my: 2 }} />\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    sx={{ gridRowStart: 5 }}\n                  >\n                    <ConfirmationButtons\n                      hasCancelButton={onCancel !== undefined}\n                      onCancel={() => {\n                        onCancel && onCancel()\n                      }}\n                      onConfirm={() => {\n                        ref.current!.formElement.current.requestSubmit()\n                      }}\n                      confirmButtonText={entityId ? 'Save' : 'Validate'}\n                    />\n                  </Box>\n                </>\n              )}\n            </Form>\n          )}\n          {showConfirmation && (\n            <ConfirmationDialog\n              open={true}\n              onConfirm={() => {\n                submitChangedEntity()\n                setShowConfirmation(false)\n              }}\n              onCancel={() => {\n                setShowConfirmation(false)\n              }}\n              title=\"Update Annotations\"\n              content={\n                <>\n                  <div>\n                    The following errors exist with the annotations you entered:\n                  </div>\n                  <div>\n                    <ul>\n                      {(validationError ?? []).map(\n                        (e: RJSFValidationError, index: number) => (\n                          <li key={index}>\n                            <b>{`${getFriendlyPropertyName(e)}: `}</b>{' '}\n                            {`${e.message}`}\n                          </li>\n                        ),\n                      )}\n                    </ul>\n                  </div>\n                  <div>\n                    Are you sure you want to save the invalid annotations?\n                  </div>\n                </>\n              }\n              confirmButtonText=\"Save\"\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n"],"names":["getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","row","error","composeClasses","FormGroupRoot","styled","props","styles","_extends","FormGroup","React.forwardRef","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","_jsx","clsx","FormGroup$1","getListItemUtilityClass","listItemClasses","listItemClasses$1","getListItemSecondaryActionClassesUtilityClass","disableGutters","ListItemSecondaryActionRoot","ListItemSecondaryAction","context","React.useContext","ListContext","ListItemSecondaryAction$1","_excluded2","overridesResolver","alignItems","button","dense","disabled","disablePadding","divider","hasSecondaryAction","selected","ListItemRoot","theme","listItemButtonClasses","alpha","ListItemContainer","ListItem","autoFocus","childrenProp","componentProp","components","componentsProps","ContainerComponent","ContainerClassName","focusVisibleClassName","secondaryAction","slotProps","slots","ContainerProps","childContext","React.useMemo","listItemRef","React.useRef","useEnhancedEffect","children","React.Children","isMuiElement","handleRef","useForkRef","Root","rootProps","componentProps","Component","ButtonBase","_jsxs","isHostComponent","ListItem$1","RadioButtonUncheckedIcon","createSvgIcon","RadioButtonCheckedIcon","RadioButtonIconRoot","RadioButtonIconBackground","RadioButtonIconDot","RadioButtonIcon","checked","fontSize","RadioGroupContext","React.createContext","RadioGroupContext$1","useRadioGroup","getRadioUtilityClass","radioClasses","radioClasses$1","color","capitalize","RadioRoot","SwitchBase","prop","rootShouldForwardProp","areEqualValues","a","b","defaultCheckedIcon","defaultIcon","Radio","_defaultIcon$props$fo","_defaultCheckedIcon$p","checkedProp","checkedIcon","icon","nameProp","onChangeProp","size","radioGroup","onChange","createChainedFunction","name","React.cloneElement","Radio$1","RadioGroup","actions","defaultValue","valueProp","rootRef","value","setValueState","useControlled","React.useImperativeHandle","input","useId","contextValue","event","RadioGroup$1","Add$1","ArrowDownward$1","ArrowUpward$1","HelpOutline","useGetSchemaBinding","entityId","options","accessToken","keyFactory","useSynapseContext","useQuery","SynapseClient","useGetValidationResults","useGetSchema","schema$id","withTheme","themeProps","forwardRef","_a","_b","fields","widgets","templates","directProps","__rest","Form","_interopRequireDefault","require$$0","Add","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","AddButton","uiSchema","registry","translateString","IconButton","TranslatableString","AddIcon","ArrayFieldItemTemplate","hasToolbar","hasCopy","hasMoveDown","hasMoveUp","hasRemove","index","onCopyIndexClick","onDropIndexClick","onReorderClick","readonly","CopyButton","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","Grid","Box","Paper","ArrayFieldTemplate","canAdd","idSchema","items","onAddClick","required","schema","title","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","key","itemProps","TYPES_THAT_SHRINK_LABEL","BaseInputTemplate","id","placeholder","type","label","hideLabel","onChangeOverride","onBlur","onFocus","autofocus","rawErrors","formContext","InputLabelProps","textFieldProps","inputProps","getInputProps","step","min","max","rest","otherProps","examplesId","_onChange","_onBlur","_onFocus","DisplayInputLabelProps","_Fragment","TextField","labelValue","ariaDescribedByIds","example","DescriptionField","description","Typography","_Error","ErrorList","errors","List","ListItemIcon","ErrorIcon","ListItemText","ArrowDownward","ArrowUpward","Remove","MuiIconButton","CopyIcon","ArrowDownwardIcon","ArrowUpwardIcon","iconType","RemoveIcon","FieldErrorTemplate","errorId","i","FormHelperText","FieldHelpTemplate","help","helpId","FieldTemplate","classNames","style","displayLabel","hidden","onDropPropertyClick","onKeyChange","rawDescription","WrapIfAdditionalTemplate","FormControl","ObjectFieldTemplate","properties","formData","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","canExpand","SubmitButton","submitText","norender","submitButtonProps","getSubmitButtonOptions","Button","TitleField","Divider","keyLabel","additional","ADDITIONAL_PROPERTY_FLAG","handleBlur","target","generateTemplates","CheckboxWidget","schemaRequiresTrueValue","_","FormControlLabel","Checkbox","CheckboxesWidget","enumOptions","enumDisabled","inline","emptyValue","checkboxesValues","enumOptionsSelectValue","enumOptionsDeselectValue","enumOptionsValueForIndex","FormLabel","option","enumOptionsIsSelected","itemDisabled","checkbox","optionId","RadioWidget","selectedIndex","enumOptionsIndexForValue","RangeWidget","sliderProps","rangeSpec","Slider","SelectWidget","multiple","hideError","optEmptyVal","isEmpty","selectedIndexes","MenuItem","TextareaWidget","rows","generateWidgets","generateTheme","generateForm","MuiForm","AddToList","jsx","SvgIcon","dropNullishArrayValues","newFormData","item","getFriendlyPropertyName","getTransformErrors","concreteType","grouped","groupBy","property","errorGroup","e","flatMap","propertyName","entityJsonKeys","convertToArray","s","AdditionalPropertyContext","React","AdditionalPropertyContextProvider","AdditionalPropertyContextConsumer","useAdditionalPropertyContext","useContext","ISO_TIMESTAMP_REGEX","propertyTypeArray","guessPropertyType","list","transformDataFromPropertyType","propertyType","asFloat","getSchemaForPropertyType","AdditionalPropertiesSchemaField","ArrayField","setPropertyType","useState","nextPropertyType","setNextPropertyType","useEffect","onNextPropertyTypeUpdate","dataIsEmpty","coercedList","isEqual","coerceDataAndUpdateWidget","itemsSchema","jsxs","InputLabel","FullWidthAlert","Fragment","BooleanWidget","DateTimeWidget","CalendarWithIconFormGroup","dayjs","newValue","previousSchemaDefinedProperties","useRef","useDeepCompareEffectNoCheck","propertyKeys","schemaDefinedProperties","lostProperties","schemaDefinedProperty","displayToast","Tooltip","TextWidget","inputType","CustomObjectField","ObjectField","getDefaultRegistry","PROPERTIES_KEY","propertySchema","data","v","deepEquals","onAddIndexClick","isAdditionalProperty","additionalPropertyContext","showDetails","setShowDetails","Collapse","buttonSx","getIcon","buttonType","ContentCopyIcon","Close","IconButtonTemplate","ButtonTemplate","getTypeAsString","_enum","typesCommaSeparated","nextType","FieldDescriptionTable","typeString","value2","derivedValuePlaceholder","getPatternPropertiesBannedKeys","current","SchemaDrivenAnnotationEditor","schemaId","validationSchemaFromProps","liveValidate","onSuccess","onCancel","formRefFromParent","localRef","validationError","setValidationError","submissionError","setSubmissionError","showSubmissionError","setShowSubmissionError","showConfirmation","setShowConfirmation","entityJson","annotations","useGetJson","setFormData","patternPropertiesBannedKeys","useMemo","transformErrors","useCallback","isLoadingBinding","fetchedValidationSchema","isLoadingSchema","validationSchema","isLoading","mutation","useUpdateViaJson","submitChangedEntity","SynapseSpinner","Alert","Link","getEndpoint","BackendDestinationEnum","validator","formData2","ConfirmationButtons","ConfirmationDialog"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]}