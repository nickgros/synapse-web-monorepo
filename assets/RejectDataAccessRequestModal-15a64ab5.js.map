{"version":3,"file":"RejectDataAccessRequestModal-15a64ab5.js","sources":["../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/switchBaseClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/SwitchBase.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Checkbox/checkboxClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Checkbox/Checkbox.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../../../../node_modules/.pnpm/@mui+material@5.11.16_@emotion+react@11.10.6_@emotion+styled@11.10.6_@types+react@18.0.27_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../../src/components/dataaccess/RejectDataAccessRequestModal.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import React, { useEffect, useState } from 'react'\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Collapse,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport IconSvg from '../IconSvg/IconSvg'\nimport {\n  useGetFullTableQueryResults,\n  useUpdateDataAccessSubmissionState,\n} from '../../synapse-queries'\nimport {\n  BUNDLE_MASK_QUERY_RESULTS,\n  REJECT_SUBMISSION_CANNED_RESPONSES_TABLE,\n} from '../../utils/SynapseConstants'\nimport { Set } from 'immutable'\nimport {\n  QueryResultBundle,\n  Row,\n  SubmissionState,\n} from '@sage-bionetworks/synapse-types'\nimport { SynapseSpinner } from '../LoadingScreen'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport FullWidthAlert from '../FullWidthAlert/FullWidthAlert'\nimport { UseQueryResult } from 'react-query'\nimport { ErrorBanner } from '../error/ErrorBanner'\nimport { displayToast } from '../ToastMessage/ToastMessage'\n\nconst CATEGORY_COLUMN_NAME = 'category'\nconst CATEGORY_SECTION_EMAIL_TEXT_COLUMN_NAME = 'category email prompt'\nconst REJECTION_REASON_FORM_TEXT_COLUMN_NAME = 'rejection reason'\nconst REJECTION_REASON_EMAIL_TEXT_COLUMN_NAME = 'email text'\n\nexport type RejectDataAccessRequestModalProps = {\n  /* ID of the submission for which a rejection should be drafted/sent */\n  submissionId: string | number\n  /* SynID of the table which contains the email responses which should populate this modal. Defaults to syn50683097, which is in production Synapse */\n  tableId?: string\n  open: boolean\n  onClose: () => void\n}\n\ntype RejectionCategoryProps = {\n  category: string\n  rows: Row[]\n  rejectionReasonFormTextIndex: number\n  selectedRowIds: Set<number>\n  setSelectedRowIds: React.Dispatch<React.SetStateAction<Set<number>>>\n}\n\ntype SelectRejectionReasonsFormProps = {\n  tableQuery: UseQueryResult<QueryResultBundle, SynapseClientError>\n  selectedRowIds: Set<number>\n  setSelectedRowIds: React.Dispatch<React.SetStateAction<Set<number>>>\n}\n\nconst DEFAULT_MESSAGE_PREPEND =\n  'Thank you for submitting your data access request.\\n'\nconst DEFAULT_MESSAGE_APPEND =\n  '\\nIf you have questions, do not respond to this email address. Instead, reply to:\\nact@sagebionetworks.org'\n\n/**\n * Renders a rejection reason category and checkboxes for each reason in the category\n */\nfunction RejectionCategory(props: RejectionCategoryProps) {\n  const {\n    category,\n    rows,\n    selectedRowIds,\n    setSelectedRowIds,\n    rejectionReasonFormTextIndex,\n  } = props\n  const [isExpanded, setIsExpanded] = React.useState(false)\n\n  return (\n    <>\n      <Typography\n        variant=\"body1\"\n        onClick={() => setIsExpanded(!isExpanded)}\n        sx={{ fontWeight: 700, cursor: 'pointer', my: 1 }}\n      >\n        <IconSvg\n          icon={isExpanded ? 'expandMore' : 'chevronRight'}\n          sx={{ color: 'grey.700' }}\n          wrap={false}\n        />\n        {category}\n      </Typography>\n      <Collapse in={isExpanded}>\n        <Stack sx={{ ml: 3 }}>\n          {(rows ?? []).map(row => (\n            <FormControlLabel\n              key={row.rowId}\n              control={\n                <Checkbox\n                  checked={selectedRowIds.has(row.rowId!)}\n                  size={'small'}\n                  onChange={event => {\n                    if (event.target.checked) {\n                      setSelectedRowIds(selectedRowIds.add(row.rowId!))\n                    } else {\n                      setSelectedRowIds(selectedRowIds.remove(row.rowId!))\n                    }\n                  }}\n                />\n              }\n              label={\n                <Typography variant={'smallText1'}>\n                  {row.values[rejectionReasonFormTextIndex]}\n                </Typography>\n              }\n            />\n          ))}\n        </Stack>\n      </Collapse>\n    </>\n  )\n}\n\n/**\n * Renders a form for selecting individual rejection reasons grouped by category.\n * The rejection reason data comes from the table whose data is fetched in the tableQuery prop.\n */\nfunction SelectRejectionReasonsForm(props: SelectRejectionReasonsFormProps) {\n  const { tableQuery, selectedRowIds, setSelectedRowIds } = props\n  const { data: tableData, isLoading, error } = tableQuery\n  const categoryIndex = tableData?.queryResult?.queryResults.headers.findIndex(\n    header => header.name.toLowerCase() === CATEGORY_COLUMN_NAME,\n  )\n  const rejectionReasonFormTextIndex =\n    tableData?.queryResult?.queryResults.headers.findIndex(\n      header =>\n        header.name.toLowerCase() === REJECTION_REASON_FORM_TEXT_COLUMN_NAME,\n    )\n\n  const rowsGroupedByCategory =\n    tableData &&\n    tableData.queryResult &&\n    tableData.queryResult.queryResults.rows.reduce(\n      (acc: Record<string, Row[]>, row) => {\n        const category: string = row.values[categoryIndex!]!\n        acc[category] = [...(acc[category] || []), row]\n        return acc\n      },\n      {},\n    )\n  return (\n    <>\n      <Typography variant=\"headline3\" gutterBottom>\n        Reasons for rejecting\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        You may wish to reject the user&apos;s data access request for a\n        specific reason. The list below contains some common rejection reasons.\n        You will have a chance to edit the response before submitting it,\n        including adding any rejection reason(s) not listed here.\n      </Typography>\n      {isLoading && (\n        <Stack sx={{ my: 2 }}>\n          <SynapseSpinner size={30} />\n        </Stack>\n      )}\n      {error && <ErrorBanner error={error} />}\n      {rowsGroupedByCategory && (\n        <FormControl>\n          {Object.keys(rowsGroupedByCategory).map(category => (\n            <RejectionCategory\n              key={category}\n              category={category}\n              rows={rowsGroupedByCategory[category]}\n              selectedRowIds={selectedRowIds}\n              setSelectedRowIds={setSelectedRowIds}\n              rejectionReasonFormTextIndex={rejectionReasonFormTextIndex!}\n            />\n          ))}\n        </FormControl>\n      )}\n      <Typography variant=\"headline3\" sx={{ mt: 1 }} gutterBottom>\n        We’ll generate a response email message based on your selections.\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        If your reasons for rejecting are not shown here, that’s okay! You can\n        edit the complete text of the message on the next screen before sending\n        it.\n      </Typography>\n    </>\n  )\n}\n\ntype DraftRejectionMessageProps = {\n  emailText: string\n  setEmailText: React.Dispatch<React.SetStateAction<string>>\n}\n\n/**\n * Presents a text field form that can be used to directly modify the rejection message.\n */\nfunction DraftRejectionMessage(props: DraftRejectionMessageProps) {\n  const { emailText, setEmailText } = props\n  return (\n    <>\n      <Typography variant=\"headline3\" gutterBottom>\n        Edit the text of the rejection message\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        This message will be sent to the data requester. You may edit it, or add\n        custom text to the message.\n      </Typography>\n      <TextField\n        multiline\n        fullWidth\n        rows={15}\n        value={emailText}\n        onChange={event => {\n          setEmailText(event.target.value)\n        }}\n      />\n    </>\n  )\n}\ntype RejectionMessageObject = {\n  [category: string]: {\n    sectionText: string\n    reasons: string[]\n  }\n}\n\n/**\n * Modal component presented to a data access submission reviewer when they decide to reject a request.\n * The modal contains a form for selecting rejection reasons and a text field for editing the rejection message.\n * After crafting a message, the user can reject the submission and send the message to the requester.\n */\nexport default function RejectDataAccessRequestModal(\n  props: RejectDataAccessRequestModalProps,\n) {\n  const {\n    open,\n    tableId = REJECT_SUBMISSION_CANNED_RESPONSES_TABLE,\n    onClose,\n    submissionId,\n  } = props\n\n  const [step, setStep] = React.useState<1 | 2>(1)\n  const [error, setError] = React.useState<SynapseClientError | null>(null)\n  // selectedRowIds are the row IDs of the canned responses the user selected:\n  const [emailText, setEmailText] = useState('')\n  const [selectedRowIds, setSelectedRowIds] = useState(Set<number>())\n\n  // Fetch the table data\n  const tableQuery = useGetFullTableQueryResults({\n    entityId: tableId,\n    query: {\n      sql: `SELECT * FROM ${tableId}`,\n    },\n    partMask: BUNDLE_MASK_QUERY_RESULTS,\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n  })\n\n  const { data } = tableQuery\n\n  const categoryIndex = data?.queryResult?.queryResults.headers.findIndex(\n    header => header.name.toLowerCase() === CATEGORY_COLUMN_NAME,\n  )\n  const categorySectionEmailTextIndex =\n    data?.queryResult?.queryResults.headers.findIndex(\n      header =>\n        header.name.toLowerCase() === CATEGORY_SECTION_EMAIL_TEXT_COLUMN_NAME,\n    )\n\n  const reasonEmailTextIndex =\n    data?.queryResult?.queryResults.headers.findIndex(\n      header =>\n        header.name.toLowerCase() === REJECTION_REASON_EMAIL_TEXT_COLUMN_NAME,\n    )\n\n  // Transform the selected rejection reasons into an object that can be easily transformed into an email\n  const defaultEmailMessageObject: RejectionMessageObject | undefined =\n    data &&\n    data.queryResult &&\n    selectedRowIds.reduce((messageObject: RejectionMessageObject, rowId) => {\n      const row = data.queryResult!.queryResults.rows.find(\n        row => row.rowId === rowId,\n      )!\n      const category = row.values[categoryIndex!]!\n      const sectionText = row.values[categorySectionEmailTextIndex!]!\n      const reasonText = row.values[reasonEmailTextIndex!]!\n      if (messageObject[category]) {\n        messageObject[category].reasons = [\n          ...messageObject[category].reasons,\n          reasonText,\n        ]\n      } else {\n        messageObject[category] = {\n          sectionText: sectionText,\n          reasons: [reasonText],\n        }\n      }\n      return messageObject\n    }, {})\n\n  // Using the rejection message object, create the email template.\n  const defaultEmailMessage =\n    defaultEmailMessageObject &&\n    DEFAULT_MESSAGE_PREPEND +\n      Object.keys(defaultEmailMessageObject).reduce((message, key) => {\n        const sectionText = defaultEmailMessageObject[key].sectionText\n        message += '\\n' + sectionText + '\\n'\n        for (const reason of defaultEmailMessageObject[key].reasons) {\n          message += '\\n* ' + reason + '\\n'\n        }\n        return message\n      }, '') +\n      DEFAULT_MESSAGE_APPEND\n\n  /* If the selected rows change, then reset the email text. */\n  useEffect(() => {\n    if (defaultEmailMessage) {\n      setEmailText(defaultEmailMessage)\n    }\n    // Specifically fire on update to just selectedRowIds\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedRowIds])\n\n  const { mutate } = useUpdateDataAccessSubmissionState()\n\n  function rejectSubmission(reason: string) {\n    mutate(\n      {\n        submissionId: submissionId.toString(),\n        newState: SubmissionState.REJECTED,\n        rejectedReason: reason,\n      },\n      {\n        onSuccess: () => {\n          setError(null)\n          displayToast(\n            'Submission rejected and message sent to requester',\n            'info',\n          )\n          onClose()\n        },\n        onError: e => {\n          setError(e)\n        },\n      },\n    )\n  }\n\n  // If fetching/processing the table fails, gracefully fall back to just show the email template\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth={'md'} fullWidth>\n      <DialogTitle>\n        <Stack direction=\"row\" alignItems={'center'} gap={'5px'}>\n          Reject Request?\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton onClick={onClose}>\n            <IconSvg icon={'close'} wrap={false} sx={{ color: 'grey.700' }} />\n          </IconButton>\n        </Stack>\n      </DialogTitle>\n      <DialogContent>\n        {step === 1 && (\n          <SelectRejectionReasonsForm\n            tableQuery={tableQuery}\n            selectedRowIds={selectedRowIds}\n            setSelectedRowIds={setSelectedRowIds}\n          />\n        )}\n        {step === 2 && (\n          <DraftRejectionMessage\n            emailText={emailText}\n            setEmailText={setEmailText}\n          />\n        )}\n        {error && (\n          <FullWidthAlert\n            variant={'danger'}\n            description={error.reason}\n            isGlobal={false}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        {step === 2 && (\n          <Button variant=\"outlined\" onClick={() => setStep(1)}>\n            Back\n          </Button>\n        )}\n        <Box sx={{ flexGrow: 1 }} />\n        <Button variant=\"outlined\" onClick={onClose}>\n          Cancel\n        </Button>\n        {step === 1 && (\n          <Button variant=\"contained\" onClick={() => setStep(2)}>\n            Generate Email\n          </Button>\n        )}\n        {step === 2 && (\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              rejectSubmission(emailText)\n            }}\n          >\n            Reject and Notify Requester\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","capitalize","composeClasses","SwitchBaseRoot","styled","ButtonBase","_extends","SwitchBaseInput","SwitchBase","React.forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","setCheckedState","useControlled","muiFormControl","useFormControl","handleFocus","event","handleBlur","handleInputChange","newChecked","hasLabelFor","_jsxs","clsx","_jsx","SwitchBase$1","CheckBoxOutlineBlankIcon","createSvgIcon","CheckBoxIcon","IndeterminateCheckBoxIcon","getCheckboxUtilityClass","checkboxClasses","checkboxClasses$1","indeterminate","color","composedClasses","CheckboxRoot","prop","rootShouldForwardProp","styles","theme","alpha","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIconProp","size","indeterminateIcon","React.cloneElement","Checkbox$1","getFormControlLabelUtilityClasses","formControlLabelClasses","formControlLabelClasses$1","labelPlacement","error","FormControlLabelRoot","FormControlLabel","_slotProps$typography","componentsProps","control","disableTypography","labelProp","slotProps","controlProps","key","fcs","formControlState","typographySlotProps","label","Typography","FormControlLabel$1","CATEGORY_COLUMN_NAME","CATEGORY_SECTION_EMAIL_TEXT_COLUMN_NAME","REJECTION_REASON_FORM_TEXT_COLUMN_NAME","REJECTION_REASON_EMAIL_TEXT_COLUMN_NAME","DEFAULT_MESSAGE_PREPEND","DEFAULT_MESSAGE_APPEND","RejectionCategory","category","rows","selectedRowIds","setSelectedRowIds","rejectionReasonFormTextIndex","isExpanded","setIsExpanded","React","jsxs","Fragment","jsx","IconSvg","Collapse","Stack","row","SelectRejectionReasonsForm","tableQuery","tableData","isLoading","categoryIndex","_a","header","_b","rowsGroupedByCategory","acc","SynapseSpinner","ErrorBanner","FormControl","DraftRejectionMessage","emailText","setEmailText","TextField","RejectDataAccessRequestModal","open","tableId","REJECT_SUBMISSION_CANNED_RESPONSES_TABLE","onClose","submissionId","step","setStep","setError","useState","Set","useGetFullTableQueryResults","BUNDLE_MASK_QUERY_RESULTS","data","categorySectionEmailTextIndex","reasonEmailTextIndex","_c","defaultEmailMessageObject","messageObject","rowId","row2","sectionText","reasonText","defaultEmailMessage","message","reason","useEffect","mutate","useUpdateDataAccessSubmissionState","rejectSubmission","SubmissionState","displayToast","e","Dialog","DialogTitle","Box","IconButton","DialogContent","FullWidthAlert","DialogActions","Button"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}