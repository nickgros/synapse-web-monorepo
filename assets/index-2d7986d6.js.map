{"version":3,"file":"index-2d7986d6.js","sources":["../../src/mocks/entity/mockDataset.ts","../../src/mocks/entity/mockDatasetCollection.ts","../../src/mocks/entity/mockFileView.ts","../../src/mocks/entity/mockProjectView.ts","../../src/mocks/entity/index.ts"],"sourcesContent":["import {\n  Dataset,\n  EntityBundle,\n  EntityHeader,\n  EntityPath,\n  EntityType,\n  RestrictionLevel,\n  VersionInfo,\n} from '@sage-bionetworks/synapse-types'\nimport { MOCK_USER_ID, MOCK_USER_ID_2 } from '../user/mock_user_profile'\nimport { MockEntityData } from './MockEntityData'\nimport mockProjectEntityData from './mockProject'\n\nexport const MOCK_DATASET_ENTITY_ID = `syn60000`\nexport const MOCK_DATASET_NAME = 'A Mocked Dataset'\n\nexport const mockDatasetEntity: Dataset = {\n  id: MOCK_DATASET_ENTITY_ID,\n  parentId: mockProjectEntityData.id,\n  name: MOCK_DATASET_NAME,\n  concreteType: 'org.sagebionetworks.repo.model.table.Dataset',\n  createdBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID_2.toString(),\n  createdOn: '2020-01-01T00:00:00.000Z',\n  modifiedOn: '2020-02-01T00:00:00.000Z',\n  versionNumber: 3,\n  versionLabel: 'in progress',\n  versionComment: 'in progress',\n  isLatestVersion: true,\n  etag: '00000000-0000-0000-0000-000000000000',\n  items: [],\n  columnIds: [],\n  isSearchEnabled: false,\n}\n\nconst mockHeader: EntityHeader = {\n  id: MOCK_DATASET_ENTITY_ID,\n  type: 'org.sagebionetworks.repo.model.table.Dataset',\n  name: MOCK_DATASET_NAME,\n  benefactorId: parseInt(mockProjectEntityData.id),\n  createdOn: '2020-01-01T00:00:00.000Z',\n  modifiedOn: '2020-02-01T00:00:00.000Z',\n  createdBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  versionNumber: 3,\n  versionLabel: 'in progress',\n  isLatestVersion: true,\n}\n\nconst path: EntityPath = {\n  path: [\n    {\n      name: 'root',\n      id: 'syn4489',\n      type: 'org.sagebionetworks.repo.model.Folder',\n    },\n    {\n      name: mockProjectEntityData.name,\n      id: mockProjectEntityData.id,\n      type: 'org.sagebionetworks.repo.model.Project',\n    },\n    {\n      name: MOCK_DATASET_NAME,\n      id: MOCK_DATASET_ENTITY_ID,\n      type: 'org.sagebionetworks.repo.model.FileEntity',\n    },\n  ],\n}\n\nconst versions: Record<number, Dataset> = {\n  1: {\n    ...mockDatasetEntity,\n    versionNumber: 1,\n    versionLabel: 'snapshot 1',\n    versionComment: '',\n    isLatestVersion: false,\n  },\n  2: {\n    ...mockDatasetEntity,\n    versionNumber: 2,\n    versionLabel: 'snapshot 2',\n    versionComment: '',\n    isLatestVersion: false,\n  },\n}\n\nconst versionInfo: VersionInfo[] = [\n  {\n    id: MOCK_DATASET_ENTITY_ID,\n    versionNumber: 2,\n    versionLabel: 'snapshot 2',\n    versionComment: '',\n    isLatestVersion: false,\n    modifiedBy: MOCK_USER_ID.toString(),\n    modifiedByPrincipalId: MOCK_USER_ID.toString(),\n    modifiedOn: '2022-03-22T18:50:22.336Z',\n  },\n  {\n    id: MOCK_DATASET_ENTITY_ID,\n    versionNumber: 1,\n    versionLabel: 'snapshot 1',\n    versionComment: '',\n    isLatestVersion: false,\n    modifiedBy: MOCK_USER_ID.toString(),\n    modifiedByPrincipalId: MOCK_USER_ID.toString(),\n    modifiedOn: '2022-03-22T18:47:34.797Z',\n  },\n]\n\nconst bundle: EntityBundle = {\n  accessControlList: { id: '239443242', resourceAccess: [] },\n  annotations: {\n    id: '34243',\n    etag: '00000000-0000-0000-0000-000000000000',\n    annotations: {},\n  },\n  benefactorAcl: { id: '239443242', resourceAccess: [] },\n  fileHandles: [],\n  hasChildren: false,\n  restrictionInformation: {\n    restrictionLevel: RestrictionLevel.OPEN,\n    hasUnmetAccessRequirement: false,\n  },\n  threadCount: 0,\n  entity: mockDatasetEntity,\n  entityType: EntityType.DATASET,\n  path: path,\n  permissions: {\n    canView: true,\n    canEdit: true,\n    canMove: true,\n    canAddChild: true,\n    canCertifiedUserEdit: true,\n    canCertifiedUserAddChild: true,\n    isCertifiedUser: true,\n    canChangePermissions: true,\n    canChangeSettings: true,\n    canDelete: true,\n    canDownload: true,\n    canUpload: true,\n    canEnableInheritance: true,\n    ownerPrincipalId: 3350396,\n    canPublicRead: true,\n    canModerate: true,\n    isCertificationRequired: true,\n    isEntityOpenData: false,\n  },\n}\n\nconst mockDatasetData = {\n  id: MOCK_DATASET_ENTITY_ID,\n  name: MOCK_DATASET_NAME,\n  entity: mockDatasetEntity,\n  entityHeader: mockHeader,\n  path: path,\n  bundle: bundle,\n  versions: versions,\n  versionInfo: versionInfo,\n} satisfies MockEntityData<Dataset>\n\nexport default mockDatasetData\n","import { DatasetCollection, EntityPath } from '@sage-bionetworks/synapse-types'\nimport { MOCK_USER_ID } from '../user/mock_user_profile'\nimport mockDatasetData from './mockDataset'\nimport { MockEntityData } from './MockEntityData'\nimport mockProjectEntityData from './mockProject'\n\nconst MOCK_DATASET_COLLECTION_ENTITY_ID = `syn70000`\nconst MOCK_DATASET_COLLECTION_NAME = 'A Mocked Dataset Collection'\n\nexport const mockDatasetCollectionEntity: DatasetCollection = {\n  id: MOCK_DATASET_COLLECTION_ENTITY_ID,\n  parentId: mockProjectEntityData.id,\n  name: MOCK_DATASET_COLLECTION_NAME,\n  concreteType: 'org.sagebionetworks.repo.model.table.DatasetCollection',\n  createdBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  etag: '00000000-0000-0000-0000-000000000000',\n  items: [\n    {\n      entityId: mockDatasetData.id,\n      versionNumber: 1,\n    },\n  ],\n  columnIds: [],\n  isSearchEnabled: false,\n}\n\nconst path: EntityPath = {\n  path: [\n    {\n      name: 'root',\n      id: 'syn4489',\n      type: 'org.sagebionetworks.repo.model.Folder',\n    },\n    {\n      name: mockProjectEntityData.name,\n      id: mockProjectEntityData.id,\n      type: 'org.sagebionetworks.repo.model.Project',\n    },\n    {\n      name: MOCK_DATASET_COLLECTION_NAME,\n      id: MOCK_DATASET_COLLECTION_ENTITY_ID,\n      type: 'org.sagebionetworks.repo.model.FileEntity',\n    },\n  ],\n}\n\nconst mockDatasetCollectionData: MockEntityData<DatasetCollection> = {\n  id: MOCK_DATASET_COLLECTION_ENTITY_ID,\n  name: MOCK_DATASET_COLLECTION_NAME,\n  entity: mockDatasetCollectionEntity,\n  path: path,\n}\n\nexport default mockDatasetCollectionData\n","import { MOCK_USER_ID } from '../user/mock_user_profile'\nimport {\n  ENTITY_VIEW_TYPE_MASK_FILE,\n  EntityHeader,\n  EntityView,\n} from '@sage-bionetworks/synapse-types'\nimport mockProject from './mockProject'\nimport { MockEntityData } from './MockEntityData'\nimport { MOCK_TABLE_ENTITY_ID } from './mockTableEntity'\n\nexport const MOCK_FILE_VIEW_ENTITY_ID = `syn50000`\nexport const MOCK_FILE_VIEW_NAME = 'Mocked File View'\nexport const mockFileViewEntity = {\n  id: MOCK_FILE_VIEW_ENTITY_ID,\n  parentId: mockProject.id,\n  name: MOCK_FILE_VIEW_NAME,\n  concreteType: 'org.sagebionetworks.repo.model.table.EntityView',\n  createdBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  etag: '00000000-0000-0000-0000-000000000000',\n  columnIds: [],\n  viewTypeMask: ENTITY_VIEW_TYPE_MASK_FILE,\n  scopeIds: [mockProject.id],\n  isSearchEnabled: true,\n  versionNumber: 1,\n  versionLabel: 'in progress',\n  createdOn: '2023-02-09T12:44:35.457Z',\n  modifiedOn: '2023-03-17T17:10:36.915Z',\n  isLatestVersion: true,\n} satisfies EntityView\n\nconst mockFileViewEntityHeader: EntityHeader = {\n  name: mockFileViewEntity.name,\n  id: MOCK_TABLE_ENTITY_ID,\n  type: 'org.sagebionetworks.repo.model.table.EntityView',\n  versionNumber: mockFileViewEntity.versionNumber,\n  versionLabel: mockFileViewEntity.versionLabel,\n  benefactorId: parseInt(mockProject.id),\n  createdOn: mockFileViewEntity.createdOn,\n  modifiedOn: mockFileViewEntity.modifiedOn,\n  createdBy: mockFileViewEntity.createdBy,\n  modifiedBy: mockFileViewEntity.modifiedBy,\n  isLatestVersion: mockFileViewEntity.isLatestVersion,\n}\n\nexport const mockFileViewData: MockEntityData<EntityView> = {\n  id: MOCK_FILE_VIEW_ENTITY_ID,\n  name: MOCK_FILE_VIEW_NAME,\n  entity: mockFileViewEntity,\n  entityHeader: mockFileViewEntityHeader,\n}\n","import { MOCK_USER_ID } from '../user/mock_user_profile'\nimport {\n  ENTITY_VIEW_TYPE_MASK_PROJECT,\n  EntityHeader,\n  EntityView,\n} from '@sage-bionetworks/synapse-types'\nimport mockProject from './mockProject'\nimport { MockEntityData } from './MockEntityData'\nimport { MOCK_TABLE_ENTITY_ID } from './mockTableEntity'\n\nexport const MOCK_PROJECT_VIEW_ENTITY_ID = `syn500001`\nexport const MOCK_PROJECT_VIEW_NAME = 'Mocked Project View'\n\nexport const mockProjectViewEntity = {\n  id: MOCK_PROJECT_VIEW_ENTITY_ID,\n  parentId: mockProject.id,\n  name: MOCK_PROJECT_VIEW_NAME,\n  concreteType: 'org.sagebionetworks.repo.model.table.EntityView',\n  createdBy: MOCK_USER_ID.toString(),\n  modifiedBy: MOCK_USER_ID.toString(),\n  etag: '00000000-0000-0000-0000-000000000000',\n  columnIds: [],\n  viewTypeMask: ENTITY_VIEW_TYPE_MASK_PROJECT,\n  scopeIds: [mockProject.id],\n  isSearchEnabled: true,\n  versionNumber: 1,\n  versionLabel: 'in progress',\n  createdOn: '2023-02-09T12:44:35.457Z',\n  modifiedOn: '2023-03-17T17:10:36.915Z',\n  isLatestVersion: true,\n} satisfies EntityView\n\nconst mockProjectViewEntityHeader: EntityHeader = {\n  name: mockProjectViewEntity.name,\n  id: MOCK_TABLE_ENTITY_ID,\n  type: 'org.sagebionetworks.repo.model.table.TableEntity',\n  versionNumber: mockProjectViewEntity.versionNumber,\n  versionLabel: mockProjectViewEntity.versionLabel,\n  benefactorId: parseInt(mockProject.id),\n  createdOn: mockProjectViewEntity.createdOn,\n  modifiedOn: mockProjectViewEntity.modifiedOn,\n  createdBy: mockProjectViewEntity.createdBy,\n  modifiedBy: mockProjectViewEntity.modifiedBy,\n  isLatestVersion: mockProjectViewEntity.isLatestVersion,\n}\n\nexport const mockProjectViewData: MockEntityData<EntityView> = {\n  id: MOCK_PROJECT_VIEW_ENTITY_ID,\n  name: MOCK_PROJECT_VIEW_NAME,\n  entity: mockProjectViewEntity,\n  entityHeader: mockProjectViewEntityHeader,\n}\n","import mockDatasetData from './mockDataset'\nimport mockDatasetCollectionData from './mockDatasetCollection'\nimport { MockEntityData } from './MockEntityData'\nimport { mockFileEntities } from './mockFileEntity'\nimport { mockProjectsEntityData } from './mockProject'\nimport mockTableEntityData from './mockTableEntity'\nimport { mockFileViewData } from './mockFileView'\nimport { mockProjectViewData } from './mockProjectView'\n\nconst mockEntities: MockEntityData[] = [\n  ...mockFileEntities,\n  ...mockProjectsEntityData,\n  mockDatasetData,\n  mockDatasetCollectionData,\n  mockTableEntityData,\n  mockFileViewData,\n  mockProjectViewData,\n]\n\nexport default mockEntities\n"],"names":["MOCK_DATASET_ENTITY_ID","MOCK_DATASET_NAME","mockDatasetEntity","mockProjectEntityData","MOCK_USER_ID","MOCK_USER_ID_2","mockHeader","path","versions","versionInfo","bundle","RestrictionLevel","EntityType","mockDatasetData","MOCK_DATASET_COLLECTION_ENTITY_ID","MOCK_DATASET_COLLECTION_NAME","mockDatasetCollectionEntity","mockDatasetCollectionData","MOCK_FILE_VIEW_ENTITY_ID","MOCK_FILE_VIEW_NAME","mockFileViewEntity","mockProject","ENTITY_VIEW_TYPE_MASK_FILE","mockFileViewEntityHeader","MOCK_TABLE_ENTITY_ID","mockFileViewData","MOCK_PROJECT_VIEW_ENTITY_ID","MOCK_PROJECT_VIEW_NAME","mockProjectViewEntity","ENTITY_VIEW_TYPE_MASK_PROJECT","mockProjectViewEntityHeader","mockProjectViewData","mockEntities","mockFileEntities","mockProjectsEntityData","mockTableEntityData"],"mappings":"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"}