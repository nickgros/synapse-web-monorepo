{"version":3,"file":"UploadDestination-5ff3844f.js","sources":["../../src/lib/utils/synapseTypes/File/UploadDestination.ts"],"sourcesContent":["/**\n * The upload destination contains information to start an upload of a file generated according to the underlying StorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/UploadDestination.html\n */\nexport interface UploadDestination {\n  /* Indicates which implementation this object represents. */\n  concreteType:\n    | ExternalObjectStoreUploadDestination['concreteType']\n    | ExternalUploadDestination['concreteType']\n    | BaseKeyUploadDestination['concreteType']\n  /* the unique id for the storage location, that points to the StorageLocationSetting */\n  storageLocationId: number\n  /* The enumeration of possible upload types. */\n  uploadType: UploadType\n  /* If set, the client should show this banner every time an upload is initiated */\n  banner: string\n}\n\n/**\n * The upload destination contains information necessary to start an upload to an S3 bucket not managed by Synapse.\n * This destination is mapped from an ExternalObjectStorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalObjectStoreUploadDestination.html\n */\nexport interface ExternalObjectStoreUploadDestination\n  extends UploadDestination {\n  concreteType: 'org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination'\n  /* endpoint URL of the S3 service (for example: 'https://s3.amazonaws.com') */\n  endpointUrl: string\n  /* the bucket to use */\n  bucket: string\n  /* A UUID prefix used to identify the file to be uploaded. This field will have a new, unique value every time a new UploadDestination is retrieved. */\n  keyPrefixUUID: string\n}\n\n/**\n * This upload destination contains information to start an upload to an SFTP or HTTPS destination. The destination is\n * mapped from an ExternalStorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalUploadDestination.html\n */\nexport interface ExternalUploadDestination extends UploadDestination {\n  concreteType: 'org.sagebionetworks.repo.model.file.ExternalUploadDestination'\n  /* the generated file URL for uploading to the external destination */\n  url: string\n}\n\n/**\n * An upload destination with an optional base key.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/BaseKeyUploadDestination.html\n */\nexport interface BaseKeyUploadDestination extends UploadDestination {\n  concreteType:\n    | StsUploadDestination['concreteType']\n    | ExternalGoogleCloudUploadDestination['concreteType']\n  /* the optional base key, which acts as a prefix or a base folder */\n  baseKey: string\n}\n\nconst EXTERNAL_GOOGLE_CLOUD_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination'\nexport type EXTERNAL_GOOGLE_CLOUD_UPLOAD_DESTINATION_CONCRETE_TYPE =\n  typeof EXTERNAL_GOOGLE_CLOUD_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE\n\n/**\n * This upload destination contains information to start an upload to an external Google Cloud Storage bucket connected\n * with synapse. The destination is mapped from an ExternalGoogleCloudStorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalGoogleCloudUploadDestination.html\n */\nexport interface ExternalGoogleCloudUploadDestination\n  extends BaseKeyUploadDestination {\n  concreteType: EXTERNAL_GOOGLE_CLOUD_UPLOAD_DESTINATION_CONCRETE_TYPE\n  /* the bucket to use */\n  bucket: string\n}\n\n/**\n * An StsUploadDestination provides settings to enable Synapse to call AWS Security Token Service (STS) to get temporary\n * AWS credentials\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/StsUploadDestination.html\n */\nexport interface StsUploadDestination extends BaseKeyUploadDestination {\n  concreteType:\n    | S3_UPLOAD_DESTINATION_CONCRETE_TYPE\n    | EXTERNAL_S3_UPLOAD_DESTINATION_CONCRETE_TYPE\n  /* Enables STS on this Storage Location */\n  stsEnabled: boolean\n}\n\nconst EXTERNAL_S3_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.file.ExternalS3UploadDestination'\nexport type EXTERNAL_S3_UPLOAD_DESTINATION_CONCRETE_TYPE =\n  typeof EXTERNAL_S3_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE\n\n/**\n * This upload destination contains information to start an upload to an external external S3 bucket connected with\n * Synapse. The destination is mapped from an ExternalS3StorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalS3UploadDestination.html\n */\nexport interface ExternalS3UploadDestination extends StsUploadDestination {\n  concreteType: EXTERNAL_S3_UPLOAD_DESTINATION_CONCRETE_TYPE\n  /* the S3 endpoint url (default: https://s3.amazonaws.com) */\n  endpointUrl: string\n  /* the bucket to use */\n  bucket: string\n}\n\nconst S3_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.file.S3UploadDestination'\nexport type S3_UPLOAD_DESTINATION_CONCRETE_TYPE =\n  typeof S3_UPLOAD_DESTINATION_CONCRETE_TYPE_VALUE\n\n/**\n * The upload destination contains information to start an upload to the default Synapse storage location that exists on\n * Amazon S3. This destination is mapped from an S3StorageLocationSetting.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/S3UploadDestination.html\n */\nexport interface S3UploadDestination extends StsUploadDestination {\n  concreteType: S3_UPLOAD_DESTINATION_CONCRETE_TYPE\n}\n\n/**\n * The enumeration of possible upload types.\n *\n * https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/UploadType.html\n */\nexport enum UploadType {\n  S3 = 'S3',\n  GOOGLECLOUDSTORAGE = 'GOOGLECLOUDSTORAGE',\n  SFTP = 'SFTP',\n  HTTPS = 'HTTPS',\n  PROXYLOCAL = 'PROXYLOCAL',\n  NONE = 'NONE',\n}\n"],"names":["UploadType"],"mappings":"AAoIY,IAAAA,GAAAA,IACVA,EAAA,GAAK,KACLA,EAAA,mBAAqB,qBACrBA,EAAA,KAAO,OACPA,EAAA,MAAQ,QACRA,EAAA,WAAa,aACbA,EAAA,KAAO,OANGA,IAAAA,GAAA,CAAA,CAAA"}