import{l as u}from"./index-c0378e12.js";import{g as $}from"./entityHandlers-f4d87443.js";import{a as A,g as H}from"./userProfileHandlers-bf0f110a.js";import{g as w,B as R}from"./getEndpoint-ac94413e.js";import{c as P}from"./accessRequirementHandlers-4c6dbdd4.js";import{g as C}from"./MockSubmission-cf51a29e.js";import{a as N,g as M}from"./fileHandlers-e3bcd374.js";import{g as U}from"./researchProjectHandlers-6cd6a9c7.js";import{bn as b,bo as j,bp as _,bq as L,br as O}from"./ApplicationSessionManager-9bd355c2.js";import{q as p,n as y}from"./index-01eb1463.js";import{m as S,a as T}from"./mock_discussion-a1696cbc.js";import{M as l}from"./mock_user_profile-cefba5e4.js";import{m as B}from"./mockProject-f1efd7e3.js";import{u as E}from"./uniqueId-4d05949d.js";import{f as D}from"./fakerUtils-9367b81c.js";import{r as F}from"./remove-f204f5d4.js";import{c as V,b as q,a as K}from"./tableQueryHandlers-c1a9346b.js";import{a as g}from"./mockEvaluationQueue-fca98fa1.js";import{M as W}from"./mockAnnotationColumns-3741f017.js";import{g as X}from"./personalAccessTokenHandlers-0769bd12.js";import{g as Y,a as G}from"./teamHandlers-98e09d2d.js";const z=[...S],I=[...T];function J(t,e){return I.filter(r=>r.forumId===t).filter(r=>{switch(e){case p.NO_FILTER:return!0;case p.DELETED_ONLY:return r.isDeleted;case p.EXCLUDE_DELETED:return!r.isDeleted}})}function Q(t){return[u.rest.get(`${t}${b}/:id`,async(e,r,s)=>{let o=404,a={reason:`MSW could not find a mock forum object with ID ${e.params.id}`};const i=z.find(n=>n.id===e.params.id);return i&&(o=200,a=i),r(s.status(o),s.json(a))}),u.rest.get(`${t}${j}/:id`,async(e,r,s)=>{let o=404,a={reason:`MSW could not find a mock discussion thread bundle object with ID ${e.params.id}`};e.params.id==="messageUrl"&&(a={reason:"GET /thread/messageUrl is not yet implemented"});const i=I.find(n=>n.id===e.params.id);return i&&(o=200,a=i),r(s.status(o),s.json(a))}),u.rest.post(`${t}${j}`,async(e,r,s)=>{const o=await e.json(),a={id:E(),forumId:o.forumId,projectId:B.id,title:o.title,createdOn:new Date().toISOString(),createdBy:String(l),modifiedOn:new Date().toISOString(),etag:"etag",messageKey:"todo key",numberOfViews:0,numberOfReplies:0,lastActivity:new Date().toISOString(),activeAuthors:[String(l)],isEdited:!1,isDeleted:!1,isPinned:!1};return I.push(a),r(s.status(201),s.json(a))}),u.rest.get(`${t}${_(":forumId")}`,async(e,r,s)=>{const o=e.url.searchParams.get("offset"),a=o?parseInt(o):0,i=e.url.searchParams.get("limit"),n=i?parseInt(i):10,m=e.params.filter??p.EXCLUDE_DELETED,c=J(e.params.forumId,m),f={results:c.slice(a,a+n),totalNumberOfResults:c.length};return r(s.status(200),s.json(f))}),u.rest.get(`${t}${b}/:id/moderators`,async(e,r,s)=>{const o={results:[String(l)],totalNumberOfResults:1};return r(s.status(200),s.json(o))})]}function v(t){return{subscriptionId:String(D.number.int({min:1e3,max:9999})),subscriberId:String(l),createdOn:D.date.anytime().toISOString(),...t}}const Z=S.map(t=>v({objectId:t.id,objectType:y.FORUM})),x=T.map(t=>v({objectType:y.THREAD,objectId:t.id})),d=[...Z,...x];function h(t,e="ASC",r=0,s=10,o){const a=d.filter(n=>t?n.objectType===t:!0).filter(n=>o?o.includes(n.objectId):!0).sort((n,m)=>{const c=new Date(m.createdOn).getTime()-new Date(n.createdOn).getTime();return e==="ASC"?c:-1*c}),i=a.length;return{results:a.slice(r,r+s),totalNumberOfResults:i}}function k(t){return[u.rest.get(`${t}/repo/v1/subscription/all`,async(e,r,s)=>{const o=e.url.searchParams.get("objectType")??void 0,a=e.url.searchParams.get("sortDirection")??void 0,i=e.url.searchParams.get("offset"),n=i?parseInt(i):void 0,m=e.url.searchParams.get("limit"),c=m?parseInt(m):void 0,f=h(o??void 0,a,n,c);return r(s.status(200),s.json(f))}),u.rest.post(`${t}/repo/v1/subscription/list`,async(e,r,s)=>{const o=await e.json(),a=h(o.objectType,o.sortDirection,void 0,void 0,o.idList);return r(s.status(200),s.json(a))}),u.rest.post(`${t}/repo/v1/subscription`,async(e,r,s)=>{const o=await e.json(),a={subscriptionId:E(),subscriberId:String(l),objectId:o.objectId,objectType:o.objectType,createdOn:new Date().toISOString()};return d.push(a),r(s.status(201),s.json(a))}),u.rest.delete(`${t}/repo/v1/subscription/:id`,async(e,r,s)=>{const o=e.params.id;return F(d,a=>a.subscriptionId===o),r(s.status(200),s.body(""))}),u.rest.post(`${t}/repo/v1/subscription/subscribers`,async(e,r,s)=>{const o=await e.json(),i={subscribers:d.filter(n=>n.objectType===o.objectType&&n.objectId===o.objectId).map(n=>n.subscriberId)};return r(s.status(200),s.json(i))})]}function tt(t){return[u.rest.get(`${t}${L(":evaluationId")}`,async(e,r,s)=>{let o=404,a={reason:`Mock Service worker could not find a mock evaluation queue with ID ${e.params.evaluationId}`};const i=g.find(n=>n.id===e.params.entityId);return i&&(a=i,o=200),r(s.status(o),s.json(a))}),u.rest.get(`${t}${O}`,async(e,r,s)=>{let o=200,a={results:g,totalNumberOfResults:g.length};return r(s.status(o),s.json(a))})]}const st=t=>[u.rest.options("*",async(e,r,s)=>r(s.status(200))),u.rest.get(`${t}/auth/v1/authenticatedOn`,async(e,r,s)=>r(s.status(200),s.json({authenticatedOn:new Date().toISOString()}))),...$(t),...A(t),H(t,!0,!0),...C(t),...P(t),...N(t),...U(t),...M(t),...Q(t),...k(t),...tt(t),V(t),...q(W,t),...K(t),...X(t),...Y(t),...G(t)];st(w(R.REPO_ENDPOINT));export{st as g};
